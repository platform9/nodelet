// Code generated by MockGen. DO NOT EDIT.
// Source: ../pkg/utils/container_runtime/container_runtime.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockContainerUtils is a mock of ContainerUtils interface.
type MockContainerUtils struct {
	ctrl     *gomock.Controller
	recorder *MockContainerUtilsMockRecorder
}

// MockContainerUtilsMockRecorder is the mock recorder for MockContainerUtils.
type MockContainerUtilsMockRecorder struct {
	mock *MockContainerUtils
}

// NewMockContainerUtils creates a new mock instance.
func NewMockContainerUtils(ctrl *gomock.Controller) *MockContainerUtils {
	mock := &MockContainerUtils{ctrl: ctrl}
	mock.recorder = &MockContainerUtilsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContainerUtils) EXPECT() *MockContainerUtilsMockRecorder {
	return m.recorder
}

// EnsureContainerDestroyed mocks base method.
func (m *MockContainerUtils) EnsureContainerDestroyed(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureContainerDestroyed", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureContainerDestroyed indicates an expected call of EnsureContainerDestroyed.
func (mr *MockContainerUtilsMockRecorder) EnsureContainerDestroyed(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureContainerDestroyed", reflect.TypeOf((*MockContainerUtils)(nil).EnsureContainerDestroyed), arg0, arg1, arg2)
}

// EnsureContainerStoppedOrNonExistent mocks base method.
func (m *MockContainerUtils) EnsureContainerStoppedOrNonExistent(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureContainerStoppedOrNonExistent", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureContainerStoppedOrNonExistent indicates an expected call of EnsureContainerStoppedOrNonExistent.
func (mr *MockContainerUtilsMockRecorder) EnsureContainerStoppedOrNonExistent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureContainerStoppedOrNonExistent", reflect.TypeOf((*MockContainerUtils)(nil).EnsureContainerStoppedOrNonExistent), arg0, arg1)
}

// EnsureFreshContainerRunning mocks base method.
func (m *MockContainerUtils) EnsureFreshContainerRunning(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureFreshContainerRunning", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureFreshContainerRunning indicates an expected call of EnsureFreshContainerRunning.
func (mr *MockContainerUtilsMockRecorder) EnsureFreshContainerRunning(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureFreshContainerRunning", reflect.TypeOf((*MockContainerUtils)(nil).EnsureFreshContainerRunning), arg0, arg1, arg2)
}

// MockImageUtils is a mock of ImageUtils interface.
type MockImageUtils struct {
	ctrl     *gomock.Controller
	recorder *MockImageUtilsMockRecorder
}

// MockImageUtilsMockRecorder is the mock recorder for MockImageUtils.
type MockImageUtilsMockRecorder struct {
	mock *MockImageUtils
}

// NewMockImageUtils creates a new mock instance.
func NewMockImageUtils(ctrl *gomock.Controller) *MockImageUtils {
	mock := &MockImageUtils{ctrl: ctrl}
	mock.recorder = &MockImageUtilsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageUtils) EXPECT() *MockImageUtilsMockRecorder {
	return m.recorder
}

// LoadImagesFromDir mocks base method.
func (m *MockImageUtils) LoadImagesFromDir(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadImagesFromDir", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadImagesFromDir indicates an expected call of LoadImagesFromDir.
func (mr *MockImageUtilsMockRecorder) LoadImagesFromDir(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadImagesFromDir", reflect.TypeOf((*MockImageUtils)(nil).LoadImagesFromDir), arg0, arg1, arg2)
}

// LoadImagesFromFile mocks base method.
func (m *MockImageUtils) LoadImagesFromFile(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadImagesFromFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadImagesFromFile indicates an expected call of LoadImagesFromFile.
func (mr *MockImageUtilsMockRecorder) LoadImagesFromFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadImagesFromFile", reflect.TypeOf((*MockImageUtils)(nil).LoadImagesFromFile), arg0, arg1)
}
