//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (C) 2015-2020 Platform9 Systems, Inc.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	sunpike "github.com/platform9/pf9-qbert/sunpike/apiserver/pkg/apis/sunpike"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AddonsOpts)(nil), (*sunpike.AddonsOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AddonsOpts_To_sunpike_AddonsOpts(a.(*AddonsOpts), b.(*sunpike.AddonsOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AddonsOpts)(nil), (*AddonsOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AddonsOpts_To_v1alpha1_AddonsOpts(a.(*sunpike.AddonsOpts), b.(*AddonsOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AppCatalogOpts)(nil), (*sunpike.AppCatalogOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AppCatalogOpts_To_sunpike_AppCatalogOpts(a.(*AppCatalogOpts), b.(*sunpike.AppCatalogOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AppCatalogOpts)(nil), (*AppCatalogOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AppCatalogOpts_To_v1alpha1_AppCatalogOpts(a.(*sunpike.AppCatalogOpts), b.(*AppCatalogOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CNIOpts)(nil), (*sunpike.CNIOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_CNIOpts_To_sunpike_CNIOpts(a.(*CNIOpts), b.(*sunpike.CNIOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CNIOpts)(nil), (*CNIOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CNIOpts_To_v1alpha1_CNIOpts(a.(*sunpike.CNIOpts), b.(*CNIOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CPUManagerOpts)(nil), (*sunpike.CPUManagerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_CPUManagerOpts_To_sunpike_CPUManagerOpts(a.(*CPUManagerOpts), b.(*sunpike.CPUManagerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CPUManagerOpts)(nil), (*CPUManagerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CPUManagerOpts_To_v1alpha1_CPUManagerOpts(a.(*sunpike.CPUManagerOpts), b.(*CPUManagerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CalicoOpts)(nil), (*sunpike.CalicoOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_CalicoOpts_To_sunpike_CalicoOpts(a.(*CalicoOpts), b.(*sunpike.CalicoOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CalicoOpts)(nil), (*CalicoOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CalicoOpts_To_v1alpha1_CalicoOpts(a.(*sunpike.CalicoOpts), b.(*CalicoOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAutoScalerOpts)(nil), (*sunpike.ClusterAutoScalerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(a.(*ClusterAutoScalerOpts), b.(*sunpike.ClusterAutoScalerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAutoScalerOpts)(nil), (*ClusterAutoScalerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAutoScalerOpts_To_v1alpha1_ClusterAutoScalerOpts(a.(*sunpike.ClusterAutoScalerOpts), b.(*ClusterAutoScalerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DockerOpts)(nil), (*sunpike.DockerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_DockerOpts_To_sunpike_DockerOpts(a.(*DockerOpts), b.(*sunpike.DockerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.DockerOpts)(nil), (*DockerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_DockerOpts_To_v1alpha1_DockerOpts(a.(*sunpike.DockerOpts), b.(*DockerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EtcdOpts)(nil), (*sunpike.EtcdOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EtcdOpts_To_sunpike_EtcdOpts(a.(*EtcdOpts), b.(*sunpike.EtcdOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.EtcdOpts)(nil), (*EtcdOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_EtcdOpts_To_v1alpha1_EtcdOpts(a.(*sunpike.EtcdOpts), b.(*EtcdOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlannelOpts)(nil), (*sunpike.FlannelOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FlannelOpts_To_sunpike_FlannelOpts(a.(*FlannelOpts), b.(*sunpike.FlannelOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.FlannelOpts)(nil), (*FlannelOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_FlannelOpts_To_v1alpha1_FlannelOpts(a.(*sunpike.FlannelOpts), b.(*FlannelOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Host)(nil), (*sunpike.Host)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Host_To_sunpike_Host(a.(*Host), b.(*sunpike.Host), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.Host)(nil), (*Host)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_Host_To_v1alpha1_Host(a.(*sunpike.Host), b.(*Host), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HostList)(nil), (*sunpike.HostList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_HostList_To_sunpike_HostList(a.(*HostList), b.(*sunpike.HostList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.HostList)(nil), (*HostList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_HostList_To_v1alpha1_HostList(a.(*sunpike.HostList), b.(*HostList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HostPhase)(nil), (*sunpike.HostPhase)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_HostPhase_To_sunpike_HostPhase(a.(*HostPhase), b.(*sunpike.HostPhase), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.HostPhase)(nil), (*HostPhase)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_HostPhase_To_v1alpha1_HostPhase(a.(*sunpike.HostPhase), b.(*HostPhase), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HostSpec)(nil), (*sunpike.HostSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_HostSpec_To_sunpike_HostSpec(a.(*HostSpec), b.(*sunpike.HostSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.HostSpec)(nil), (*HostSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_HostSpec_To_v1alpha1_HostSpec(a.(*sunpike.HostSpec), b.(*HostSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KeepalivedOpts)(nil), (*sunpike.KeepalivedOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KeepalivedOpts_To_sunpike_KeepalivedOpts(a.(*KeepalivedOpts), b.(*sunpike.KeepalivedOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KeepalivedOpts)(nil), (*KeepalivedOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KeepalivedOpts_To_v1alpha1_KeepalivedOpts(a.(*sunpike.KeepalivedOpts), b.(*KeepalivedOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KeystoneOpts)(nil), (*sunpike.KeystoneOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KeystoneOpts_To_sunpike_KeystoneOpts(a.(*KeystoneOpts), b.(*sunpike.KeystoneOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KeystoneOpts)(nil), (*KeystoneOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KeystoneOpts_To_v1alpha1_KeystoneOpts(a.(*sunpike.KeystoneOpts), b.(*KeystoneOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeApiserverOpts)(nil), (*sunpike.KubeApiserverOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(a.(*KubeApiserverOpts), b.(*sunpike.KubeApiserverOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeApiserverOpts)(nil), (*KubeApiserverOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeApiserverOpts_To_v1alpha1_KubeApiserverOpts(a.(*sunpike.KubeApiserverOpts), b.(*KubeApiserverOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeClusterOpts)(nil), (*sunpike.KubeClusterOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KubeClusterOpts_To_sunpike_KubeClusterOpts(a.(*KubeClusterOpts), b.(*sunpike.KubeClusterOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeClusterOpts)(nil), (*KubeClusterOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeClusterOpts_To_v1alpha1_KubeClusterOpts(a.(*sunpike.KubeClusterOpts), b.(*KubeClusterOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeControllerManagerOpts)(nil), (*sunpike.KubeControllerManagerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(a.(*KubeControllerManagerOpts), b.(*sunpike.KubeControllerManagerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeControllerManagerOpts)(nil), (*KubeControllerManagerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeControllerManagerOpts_To_v1alpha1_KubeControllerManagerOpts(a.(*sunpike.KubeControllerManagerOpts), b.(*KubeControllerManagerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeProxyOpts)(nil), (*sunpike.KubeProxyOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KubeProxyOpts_To_sunpike_KubeProxyOpts(a.(*KubeProxyOpts), b.(*sunpike.KubeProxyOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeProxyOpts)(nil), (*KubeProxyOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeProxyOpts_To_v1alpha1_KubeProxyOpts(a.(*sunpike.KubeProxyOpts), b.(*KubeProxyOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeSchedulerOpts)(nil), (*sunpike.KubeSchedulerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(a.(*KubeSchedulerOpts), b.(*sunpike.KubeSchedulerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeSchedulerOpts)(nil), (*KubeSchedulerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeSchedulerOpts_To_v1alpha1_KubeSchedulerOpts(a.(*sunpike.KubeSchedulerOpts), b.(*KubeSchedulerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeVirtOpts)(nil), (*sunpike.KubeVirtOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KubeVirtOpts_To_sunpike_KubeVirtOpts(a.(*KubeVirtOpts), b.(*sunpike.KubeVirtOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeVirtOpts)(nil), (*KubeVirtOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeVirtOpts_To_v1alpha1_KubeVirtOpts(a.(*sunpike.KubeVirtOpts), b.(*KubeVirtOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeletOpts)(nil), (*sunpike.KubeletOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KubeletOpts_To_sunpike_KubeletOpts(a.(*KubeletOpts), b.(*sunpike.KubeletOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeletOpts)(nil), (*KubeletOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeletOpts_To_v1alpha1_KubeletOpts(a.(*sunpike.KubeletOpts), b.(*KubeletOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LuigiOpts)(nil), (*sunpike.LuigiOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_LuigiOpts_To_sunpike_LuigiOpts(a.(*LuigiOpts), b.(*sunpike.LuigiOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.LuigiOpts)(nil), (*LuigiOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_LuigiOpts_To_v1alpha1_LuigiOpts(a.(*sunpike.LuigiOpts), b.(*LuigiOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetalLBOpts)(nil), (*sunpike.MetalLBOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_MetalLBOpts_To_sunpike_MetalLBOpts(a.(*MetalLBOpts), b.(*sunpike.MetalLBOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.MetalLBOpts)(nil), (*MetalLBOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_MetalLBOpts_To_v1alpha1_MetalLBOpts(a.(*sunpike.MetalLBOpts), b.(*MetalLBOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NodeletStatus)(nil), (*sunpike.NodeletStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NodeletStatus_To_sunpike_NodeletStatus(a.(*NodeletStatus), b.(*sunpike.NodeletStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.NodeletStatus)(nil), (*NodeletStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_NodeletStatus_To_v1alpha1_NodeletStatus(a.(*sunpike.NodeletStatus), b.(*NodeletStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PF9Opts)(nil), (*sunpike.PF9Opts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PF9Opts_To_sunpike_PF9Opts(a.(*PF9Opts), b.(*sunpike.PF9Opts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.PF9Opts)(nil), (*PF9Opts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_PF9Opts_To_v1alpha1_PF9Opts(a.(*sunpike.PF9Opts), b.(*PF9Opts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ProfileAgentOpts)(nil), (*sunpike.ProfileAgentOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(a.(*ProfileAgentOpts), b.(*sunpike.ProfileAgentOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ProfileAgentOpts)(nil), (*ProfileAgentOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ProfileAgentOpts_To_v1alpha1_ProfileAgentOpts(a.(*sunpike.ProfileAgentOpts), b.(*ProfileAgentOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*sunpike.HostStatus)(nil), (*HostStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_HostStatus_To_v1alpha1_HostStatus(a.(*sunpike.HostStatus), b.(*HostStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*HostStatus)(nil), (*sunpike.HostStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_HostStatus_To_sunpike_HostStatus(a.(*HostStatus), b.(*sunpike.HostStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_AddonsOpts_To_sunpike_AddonsOpts(in *AddonsOpts, out *sunpike.AddonsOpts, s conversion.Scope) error {
	if err := Convert_v1alpha1_AppCatalogOpts_To_sunpike_AppCatalogOpts(&in.AppCatalog, &out.AppCatalog, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(&in.CAS, &out.CAS, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_LuigiOpts_To_sunpike_LuigiOpts(&in.Luigi, &out.Luigi, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_KubeVirtOpts_To_sunpike_KubeVirtOpts(&in.Kubevirt, &out.Kubevirt, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_CPUManagerOpts_To_sunpike_CPUManagerOpts(&in.CPUManager, &out.CPUManager, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(&in.ProfileAgent, &out.ProfileAgent, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_AddonsOpts_To_sunpike_AddonsOpts is an autogenerated conversion function.
func Convert_v1alpha1_AddonsOpts_To_sunpike_AddonsOpts(in *AddonsOpts, out *sunpike.AddonsOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_AddonsOpts_To_sunpike_AddonsOpts(in, out, s)
}

func autoConvert_sunpike_AddonsOpts_To_v1alpha1_AddonsOpts(in *sunpike.AddonsOpts, out *AddonsOpts, s conversion.Scope) error {
	if err := Convert_sunpike_AppCatalogOpts_To_v1alpha1_AppCatalogOpts(&in.AppCatalog, &out.AppCatalog, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ClusterAutoScalerOpts_To_v1alpha1_ClusterAutoScalerOpts(&in.CAS, &out.CAS, s); err != nil {
		return err
	}
	if err := Convert_sunpike_LuigiOpts_To_v1alpha1_LuigiOpts(&in.Luigi, &out.Luigi, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeVirtOpts_To_v1alpha1_KubeVirtOpts(&in.Kubevirt, &out.Kubevirt, s); err != nil {
		return err
	}
	if err := Convert_sunpike_CPUManagerOpts_To_v1alpha1_CPUManagerOpts(&in.CPUManager, &out.CPUManager, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ProfileAgentOpts_To_v1alpha1_ProfileAgentOpts(&in.ProfileAgent, &out.ProfileAgent, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_AddonsOpts_To_v1alpha1_AddonsOpts is an autogenerated conversion function.
func Convert_sunpike_AddonsOpts_To_v1alpha1_AddonsOpts(in *sunpike.AddonsOpts, out *AddonsOpts, s conversion.Scope) error {
	return autoConvert_sunpike_AddonsOpts_To_v1alpha1_AddonsOpts(in, out, s)
}

func autoConvert_v1alpha1_AppCatalogOpts_To_sunpike_AppCatalogOpts(in *AppCatalogOpts, out *sunpike.AppCatalogOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha1_AppCatalogOpts_To_sunpike_AppCatalogOpts is an autogenerated conversion function.
func Convert_v1alpha1_AppCatalogOpts_To_sunpike_AppCatalogOpts(in *AppCatalogOpts, out *sunpike.AppCatalogOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_AppCatalogOpts_To_sunpike_AppCatalogOpts(in, out, s)
}

func autoConvert_sunpike_AppCatalogOpts_To_v1alpha1_AppCatalogOpts(in *sunpike.AppCatalogOpts, out *AppCatalogOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_AppCatalogOpts_To_v1alpha1_AppCatalogOpts is an autogenerated conversion function.
func Convert_sunpike_AppCatalogOpts_To_v1alpha1_AppCatalogOpts(in *sunpike.AppCatalogOpts, out *AppCatalogOpts, s conversion.Scope) error {
	return autoConvert_sunpike_AppCatalogOpts_To_v1alpha1_AppCatalogOpts(in, out, s)
}

func autoConvert_v1alpha1_CNIOpts_To_sunpike_CNIOpts(in *CNIOpts, out *sunpike.CNIOpts, s conversion.Scope) error {
	out.Bridge = in.Bridge
	out.MTUSize = in.MTUSize
	out.IPv6 = in.IPv6
	out.NetworkPlugin = in.NetworkPlugin
	if err := Convert_v1alpha1_CalicoOpts_To_sunpike_CalicoOpts(&in.Calico, &out.Calico, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_FlannelOpts_To_sunpike_FlannelOpts(&in.Flannel, &out.Flannel, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_CNIOpts_To_sunpike_CNIOpts is an autogenerated conversion function.
func Convert_v1alpha1_CNIOpts_To_sunpike_CNIOpts(in *CNIOpts, out *sunpike.CNIOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_CNIOpts_To_sunpike_CNIOpts(in, out, s)
}

func autoConvert_sunpike_CNIOpts_To_v1alpha1_CNIOpts(in *sunpike.CNIOpts, out *CNIOpts, s conversion.Scope) error {
	out.Bridge = in.Bridge
	out.MTUSize = in.MTUSize
	out.IPv6 = in.IPv6
	out.NetworkPlugin = in.NetworkPlugin
	if err := Convert_sunpike_CalicoOpts_To_v1alpha1_CalicoOpts(&in.Calico, &out.Calico, s); err != nil {
		return err
	}
	if err := Convert_sunpike_FlannelOpts_To_v1alpha1_FlannelOpts(&in.Flannel, &out.Flannel, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_CNIOpts_To_v1alpha1_CNIOpts is an autogenerated conversion function.
func Convert_sunpike_CNIOpts_To_v1alpha1_CNIOpts(in *sunpike.CNIOpts, out *CNIOpts, s conversion.Scope) error {
	return autoConvert_sunpike_CNIOpts_To_v1alpha1_CNIOpts(in, out, s)
}

func autoConvert_v1alpha1_CPUManagerOpts_To_sunpike_CPUManagerOpts(in *CPUManagerOpts, out *sunpike.CPUManagerOpts, s conversion.Scope) error {
	out.CPUManagerPolicy = in.CPUManagerPolicy
	out.TopologyManagerPolicy = in.TopologyManagerPolicy
	out.ReservedCPUs = in.ReservedCPUs
	return nil
}

// Convert_v1alpha1_CPUManagerOpts_To_sunpike_CPUManagerOpts is an autogenerated conversion function.
func Convert_v1alpha1_CPUManagerOpts_To_sunpike_CPUManagerOpts(in *CPUManagerOpts, out *sunpike.CPUManagerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_CPUManagerOpts_To_sunpike_CPUManagerOpts(in, out, s)
}

func autoConvert_sunpike_CPUManagerOpts_To_v1alpha1_CPUManagerOpts(in *sunpike.CPUManagerOpts, out *CPUManagerOpts, s conversion.Scope) error {
	out.CPUManagerPolicy = in.CPUManagerPolicy
	out.TopologyManagerPolicy = in.TopologyManagerPolicy
	out.ReservedCPUs = in.ReservedCPUs
	return nil
}

// Convert_sunpike_CPUManagerOpts_To_v1alpha1_CPUManagerOpts is an autogenerated conversion function.
func Convert_sunpike_CPUManagerOpts_To_v1alpha1_CPUManagerOpts(in *sunpike.CPUManagerOpts, out *CPUManagerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_CPUManagerOpts_To_v1alpha1_CPUManagerOpts(in, out, s)
}

func autoConvert_v1alpha1_CalicoOpts_To_sunpike_CalicoOpts(in *CalicoOpts, out *sunpike.CalicoOpts, s conversion.Scope) error {
	out.IPIPMode = in.IPIPMode
	out.IPv4BlkSize = in.IPv4BlkSize
	out.NatOutgoing = in.NatOutgoing
	out.IPv4Mode = in.IPv4Mode
	out.IPv4DetectionMethod = in.IPv4DetectionMethod
	out.IPv6Mode = in.IPv6Mode
	out.IPv6BlkSize = in.IPv6BlkSize
	out.IPv6PoolCIDR = in.IPv6PoolCIDR
	out.IPv6PoolNAT = in.IPv6PoolNAT
	out.IPv6DetectionMethod = in.IPv6DetectionMethod
	out.RouterID = in.RouterID
	out.FelixIPv6Support = in.FelixIPv6Support
	return nil
}

// Convert_v1alpha1_CalicoOpts_To_sunpike_CalicoOpts is an autogenerated conversion function.
func Convert_v1alpha1_CalicoOpts_To_sunpike_CalicoOpts(in *CalicoOpts, out *sunpike.CalicoOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_CalicoOpts_To_sunpike_CalicoOpts(in, out, s)
}

func autoConvert_sunpike_CalicoOpts_To_v1alpha1_CalicoOpts(in *sunpike.CalicoOpts, out *CalicoOpts, s conversion.Scope) error {
	out.IPIPMode = in.IPIPMode
	out.IPv4BlkSize = in.IPv4BlkSize
	out.NatOutgoing = in.NatOutgoing
	out.IPv4Mode = in.IPv4Mode
	out.IPv4DetectionMethod = in.IPv4DetectionMethod
	out.IPv6Mode = in.IPv6Mode
	out.IPv6BlkSize = in.IPv6BlkSize
	out.IPv6PoolCIDR = in.IPv6PoolCIDR
	out.IPv6PoolNAT = in.IPv6PoolNAT
	out.IPv6DetectionMethod = in.IPv6DetectionMethod
	out.RouterID = in.RouterID
	out.FelixIPv6Support = in.FelixIPv6Support
	return nil
}

// Convert_sunpike_CalicoOpts_To_v1alpha1_CalicoOpts is an autogenerated conversion function.
func Convert_sunpike_CalicoOpts_To_v1alpha1_CalicoOpts(in *sunpike.CalicoOpts, out *CalicoOpts, s conversion.Scope) error {
	return autoConvert_sunpike_CalicoOpts_To_v1alpha1_CalicoOpts(in, out, s)
}

func autoConvert_v1alpha1_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(in *ClusterAutoScalerOpts, out *sunpike.ClusterAutoScalerOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.MinWorkers = in.MinWorkers
	out.MaxWorkers = in.MaxWorkers
	return nil
}

// Convert_v1alpha1_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts is an autogenerated conversion function.
func Convert_v1alpha1_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(in *ClusterAutoScalerOpts, out *sunpike.ClusterAutoScalerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(in, out, s)
}

func autoConvert_sunpike_ClusterAutoScalerOpts_To_v1alpha1_ClusterAutoScalerOpts(in *sunpike.ClusterAutoScalerOpts, out *ClusterAutoScalerOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.MinWorkers = in.MinWorkers
	out.MaxWorkers = in.MaxWorkers
	return nil
}

// Convert_sunpike_ClusterAutoScalerOpts_To_v1alpha1_ClusterAutoScalerOpts is an autogenerated conversion function.
func Convert_sunpike_ClusterAutoScalerOpts_To_v1alpha1_ClusterAutoScalerOpts(in *sunpike.ClusterAutoScalerOpts, out *ClusterAutoScalerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAutoScalerOpts_To_v1alpha1_ClusterAutoScalerOpts(in, out, s)
}

func autoConvert_v1alpha1_DockerOpts_To_sunpike_DockerOpts(in *DockerOpts, out *sunpike.DockerOpts, s conversion.Scope) error {
	out.LiveRestore = in.LiveRestore
	out.RootDir = in.RootDir
	out.DockerhubID = in.DockerhubID
	out.DockerhubPassword = in.DockerhubPassword
	out.RegistryMirrors = in.RegistryMirrors
	out.DockerCentosPackageRepoUrl = in.DockerCentosPackageRepoUrl
	out.DockerUbuntuPackageRepoUrl = in.DockerUbuntuPackageRepoUrl
	return nil
}

// Convert_v1alpha1_DockerOpts_To_sunpike_DockerOpts is an autogenerated conversion function.
func Convert_v1alpha1_DockerOpts_To_sunpike_DockerOpts(in *DockerOpts, out *sunpike.DockerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_DockerOpts_To_sunpike_DockerOpts(in, out, s)
}

func autoConvert_sunpike_DockerOpts_To_v1alpha1_DockerOpts(in *sunpike.DockerOpts, out *DockerOpts, s conversion.Scope) error {
	out.LiveRestore = in.LiveRestore
	out.RootDir = in.RootDir
	out.DockerhubID = in.DockerhubID
	out.DockerhubPassword = in.DockerhubPassword
	out.RegistryMirrors = in.RegistryMirrors
	out.DockerCentosPackageRepoUrl = in.DockerCentosPackageRepoUrl
	out.DockerUbuntuPackageRepoUrl = in.DockerUbuntuPackageRepoUrl
	return nil
}

// Convert_sunpike_DockerOpts_To_v1alpha1_DockerOpts is an autogenerated conversion function.
func Convert_sunpike_DockerOpts_To_v1alpha1_DockerOpts(in *sunpike.DockerOpts, out *DockerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_DockerOpts_To_v1alpha1_DockerOpts(in, out, s)
}

func autoConvert_v1alpha1_EtcdOpts_To_sunpike_EtcdOpts(in *EtcdOpts, out *sunpike.EtcdOpts, s conversion.Scope) error {
	out.DataDir = in.DataDir
	out.DiscoveryURL = in.DiscoveryURL
	out.ElectionTimeout = in.ElectionTimeout
	out.Env = in.Env
	out.HeartbeatIntervalMs = in.HeartbeatIntervalMs
	out.Version = in.Version
	return nil
}

// Convert_v1alpha1_EtcdOpts_To_sunpike_EtcdOpts is an autogenerated conversion function.
func Convert_v1alpha1_EtcdOpts_To_sunpike_EtcdOpts(in *EtcdOpts, out *sunpike.EtcdOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_EtcdOpts_To_sunpike_EtcdOpts(in, out, s)
}

func autoConvert_sunpike_EtcdOpts_To_v1alpha1_EtcdOpts(in *sunpike.EtcdOpts, out *EtcdOpts, s conversion.Scope) error {
	out.DataDir = in.DataDir
	out.DiscoveryURL = in.DiscoveryURL
	out.ElectionTimeout = in.ElectionTimeout
	out.Env = in.Env
	out.HeartbeatIntervalMs = in.HeartbeatIntervalMs
	out.Version = in.Version
	return nil
}

// Convert_sunpike_EtcdOpts_To_v1alpha1_EtcdOpts is an autogenerated conversion function.
func Convert_sunpike_EtcdOpts_To_v1alpha1_EtcdOpts(in *sunpike.EtcdOpts, out *EtcdOpts, s conversion.Scope) error {
	return autoConvert_sunpike_EtcdOpts_To_v1alpha1_EtcdOpts(in, out, s)
}

func autoConvert_v1alpha1_FlannelOpts_To_sunpike_FlannelOpts(in *FlannelOpts, out *sunpike.FlannelOpts, s conversion.Scope) error {
	out.InterfaceLabel = in.InterfaceLabel
	out.PublicInterfaceLabel = in.PublicInterfaceLabel
	return nil
}

// Convert_v1alpha1_FlannelOpts_To_sunpike_FlannelOpts is an autogenerated conversion function.
func Convert_v1alpha1_FlannelOpts_To_sunpike_FlannelOpts(in *FlannelOpts, out *sunpike.FlannelOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_FlannelOpts_To_sunpike_FlannelOpts(in, out, s)
}

func autoConvert_sunpike_FlannelOpts_To_v1alpha1_FlannelOpts(in *sunpike.FlannelOpts, out *FlannelOpts, s conversion.Scope) error {
	out.InterfaceLabel = in.InterfaceLabel
	out.PublicInterfaceLabel = in.PublicInterfaceLabel
	return nil
}

// Convert_sunpike_FlannelOpts_To_v1alpha1_FlannelOpts is an autogenerated conversion function.
func Convert_sunpike_FlannelOpts_To_v1alpha1_FlannelOpts(in *sunpike.FlannelOpts, out *FlannelOpts, s conversion.Scope) error {
	return autoConvert_sunpike_FlannelOpts_To_v1alpha1_FlannelOpts(in, out, s)
}

func autoConvert_v1alpha1_Host_To_sunpike_Host(in *Host, out *sunpike.Host, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_HostSpec_To_sunpike_HostSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_HostStatus_To_sunpike_HostStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Host_To_sunpike_Host is an autogenerated conversion function.
func Convert_v1alpha1_Host_To_sunpike_Host(in *Host, out *sunpike.Host, s conversion.Scope) error {
	return autoConvert_v1alpha1_Host_To_sunpike_Host(in, out, s)
}

func autoConvert_sunpike_Host_To_v1alpha1_Host(in *sunpike.Host, out *Host, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_sunpike_HostSpec_To_v1alpha1_HostSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_sunpike_HostStatus_To_v1alpha1_HostStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_Host_To_v1alpha1_Host is an autogenerated conversion function.
func Convert_sunpike_Host_To_v1alpha1_Host(in *sunpike.Host, out *Host, s conversion.Scope) error {
	return autoConvert_sunpike_Host_To_v1alpha1_Host(in, out, s)
}

func autoConvert_v1alpha1_HostList_To_sunpike_HostList(in *HostList, out *sunpike.HostList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]sunpike.Host, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Host_To_sunpike_Host(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_HostList_To_sunpike_HostList is an autogenerated conversion function.
func Convert_v1alpha1_HostList_To_sunpike_HostList(in *HostList, out *sunpike.HostList, s conversion.Scope) error {
	return autoConvert_v1alpha1_HostList_To_sunpike_HostList(in, out, s)
}

func autoConvert_sunpike_HostList_To_v1alpha1_HostList(in *sunpike.HostList, out *HostList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Host, len(*in))
		for i := range *in {
			if err := Convert_sunpike_Host_To_v1alpha1_Host(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_sunpike_HostList_To_v1alpha1_HostList is an autogenerated conversion function.
func Convert_sunpike_HostList_To_v1alpha1_HostList(in *sunpike.HostList, out *HostList, s conversion.Scope) error {
	return autoConvert_sunpike_HostList_To_v1alpha1_HostList(in, out, s)
}

func autoConvert_v1alpha1_HostPhase_To_sunpike_HostPhase(in *HostPhase, out *sunpike.HostPhase, s conversion.Scope) error {
	out.Name = in.Name
	out.Order = in.Order
	out.StartedAt = in.StartedAt
	out.Operation = in.Operation
	out.Status = in.Status
	out.Message = in.Message
	return nil
}

// Convert_v1alpha1_HostPhase_To_sunpike_HostPhase is an autogenerated conversion function.
func Convert_v1alpha1_HostPhase_To_sunpike_HostPhase(in *HostPhase, out *sunpike.HostPhase, s conversion.Scope) error {
	return autoConvert_v1alpha1_HostPhase_To_sunpike_HostPhase(in, out, s)
}

func autoConvert_sunpike_HostPhase_To_v1alpha1_HostPhase(in *sunpike.HostPhase, out *HostPhase, s conversion.Scope) error {
	out.Name = in.Name
	out.Order = in.Order
	out.StartedAt = in.StartedAt
	out.Operation = in.Operation
	out.Status = in.Status
	out.Message = in.Message
	return nil
}

// Convert_sunpike_HostPhase_To_v1alpha1_HostPhase is an autogenerated conversion function.
func Convert_sunpike_HostPhase_To_v1alpha1_HostPhase(in *sunpike.HostPhase, out *HostPhase, s conversion.Scope) error {
	return autoConvert_sunpike_HostPhase_To_v1alpha1_HostPhase(in, out, s)
}

func autoConvert_v1alpha1_HostSpec_To_sunpike_HostSpec(in *HostSpec, out *sunpike.HostSpec, s conversion.Scope) error {
	out.ExtraCfg = *(*map[string]string)(unsafe.Pointer(&in.ExtraCfg))
	if err := Convert_v1alpha1_PF9Opts_To_sunpike_PF9Opts(&in.PF9Cfg, &out.PF9Cfg, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_KubeClusterOpts_To_sunpike_KubeClusterOpts(&in.ClusterCfg, &out.ClusterCfg, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_EtcdOpts_To_sunpike_EtcdOpts(&in.Etcd, &out.Etcd, s); err != nil {
		return err
	}
	out.ExtraOpts = in.ExtraOpts
	out.ServicesCIDR = in.ServicesCIDR
	out.ContainersCIDR = in.ContainersCIDR
	out.AllowWorkloadsOnMaster = in.AllowWorkloadsOnMaster
	if err := Convert_v1alpha1_KubeletOpts_To_sunpike_KubeletOpts(&in.Kubelet, &out.Kubelet, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_DockerOpts_To_sunpike_DockerOpts(&in.Docker, &out.Docker, s); err != nil {
		return err
	}
	out.DockerPrivateRegistry = in.DockerPrivateRegistry
	out.QuayPrivateRegistry = in.QuayPrivateRegistry
	out.GCRPrivateRegistry = in.GCRPrivateRegistry
	out.K8SPrivateRegistry = in.K8SPrivateRegistry
	out.ContainerRuntime = in.ContainerRuntime
	return nil
}

// Convert_v1alpha1_HostSpec_To_sunpike_HostSpec is an autogenerated conversion function.
func Convert_v1alpha1_HostSpec_To_sunpike_HostSpec(in *HostSpec, out *sunpike.HostSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_HostSpec_To_sunpike_HostSpec(in, out, s)
}

func autoConvert_sunpike_HostSpec_To_v1alpha1_HostSpec(in *sunpike.HostSpec, out *HostSpec, s conversion.Scope) error {
	out.ExtraCfg = *(*map[string]string)(unsafe.Pointer(&in.ExtraCfg))
	if err := Convert_sunpike_PF9Opts_To_v1alpha1_PF9Opts(&in.PF9Cfg, &out.PF9Cfg, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeClusterOpts_To_v1alpha1_KubeClusterOpts(&in.ClusterCfg, &out.ClusterCfg, s); err != nil {
		return err
	}
	if err := Convert_sunpike_EtcdOpts_To_v1alpha1_EtcdOpts(&in.Etcd, &out.Etcd, s); err != nil {
		return err
	}
	out.ExtraOpts = in.ExtraOpts
	out.ServicesCIDR = in.ServicesCIDR
	out.ContainersCIDR = in.ContainersCIDR
	out.AllowWorkloadsOnMaster = in.AllowWorkloadsOnMaster
	if err := Convert_sunpike_KubeletOpts_To_v1alpha1_KubeletOpts(&in.Kubelet, &out.Kubelet, s); err != nil {
		return err
	}
	if err := Convert_sunpike_DockerOpts_To_v1alpha1_DockerOpts(&in.Docker, &out.Docker, s); err != nil {
		return err
	}
	out.DockerPrivateRegistry = in.DockerPrivateRegistry
	out.QuayPrivateRegistry = in.QuayPrivateRegistry
	out.GCRPrivateRegistry = in.GCRPrivateRegistry
	out.K8SPrivateRegistry = in.K8SPrivateRegistry
	out.ContainerRuntime = in.ContainerRuntime
	return nil
}

// Convert_sunpike_HostSpec_To_v1alpha1_HostSpec is an autogenerated conversion function.
func Convert_sunpike_HostSpec_To_v1alpha1_HostSpec(in *sunpike.HostSpec, out *HostSpec, s conversion.Scope) error {
	return autoConvert_sunpike_HostSpec_To_v1alpha1_HostSpec(in, out, s)
}

func autoConvert_v1alpha1_HostStatus_To_sunpike_HostStatus(in *HostStatus, out *sunpike.HostStatus, s conversion.Scope) error {
	out.HostState = sunpike.HostState(in.HostState)
	out.ClusterRole = in.ClusterRole
	out.ClusterID = in.ClusterID
	out.ServiceState = in.ServiceState
	out.Hostname = in.Hostname
	if err := Convert_v1alpha1_NodeletStatus_To_sunpike_NodeletStatus(&in.Nodelet, &out.Nodelet, s); err != nil {
		return err
	}
	out.Phases = *(*[]sunpike.HostPhase)(unsafe.Pointer(&in.Phases))
	out.PhaseCompleted = in.PhaseCompleted
	out.LastFailedPhase = in.LastFailedPhase
	out.StartAttempts = in.StartAttempts
	out.CurrentPhase = in.CurrentPhase
	out.AllStatusChecks = *(*[]int32)(unsafe.Pointer(&in.AllStatusChecks))
	out.LastFailedCheck = in.LastFailedCheck
	out.LastFailedCheckTime = in.LastFailedCheckTime
	// WARNING: in.CurrentStatusCheck requires manual conversion: does not exist in peer-type
	// WARNING: in.CurrentStatusCheckTime requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_sunpike_HostStatus_To_v1alpha1_HostStatus(in *sunpike.HostStatus, out *HostStatus, s conversion.Scope) error {
	out.HostState = HostState(in.HostState)
	out.ClusterRole = in.ClusterRole
	out.ClusterID = in.ClusterID
	out.ServiceState = in.ServiceState
	out.Hostname = in.Hostname
	if err := Convert_sunpike_NodeletStatus_To_v1alpha1_NodeletStatus(&in.Nodelet, &out.Nodelet, s); err != nil {
		return err
	}
	out.Phases = *(*[]HostPhase)(unsafe.Pointer(&in.Phases))
	out.PhaseCompleted = in.PhaseCompleted
	out.LastFailedPhase = in.LastFailedPhase
	out.StartAttempts = in.StartAttempts
	out.CurrentPhase = in.CurrentPhase
	out.AllStatusChecks = *(*[]int32)(unsafe.Pointer(&in.AllStatusChecks))
	out.LastFailedCheck = in.LastFailedCheck
	out.LastFailedCheckTime = in.LastFailedCheckTime
	// WARNING: in.Conditions requires manual conversion: does not exist in peer-type
	// WARNING: in.ObservedGeneration requires manual conversion: does not exist in peer-type
	// WARNING: in.KubeVersion requires manual conversion: does not exist in peer-type
	// WARNING: in.PrimaryIP requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_KeepalivedOpts_To_sunpike_KeepalivedOpts(in *KeepalivedOpts, out *sunpike.KeepalivedOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.MasterVIPInterface = in.MasterVIPInterface
	out.MasterVIPPriority = in.MasterVIPPriority
	out.MasterVIPRouterID = in.MasterVIPRouterID
	return nil
}

// Convert_v1alpha1_KeepalivedOpts_To_sunpike_KeepalivedOpts is an autogenerated conversion function.
func Convert_v1alpha1_KeepalivedOpts_To_sunpike_KeepalivedOpts(in *KeepalivedOpts, out *sunpike.KeepalivedOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_KeepalivedOpts_To_sunpike_KeepalivedOpts(in, out, s)
}

func autoConvert_sunpike_KeepalivedOpts_To_v1alpha1_KeepalivedOpts(in *sunpike.KeepalivedOpts, out *KeepalivedOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.MasterVIPInterface = in.MasterVIPInterface
	out.MasterVIPPriority = in.MasterVIPPriority
	out.MasterVIPRouterID = in.MasterVIPRouterID
	return nil
}

// Convert_sunpike_KeepalivedOpts_To_v1alpha1_KeepalivedOpts is an autogenerated conversion function.
func Convert_sunpike_KeepalivedOpts_To_v1alpha1_KeepalivedOpts(in *sunpike.KeepalivedOpts, out *KeepalivedOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KeepalivedOpts_To_v1alpha1_KeepalivedOpts(in, out, s)
}

func autoConvert_v1alpha1_KeystoneOpts_To_sunpike_KeystoneOpts(in *KeystoneOpts, out *sunpike.KeystoneOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Domain = in.Domain
	out.AuthURL = in.AuthURL
	out.Password = in.Password
	out.Username = in.Username
	out.ProjectDomainName = in.ProjectDomainName
	out.ProjectName = in.ProjectName
	out.Region = in.Region
	out.UserDomainName = in.UserDomainName
	return nil
}

// Convert_v1alpha1_KeystoneOpts_To_sunpike_KeystoneOpts is an autogenerated conversion function.
func Convert_v1alpha1_KeystoneOpts_To_sunpike_KeystoneOpts(in *KeystoneOpts, out *sunpike.KeystoneOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_KeystoneOpts_To_sunpike_KeystoneOpts(in, out, s)
}

func autoConvert_sunpike_KeystoneOpts_To_v1alpha1_KeystoneOpts(in *sunpike.KeystoneOpts, out *KeystoneOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Domain = in.Domain
	out.AuthURL = in.AuthURL
	out.Password = in.Password
	out.Username = in.Username
	out.ProjectDomainName = in.ProjectDomainName
	out.ProjectName = in.ProjectName
	out.Region = in.Region
	out.UserDomainName = in.UserDomainName
	return nil
}

// Convert_sunpike_KeystoneOpts_To_v1alpha1_KeystoneOpts is an autogenerated conversion function.
func Convert_sunpike_KeystoneOpts_To_v1alpha1_KeystoneOpts(in *sunpike.KeystoneOpts, out *KeystoneOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KeystoneOpts_To_v1alpha1_KeystoneOpts(in, out, s)
}

func autoConvert_v1alpha1_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(in *KubeApiserverOpts, out *sunpike.KubeApiserverOpts, s conversion.Scope) error {
	out.StorageBackend = in.StorageBackend
	out.Privileged = in.Privileged
	out.Port = in.Port
	out.Authz = in.Authz
	out.RuntimeConfig = in.RuntimeConfig
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_v1alpha1_KubeApiserverOpts_To_sunpike_KubeApiserverOpts is an autogenerated conversion function.
func Convert_v1alpha1_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(in *KubeApiserverOpts, out *sunpike.KubeApiserverOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(in, out, s)
}

func autoConvert_sunpike_KubeApiserverOpts_To_v1alpha1_KubeApiserverOpts(in *sunpike.KubeApiserverOpts, out *KubeApiserverOpts, s conversion.Scope) error {
	out.StorageBackend = in.StorageBackend
	out.Privileged = in.Privileged
	out.Port = in.Port
	out.Authz = in.Authz
	out.RuntimeConfig = in.RuntimeConfig
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_sunpike_KubeApiserverOpts_To_v1alpha1_KubeApiserverOpts is an autogenerated conversion function.
func Convert_sunpike_KubeApiserverOpts_To_v1alpha1_KubeApiserverOpts(in *sunpike.KubeApiserverOpts, out *KubeApiserverOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeApiserverOpts_To_v1alpha1_KubeApiserverOpts(in, out, s)
}

func autoConvert_v1alpha1_KubeClusterOpts_To_sunpike_KubeClusterOpts(in *KubeClusterOpts, out *sunpike.KubeClusterOpts, s conversion.Scope) error {
	if err := Convert_v1alpha1_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(&in.Scheduler, &out.Scheduler, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(&in.ControllerManager, &out.ControllerManager, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(&in.Apiserver, &out.Apiserver, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_CNIOpts_To_sunpike_CNIOpts(&in.CNI, &out.CNI, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_AddonsOpts_To_sunpike_AddonsOpts(&in.Addons, &out.Addons, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_KubeProxyOpts_To_sunpike_KubeProxyOpts(&in.KubeProxy, &out.KubeProxy, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_MetalLBOpts_To_sunpike_MetalLBOpts(&in.MetalLB, &out.MetalLB, s); err != nil {
		return err
	}
	out.UseHostname = in.UseHostname
	return nil
}

// Convert_v1alpha1_KubeClusterOpts_To_sunpike_KubeClusterOpts is an autogenerated conversion function.
func Convert_v1alpha1_KubeClusterOpts_To_sunpike_KubeClusterOpts(in *KubeClusterOpts, out *sunpike.KubeClusterOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_KubeClusterOpts_To_sunpike_KubeClusterOpts(in, out, s)
}

func autoConvert_sunpike_KubeClusterOpts_To_v1alpha1_KubeClusterOpts(in *sunpike.KubeClusterOpts, out *KubeClusterOpts, s conversion.Scope) error {
	if err := Convert_sunpike_KubeSchedulerOpts_To_v1alpha1_KubeSchedulerOpts(&in.Scheduler, &out.Scheduler, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeControllerManagerOpts_To_v1alpha1_KubeControllerManagerOpts(&in.ControllerManager, &out.ControllerManager, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeApiserverOpts_To_v1alpha1_KubeApiserverOpts(&in.Apiserver, &out.Apiserver, s); err != nil {
		return err
	}
	if err := Convert_sunpike_CNIOpts_To_v1alpha1_CNIOpts(&in.CNI, &out.CNI, s); err != nil {
		return err
	}
	if err := Convert_sunpike_AddonsOpts_To_v1alpha1_AddonsOpts(&in.Addons, &out.Addons, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeProxyOpts_To_v1alpha1_KubeProxyOpts(&in.KubeProxy, &out.KubeProxy, s); err != nil {
		return err
	}
	if err := Convert_sunpike_MetalLBOpts_To_v1alpha1_MetalLBOpts(&in.MetalLB, &out.MetalLB, s); err != nil {
		return err
	}
	out.UseHostname = in.UseHostname
	return nil
}

// Convert_sunpike_KubeClusterOpts_To_v1alpha1_KubeClusterOpts is an autogenerated conversion function.
func Convert_sunpike_KubeClusterOpts_To_v1alpha1_KubeClusterOpts(in *sunpike.KubeClusterOpts, out *KubeClusterOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeClusterOpts_To_v1alpha1_KubeClusterOpts(in, out, s)
}

func autoConvert_v1alpha1_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(in *KubeControllerManagerOpts, out *sunpike.KubeControllerManagerOpts, s conversion.Scope) error {
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_v1alpha1_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts is an autogenerated conversion function.
func Convert_v1alpha1_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(in *KubeControllerManagerOpts, out *sunpike.KubeControllerManagerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(in, out, s)
}

func autoConvert_sunpike_KubeControllerManagerOpts_To_v1alpha1_KubeControllerManagerOpts(in *sunpike.KubeControllerManagerOpts, out *KubeControllerManagerOpts, s conversion.Scope) error {
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_sunpike_KubeControllerManagerOpts_To_v1alpha1_KubeControllerManagerOpts is an autogenerated conversion function.
func Convert_sunpike_KubeControllerManagerOpts_To_v1alpha1_KubeControllerManagerOpts(in *sunpike.KubeControllerManagerOpts, out *KubeControllerManagerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeControllerManagerOpts_To_v1alpha1_KubeControllerManagerOpts(in, out, s)
}

func autoConvert_v1alpha1_KubeProxyOpts_To_sunpike_KubeProxyOpts(in *KubeProxyOpts, out *sunpike.KubeProxyOpts, s conversion.Scope) error {
	out.Mode = in.Mode
	return nil
}

// Convert_v1alpha1_KubeProxyOpts_To_sunpike_KubeProxyOpts is an autogenerated conversion function.
func Convert_v1alpha1_KubeProxyOpts_To_sunpike_KubeProxyOpts(in *KubeProxyOpts, out *sunpike.KubeProxyOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_KubeProxyOpts_To_sunpike_KubeProxyOpts(in, out, s)
}

func autoConvert_sunpike_KubeProxyOpts_To_v1alpha1_KubeProxyOpts(in *sunpike.KubeProxyOpts, out *KubeProxyOpts, s conversion.Scope) error {
	out.Mode = in.Mode
	return nil
}

// Convert_sunpike_KubeProxyOpts_To_v1alpha1_KubeProxyOpts is an autogenerated conversion function.
func Convert_sunpike_KubeProxyOpts_To_v1alpha1_KubeProxyOpts(in *sunpike.KubeProxyOpts, out *KubeProxyOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeProxyOpts_To_v1alpha1_KubeProxyOpts(in, out, s)
}

func autoConvert_v1alpha1_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(in *KubeSchedulerOpts, out *sunpike.KubeSchedulerOpts, s conversion.Scope) error {
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_v1alpha1_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts is an autogenerated conversion function.
func Convert_v1alpha1_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(in *KubeSchedulerOpts, out *sunpike.KubeSchedulerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(in, out, s)
}

func autoConvert_sunpike_KubeSchedulerOpts_To_v1alpha1_KubeSchedulerOpts(in *sunpike.KubeSchedulerOpts, out *KubeSchedulerOpts, s conversion.Scope) error {
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_sunpike_KubeSchedulerOpts_To_v1alpha1_KubeSchedulerOpts is an autogenerated conversion function.
func Convert_sunpike_KubeSchedulerOpts_To_v1alpha1_KubeSchedulerOpts(in *sunpike.KubeSchedulerOpts, out *KubeSchedulerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeSchedulerOpts_To_v1alpha1_KubeSchedulerOpts(in, out, s)
}

func autoConvert_v1alpha1_KubeVirtOpts_To_sunpike_KubeVirtOpts(in *KubeVirtOpts, out *sunpike.KubeVirtOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha1_KubeVirtOpts_To_sunpike_KubeVirtOpts is an autogenerated conversion function.
func Convert_v1alpha1_KubeVirtOpts_To_sunpike_KubeVirtOpts(in *KubeVirtOpts, out *sunpike.KubeVirtOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_KubeVirtOpts_To_sunpike_KubeVirtOpts(in, out, s)
}

func autoConvert_sunpike_KubeVirtOpts_To_v1alpha1_KubeVirtOpts(in *sunpike.KubeVirtOpts, out *KubeVirtOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_KubeVirtOpts_To_v1alpha1_KubeVirtOpts is an autogenerated conversion function.
func Convert_sunpike_KubeVirtOpts_To_v1alpha1_KubeVirtOpts(in *sunpike.KubeVirtOpts, out *KubeVirtOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeVirtOpts_To_v1alpha1_KubeVirtOpts(in, out, s)
}

func autoConvert_v1alpha1_KubeletOpts_To_sunpike_KubeletOpts(in *KubeletOpts, out *sunpike.KubeletOpts, s conversion.Scope) error {
	out.CloudCfg = in.CloudCfg
	return nil
}

// Convert_v1alpha1_KubeletOpts_To_sunpike_KubeletOpts is an autogenerated conversion function.
func Convert_v1alpha1_KubeletOpts_To_sunpike_KubeletOpts(in *KubeletOpts, out *sunpike.KubeletOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_KubeletOpts_To_sunpike_KubeletOpts(in, out, s)
}

func autoConvert_sunpike_KubeletOpts_To_v1alpha1_KubeletOpts(in *sunpike.KubeletOpts, out *KubeletOpts, s conversion.Scope) error {
	out.CloudCfg = in.CloudCfg
	return nil
}

// Convert_sunpike_KubeletOpts_To_v1alpha1_KubeletOpts is an autogenerated conversion function.
func Convert_sunpike_KubeletOpts_To_v1alpha1_KubeletOpts(in *sunpike.KubeletOpts, out *KubeletOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeletOpts_To_v1alpha1_KubeletOpts(in, out, s)
}

func autoConvert_v1alpha1_LuigiOpts_To_sunpike_LuigiOpts(in *LuigiOpts, out *sunpike.LuigiOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha1_LuigiOpts_To_sunpike_LuigiOpts is an autogenerated conversion function.
func Convert_v1alpha1_LuigiOpts_To_sunpike_LuigiOpts(in *LuigiOpts, out *sunpike.LuigiOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_LuigiOpts_To_sunpike_LuigiOpts(in, out, s)
}

func autoConvert_sunpike_LuigiOpts_To_v1alpha1_LuigiOpts(in *sunpike.LuigiOpts, out *LuigiOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_LuigiOpts_To_v1alpha1_LuigiOpts is an autogenerated conversion function.
func Convert_sunpike_LuigiOpts_To_v1alpha1_LuigiOpts(in *sunpike.LuigiOpts, out *LuigiOpts, s conversion.Scope) error {
	return autoConvert_sunpike_LuigiOpts_To_v1alpha1_LuigiOpts(in, out, s)
}

func autoConvert_v1alpha1_MetalLBOpts_To_sunpike_MetalLBOpts(in *MetalLBOpts, out *sunpike.MetalLBOpts, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha1_MetalLBOpts_To_sunpike_MetalLBOpts is an autogenerated conversion function.
func Convert_v1alpha1_MetalLBOpts_To_sunpike_MetalLBOpts(in *MetalLBOpts, out *sunpike.MetalLBOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_MetalLBOpts_To_sunpike_MetalLBOpts(in, out, s)
}

func autoConvert_sunpike_MetalLBOpts_To_v1alpha1_MetalLBOpts(in *sunpike.MetalLBOpts, out *MetalLBOpts, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_MetalLBOpts_To_v1alpha1_MetalLBOpts is an autogenerated conversion function.
func Convert_sunpike_MetalLBOpts_To_v1alpha1_MetalLBOpts(in *sunpike.MetalLBOpts, out *MetalLBOpts, s conversion.Scope) error {
	return autoConvert_sunpike_MetalLBOpts_To_v1alpha1_MetalLBOpts(in, out, s)
}

func autoConvert_v1alpha1_NodeletStatus_To_sunpike_NodeletStatus(in *NodeletStatus, out *sunpike.NodeletStatus, s conversion.Scope) error {
	out.Version = in.Version
	return nil
}

// Convert_v1alpha1_NodeletStatus_To_sunpike_NodeletStatus is an autogenerated conversion function.
func Convert_v1alpha1_NodeletStatus_To_sunpike_NodeletStatus(in *NodeletStatus, out *sunpike.NodeletStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_NodeletStatus_To_sunpike_NodeletStatus(in, out, s)
}

func autoConvert_sunpike_NodeletStatus_To_v1alpha1_NodeletStatus(in *sunpike.NodeletStatus, out *NodeletStatus, s conversion.Scope) error {
	out.Version = in.Version
	return nil
}

// Convert_sunpike_NodeletStatus_To_v1alpha1_NodeletStatus is an autogenerated conversion function.
func Convert_sunpike_NodeletStatus_To_v1alpha1_NodeletStatus(in *sunpike.NodeletStatus, out *NodeletStatus, s conversion.Scope) error {
	return autoConvert_sunpike_NodeletStatus_To_v1alpha1_NodeletStatus(in, out, s)
}

func autoConvert_v1alpha1_PF9Opts_To_sunpike_PF9Opts(in *PF9Opts, out *sunpike.PF9Opts, s conversion.Scope) error {
	out.VaultToken = in.VaultToken
	out.Masterless = in.Masterless
	out.BouncerSlowReqWebhook = in.BouncerSlowReqWebhook
	out.CloudProviderType = in.CloudProviderType
	out.ClusterID = in.ClusterID
	out.ClusterProjectID = in.ClusterProjectID
	out.Debug = in.Debug
	out.KubeServiceState = in.KubeServiceState
	out.ExternalDNSName = in.ExternalDNSName
	out.ClusterRole = in.ClusterRole
	if err := Convert_v1alpha1_KeepalivedOpts_To_sunpike_KeepalivedOpts(&in.Keepalived, &out.Keepalived, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_KeystoneOpts_To_sunpike_KeystoneOpts(&in.Keystone, &out.Keystone, s); err != nil {
		return err
	}
	out.MasterIP = in.MasterIP
	return nil
}

// Convert_v1alpha1_PF9Opts_To_sunpike_PF9Opts is an autogenerated conversion function.
func Convert_v1alpha1_PF9Opts_To_sunpike_PF9Opts(in *PF9Opts, out *sunpike.PF9Opts, s conversion.Scope) error {
	return autoConvert_v1alpha1_PF9Opts_To_sunpike_PF9Opts(in, out, s)
}

func autoConvert_sunpike_PF9Opts_To_v1alpha1_PF9Opts(in *sunpike.PF9Opts, out *PF9Opts, s conversion.Scope) error {
	out.VaultToken = in.VaultToken
	out.Masterless = in.Masterless
	out.BouncerSlowReqWebhook = in.BouncerSlowReqWebhook
	out.CloudProviderType = in.CloudProviderType
	out.ClusterID = in.ClusterID
	out.ClusterProjectID = in.ClusterProjectID
	out.Debug = in.Debug
	out.KubeServiceState = in.KubeServiceState
	out.ExternalDNSName = in.ExternalDNSName
	out.ClusterRole = in.ClusterRole
	if err := Convert_sunpike_KeepalivedOpts_To_v1alpha1_KeepalivedOpts(&in.Keepalived, &out.Keepalived, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KeystoneOpts_To_v1alpha1_KeystoneOpts(&in.Keystone, &out.Keystone, s); err != nil {
		return err
	}
	out.MasterIP = in.MasterIP
	return nil
}

// Convert_sunpike_PF9Opts_To_v1alpha1_PF9Opts is an autogenerated conversion function.
func Convert_sunpike_PF9Opts_To_v1alpha1_PF9Opts(in *sunpike.PF9Opts, out *PF9Opts, s conversion.Scope) error {
	return autoConvert_sunpike_PF9Opts_To_v1alpha1_PF9Opts(in, out, s)
}

func autoConvert_v1alpha1_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(in *ProfileAgentOpts, out *sunpike.ProfileAgentOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha1_ProfileAgentOpts_To_sunpike_ProfileAgentOpts is an autogenerated conversion function.
func Convert_v1alpha1_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(in *ProfileAgentOpts, out *sunpike.ProfileAgentOpts, s conversion.Scope) error {
	return autoConvert_v1alpha1_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(in, out, s)
}

func autoConvert_sunpike_ProfileAgentOpts_To_v1alpha1_ProfileAgentOpts(in *sunpike.ProfileAgentOpts, out *ProfileAgentOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_ProfileAgentOpts_To_v1alpha1_ProfileAgentOpts is an autogenerated conversion function.
func Convert_sunpike_ProfileAgentOpts_To_v1alpha1_ProfileAgentOpts(in *sunpike.ProfileAgentOpts, out *ProfileAgentOpts, s conversion.Scope) error {
	return autoConvert_sunpike_ProfileAgentOpts_To_v1alpha1_ProfileAgentOpts(in, out, s)
}
