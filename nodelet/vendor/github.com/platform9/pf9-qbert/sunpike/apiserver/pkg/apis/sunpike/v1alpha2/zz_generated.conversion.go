//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (C) 2015-2020 Platform9 Systems, Inc.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha2

import (
	unsafe "unsafe"

	sunpike "github.com/platform9/pf9-qbert/sunpike/apiserver/pkg/apis/sunpike"
	v1 "k8s.io/api/core/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AKSAgentPool)(nil), (*sunpike.AKSAgentPool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSAgentPool_To_sunpike_AKSAgentPool(a.(*AKSAgentPool), b.(*sunpike.AKSAgentPool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSAgentPool)(nil), (*AKSAgentPool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSAgentPool_To_v1alpha2_AKSAgentPool(a.(*sunpike.AKSAgentPool), b.(*AKSAgentPool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSCluster)(nil), (*sunpike.AKSCluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSCluster_To_sunpike_AKSCluster(a.(*AKSCluster), b.(*sunpike.AKSCluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSCluster)(nil), (*AKSCluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSCluster_To_v1alpha2_AKSCluster(a.(*sunpike.AKSCluster), b.(*AKSCluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSInstance)(nil), (*sunpike.AKSInstance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSInstance_To_sunpike_AKSInstance(a.(*AKSInstance), b.(*sunpike.AKSInstance), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSInstance)(nil), (*AKSInstance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSInstance_To_v1alpha2_AKSInstance(a.(*sunpike.AKSInstance), b.(*AKSInstance), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSInstanceLinuxConfiguration)(nil), (*sunpike.AKSInstanceLinuxConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSInstanceLinuxConfiguration_To_sunpike_AKSInstanceLinuxConfiguration(a.(*AKSInstanceLinuxConfiguration), b.(*sunpike.AKSInstanceLinuxConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSInstanceLinuxConfiguration)(nil), (*AKSInstanceLinuxConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSInstanceLinuxConfiguration_To_v1alpha2_AKSInstanceLinuxConfiguration(a.(*sunpike.AKSInstanceLinuxConfiguration), b.(*AKSInstanceLinuxConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSInstanceOSProfile)(nil), (*sunpike.AKSInstanceOSProfile)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSInstanceOSProfile_To_sunpike_AKSInstanceOSProfile(a.(*AKSInstanceOSProfile), b.(*sunpike.AKSInstanceOSProfile), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSInstanceOSProfile)(nil), (*AKSInstanceOSProfile)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSInstanceOSProfile_To_v1alpha2_AKSInstanceOSProfile(a.(*sunpike.AKSInstanceOSProfile), b.(*AKSInstanceOSProfile), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSInstanceSKU)(nil), (*sunpike.AKSInstanceSKU)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSInstanceSKU_To_sunpike_AKSInstanceSKU(a.(*AKSInstanceSKU), b.(*sunpike.AKSInstanceSKU), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSInstanceSKU)(nil), (*AKSInstanceSKU)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSInstanceSKU_To_v1alpha2_AKSInstanceSKU(a.(*sunpike.AKSInstanceSKU), b.(*AKSInstanceSKU), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSInstanceWindowsConfiguration)(nil), (*sunpike.AKSInstanceWindowsConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSInstanceWindowsConfiguration_To_sunpike_AKSInstanceWindowsConfiguration(a.(*AKSInstanceWindowsConfiguration), b.(*sunpike.AKSInstanceWindowsConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSInstanceWindowsConfiguration)(nil), (*AKSInstanceWindowsConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSInstanceWindowsConfiguration_To_v1alpha2_AKSInstanceWindowsConfiguration(a.(*sunpike.AKSInstanceWindowsConfiguration), b.(*AKSInstanceWindowsConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSLinuxInstanceSSHKey)(nil), (*sunpike.AKSLinuxInstanceSSHKey)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSLinuxInstanceSSHKey_To_sunpike_AKSLinuxInstanceSSHKey(a.(*AKSLinuxInstanceSSHKey), b.(*sunpike.AKSLinuxInstanceSSHKey), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSLinuxInstanceSSHKey)(nil), (*AKSLinuxInstanceSSHKey)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSLinuxInstanceSSHKey_To_v1alpha2_AKSLinuxInstanceSSHKey(a.(*sunpike.AKSLinuxInstanceSSHKey), b.(*AKSLinuxInstanceSSHKey), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSLoadBalancerProfile)(nil), (*sunpike.AKSLoadBalancerProfile)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSLoadBalancerProfile_To_sunpike_AKSLoadBalancerProfile(a.(*AKSLoadBalancerProfile), b.(*sunpike.AKSLoadBalancerProfile), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSLoadBalancerProfile)(nil), (*AKSLoadBalancerProfile)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSLoadBalancerProfile_To_v1alpha2_AKSLoadBalancerProfile(a.(*sunpike.AKSLoadBalancerProfile), b.(*AKSLoadBalancerProfile), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSNetwork)(nil), (*sunpike.AKSNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSNetwork_To_sunpike_AKSNetwork(a.(*AKSNetwork), b.(*sunpike.AKSNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSNetwork)(nil), (*AKSNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSNetwork_To_v1alpha2_AKSNetwork(a.(*sunpike.AKSNetwork), b.(*AKSNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AKSWindowsInstanceWinRMListener)(nil), (*sunpike.AKSWindowsInstanceWinRMListener)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AKSWindowsInstanceWinRMListener_To_sunpike_AKSWindowsInstanceWinRMListener(a.(*AKSWindowsInstanceWinRMListener), b.(*sunpike.AKSWindowsInstanceWinRMListener), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AKSWindowsInstanceWinRMListener)(nil), (*AKSWindowsInstanceWinRMListener)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AKSWindowsInstanceWinRMListener_To_v1alpha2_AKSWindowsInstanceWinRMListener(a.(*sunpike.AKSWindowsInstanceWinRMListener), b.(*AKSWindowsInstanceWinRMListener), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*APIEndpoint)(nil), (*sunpike.APIEndpoint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_APIEndpoint_To_sunpike_APIEndpoint(a.(*APIEndpoint), b.(*sunpike.APIEndpoint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.APIEndpoint)(nil), (*APIEndpoint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_APIEndpoint_To_v1alpha2_APIEndpoint(a.(*sunpike.APIEndpoint), b.(*APIEndpoint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AWSCloudProviderCredentials)(nil), (*sunpike.AWSCloudProviderCredentials)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSCloudProviderCredentials_To_sunpike_AWSCloudProviderCredentials(a.(*AWSCloudProviderCredentials), b.(*sunpike.AWSCloudProviderCredentials), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AWSCloudProviderCredentials)(nil), (*AWSCloudProviderCredentials)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AWSCloudProviderCredentials_To_v1alpha2_AWSCloudProviderCredentials(a.(*sunpike.AWSCloudProviderCredentials), b.(*AWSCloudProviderCredentials), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AWSCloudProviderSpec)(nil), (*sunpike.AWSCloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSCloudProviderSpec_To_sunpike_AWSCloudProviderSpec(a.(*AWSCloudProviderSpec), b.(*sunpike.AWSCloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AWSCloudProviderSpec)(nil), (*AWSCloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AWSCloudProviderSpec_To_v1alpha2_AWSCloudProviderSpec(a.(*sunpike.AWSCloudProviderSpec), b.(*AWSCloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AWSCluster)(nil), (*sunpike.AWSCluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSCluster_To_sunpike_AWSCluster(a.(*AWSCluster), b.(*sunpike.AWSCluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AWSCluster)(nil), (*AWSCluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AWSCluster_To_v1alpha2_AWSCluster(a.(*sunpike.AWSCluster), b.(*AWSCluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AWSOpts)(nil), (*sunpike.AWSOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSOpts_To_sunpike_AWSOpts(a.(*AWSOpts), b.(*sunpike.AWSOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AWSOpts)(nil), (*AWSOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AWSOpts_To_v1alpha2_AWSOpts(a.(*sunpike.AWSOpts), b.(*AWSOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AWSScalingConfig)(nil), (*sunpike.AWSScalingConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSScalingConfig_To_sunpike_AWSScalingConfig(a.(*AWSScalingConfig), b.(*sunpike.AWSScalingConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AWSScalingConfig)(nil), (*AWSScalingConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AWSScalingConfig_To_v1alpha2_AWSScalingConfig(a.(*sunpike.AWSScalingConfig), b.(*AWSScalingConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AWSVPC)(nil), (*sunpike.AWSVPC)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSVPC_To_sunpike_AWSVPC(a.(*AWSVPC), b.(*sunpike.AWSVPC), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AWSVPC)(nil), (*AWSVPC)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AWSVPC_To_v1alpha2_AWSVPC(a.(*sunpike.AWSVPC), b.(*AWSVPC), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddonOperatorOpts)(nil), (*sunpike.AddonOperatorOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AddonOperatorOpts_To_sunpike_AddonOperatorOpts(a.(*AddonOperatorOpts), b.(*sunpike.AddonOperatorOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AddonOperatorOpts)(nil), (*AddonOperatorOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AddonOperatorOpts_To_v1alpha2_AddonOperatorOpts(a.(*sunpike.AddonOperatorOpts), b.(*AddonOperatorOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddonOperatorVersion)(nil), (*sunpike.AddonOperatorVersion)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AddonOperatorVersion_To_sunpike_AddonOperatorVersion(a.(*AddonOperatorVersion), b.(*sunpike.AddonOperatorVersion), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AddonOperatorVersion)(nil), (*AddonOperatorVersion)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AddonOperatorVersion_To_v1alpha2_AddonOperatorVersion(a.(*sunpike.AddonOperatorVersion), b.(*AddonOperatorVersion), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddonOperatorVersionList)(nil), (*sunpike.AddonOperatorVersionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AddonOperatorVersionList_To_sunpike_AddonOperatorVersionList(a.(*AddonOperatorVersionList), b.(*sunpike.AddonOperatorVersionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AddonOperatorVersionList)(nil), (*AddonOperatorVersionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AddonOperatorVersionList_To_v1alpha2_AddonOperatorVersionList(a.(*sunpike.AddonOperatorVersionList), b.(*AddonOperatorVersionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddonTypeVersion)(nil), (*sunpike.AddonTypeVersion)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AddonTypeVersion_To_sunpike_AddonTypeVersion(a.(*AddonTypeVersion), b.(*sunpike.AddonTypeVersion), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AddonTypeVersion)(nil), (*AddonTypeVersion)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AddonTypeVersion_To_v1alpha2_AddonTypeVersion(a.(*sunpike.AddonTypeVersion), b.(*AddonTypeVersion), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddonVersion)(nil), (*sunpike.AddonVersion)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AddonVersion_To_sunpike_AddonVersion(a.(*AddonVersion), b.(*sunpike.AddonVersion), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AddonVersion)(nil), (*AddonVersion)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AddonVersion_To_v1alpha2_AddonVersion(a.(*sunpike.AddonVersion), b.(*AddonVersion), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddonVersionList)(nil), (*sunpike.AddonVersionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AddonVersionList_To_sunpike_AddonVersionList(a.(*AddonVersionList), b.(*sunpike.AddonVersionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AddonVersionList)(nil), (*AddonVersionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AddonVersionList_To_v1alpha2_AddonVersionList(a.(*sunpike.AddonVersionList), b.(*AddonVersionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AddonsOpts)(nil), (*sunpike.AddonsOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AddonsOpts_To_sunpike_AddonsOpts(a.(*AddonsOpts), b.(*sunpike.AddonsOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AddonsOpts)(nil), (*AddonsOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AddonsOpts_To_v1alpha2_AddonsOpts(a.(*sunpike.AddonsOpts), b.(*AddonsOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AppCatalogOpts)(nil), (*sunpike.AppCatalogOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AppCatalogOpts_To_sunpike_AppCatalogOpts(a.(*AppCatalogOpts), b.(*sunpike.AppCatalogOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AppCatalogOpts)(nil), (*AppCatalogOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AppCatalogOpts_To_v1alpha2_AppCatalogOpts(a.(*sunpike.AppCatalogOpts), b.(*AppCatalogOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Auth)(nil), (*sunpike.Auth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Auth_To_sunpike_Auth(a.(*Auth), b.(*sunpike.Auth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.Auth)(nil), (*Auth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_Auth_To_v1alpha2_Auth(a.(*sunpike.Auth), b.(*Auth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AzureCloudProviderCredentials)(nil), (*sunpike.AzureCloudProviderCredentials)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AzureCloudProviderCredentials_To_sunpike_AzureCloudProviderCredentials(a.(*AzureCloudProviderCredentials), b.(*sunpike.AzureCloudProviderCredentials), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AzureCloudProviderCredentials)(nil), (*AzureCloudProviderCredentials)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AzureCloudProviderCredentials_To_v1alpha2_AzureCloudProviderCredentials(a.(*sunpike.AzureCloudProviderCredentials), b.(*AzureCloudProviderCredentials), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AzureCloudProviderSpec)(nil), (*sunpike.AzureCloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AzureCloudProviderSpec_To_sunpike_AzureCloudProviderSpec(a.(*AzureCloudProviderSpec), b.(*sunpike.AzureCloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.AzureCloudProviderSpec)(nil), (*AzureCloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_AzureCloudProviderSpec_To_v1alpha2_AzureCloudProviderSpec(a.(*sunpike.AzureCloudProviderSpec), b.(*AzureCloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CNIOpts)(nil), (*sunpike.CNIOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CNIOpts_To_sunpike_CNIOpts(a.(*CNIOpts), b.(*sunpike.CNIOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CNIOpts)(nil), (*CNIOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CNIOpts_To_v1alpha2_CNIOpts(a.(*sunpike.CNIOpts), b.(*CNIOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CPUManagerOpts)(nil), (*sunpike.CPUManagerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CPUManagerOpts_To_sunpike_CPUManagerOpts(a.(*CPUManagerOpts), b.(*sunpike.CPUManagerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CPUManagerOpts)(nil), (*CPUManagerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CPUManagerOpts_To_v1alpha2_CPUManagerOpts(a.(*sunpike.CPUManagerOpts), b.(*CPUManagerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CalicoOpts)(nil), (*sunpike.CalicoOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CalicoOpts_To_sunpike_CalicoOpts(a.(*CalicoOpts), b.(*sunpike.CalicoOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CalicoOpts)(nil), (*CalicoOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CalicoOpts_To_v1alpha2_CalicoOpts(a.(*sunpike.CalicoOpts), b.(*CalicoOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CloudProvider)(nil), (*sunpike.CloudProvider)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CloudProvider_To_sunpike_CloudProvider(a.(*CloudProvider), b.(*sunpike.CloudProvider), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CloudProvider)(nil), (*CloudProvider)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CloudProvider_To_v1alpha2_CloudProvider(a.(*sunpike.CloudProvider), b.(*CloudProvider), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CloudProviderList)(nil), (*sunpike.CloudProviderList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CloudProviderList_To_sunpike_CloudProviderList(a.(*CloudProviderList), b.(*sunpike.CloudProviderList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CloudProviderList)(nil), (*CloudProviderList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CloudProviderList_To_v1alpha2_CloudProviderList(a.(*sunpike.CloudProviderList), b.(*CloudProviderList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CloudProviderSpec)(nil), (*sunpike.CloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CloudProviderSpec_To_sunpike_CloudProviderSpec(a.(*CloudProviderSpec), b.(*sunpike.CloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CloudProviderSpec)(nil), (*CloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CloudProviderSpec_To_v1alpha2_CloudProviderSpec(a.(*sunpike.CloudProviderSpec), b.(*CloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CloudProviderStatus)(nil), (*sunpike.CloudProviderStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_CloudProviderStatus_To_sunpike_CloudProviderStatus(a.(*CloudProviderStatus), b.(*sunpike.CloudProviderStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.CloudProviderStatus)(nil), (*CloudProviderStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_CloudProviderStatus_To_v1alpha2_CloudProviderStatus(a.(*sunpike.CloudProviderStatus), b.(*CloudProviderStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Cluster)(nil), (*sunpike.Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Cluster_To_sunpike_Cluster(a.(*Cluster), b.(*sunpike.Cluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.Cluster)(nil), (*Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_Cluster_To_v1alpha2_Cluster(a.(*sunpike.Cluster), b.(*Cluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAddon)(nil), (*sunpike.ClusterAddon)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAddon_To_sunpike_ClusterAddon(a.(*ClusterAddon), b.(*sunpike.ClusterAddon), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAddon)(nil), (*ClusterAddon)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAddon_To_v1alpha2_ClusterAddon(a.(*sunpike.ClusterAddon), b.(*ClusterAddon), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAddonList)(nil), (*sunpike.ClusterAddonList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAddonList_To_sunpike_ClusterAddonList(a.(*ClusterAddonList), b.(*sunpike.ClusterAddonList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAddonList)(nil), (*ClusterAddonList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAddonList_To_v1alpha2_ClusterAddonList(a.(*sunpike.ClusterAddonList), b.(*ClusterAddonList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAddonSpec)(nil), (*sunpike.ClusterAddonSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAddonSpec_To_sunpike_ClusterAddonSpec(a.(*ClusterAddonSpec), b.(*sunpike.ClusterAddonSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAddonSpec)(nil), (*ClusterAddonSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAddonSpec_To_v1alpha2_ClusterAddonSpec(a.(*sunpike.ClusterAddonSpec), b.(*ClusterAddonSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAddonStatus)(nil), (*sunpike.ClusterAddonStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAddonStatus_To_sunpike_ClusterAddonStatus(a.(*ClusterAddonStatus), b.(*sunpike.ClusterAddonStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAddonStatus)(nil), (*ClusterAddonStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAddonStatus_To_v1alpha2_ClusterAddonStatus(a.(*sunpike.ClusterAddonStatus), b.(*ClusterAddonStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAgent)(nil), (*sunpike.ClusterAgent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAgent_To_sunpike_ClusterAgent(a.(*ClusterAgent), b.(*sunpike.ClusterAgent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAgent)(nil), (*ClusterAgent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAgent_To_v1alpha2_ClusterAgent(a.(*sunpike.ClusterAgent), b.(*ClusterAgent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAgentList)(nil), (*sunpike.ClusterAgentList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAgentList_To_sunpike_ClusterAgentList(a.(*ClusterAgentList), b.(*sunpike.ClusterAgentList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAgentList)(nil), (*ClusterAgentList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAgentList_To_v1alpha2_ClusterAgentList(a.(*sunpike.ClusterAgentList), b.(*ClusterAgentList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAgentSpec)(nil), (*sunpike.ClusterAgentSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAgentSpec_To_sunpike_ClusterAgentSpec(a.(*ClusterAgentSpec), b.(*sunpike.ClusterAgentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAgentSpec)(nil), (*ClusterAgentSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAgentSpec_To_v1alpha2_ClusterAgentSpec(a.(*sunpike.ClusterAgentSpec), b.(*ClusterAgentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAgentStatus)(nil), (*sunpike.ClusterAgentStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAgentStatus_To_sunpike_ClusterAgentStatus(a.(*ClusterAgentStatus), b.(*sunpike.ClusterAgentStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAgentStatus)(nil), (*ClusterAgentStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAgentStatus_To_v1alpha2_ClusterAgentStatus(a.(*sunpike.ClusterAgentStatus), b.(*ClusterAgentStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterAutoScalerOpts)(nil), (*sunpike.ClusterAutoScalerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(a.(*ClusterAutoScalerOpts), b.(*sunpike.ClusterAutoScalerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterAutoScalerOpts)(nil), (*ClusterAutoScalerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterAutoScalerOpts_To_v1alpha2_ClusterAutoScalerOpts(a.(*sunpike.ClusterAutoScalerOpts), b.(*ClusterAutoScalerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterList)(nil), (*sunpike.ClusterList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterList_To_sunpike_ClusterList(a.(*ClusterList), b.(*sunpike.ClusterList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterList)(nil), (*ClusterList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterList_To_v1alpha2_ClusterList(a.(*sunpike.ClusterList), b.(*ClusterList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterNetwork)(nil), (*sunpike.ClusterNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterNetwork_To_sunpike_ClusterNetwork(a.(*ClusterNetwork), b.(*sunpike.ClusterNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterNetwork)(nil), (*ClusterNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterNetwork_To_v1alpha2_ClusterNetwork(a.(*sunpike.ClusterNetwork), b.(*ClusterNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfile)(nil), (*sunpike.ClusterProfile)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfile_To_sunpike_ClusterProfile(a.(*ClusterProfile), b.(*sunpike.ClusterProfile), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfile)(nil), (*ClusterProfile)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfile_To_v1alpha2_ClusterProfile(a.(*sunpike.ClusterProfile), b.(*ClusterProfile), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfileBinding)(nil), (*sunpike.ClusterProfileBinding)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfileBinding_To_sunpike_ClusterProfileBinding(a.(*ClusterProfileBinding), b.(*sunpike.ClusterProfileBinding), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfileBinding)(nil), (*ClusterProfileBinding)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfileBinding_To_v1alpha2_ClusterProfileBinding(a.(*sunpike.ClusterProfileBinding), b.(*ClusterProfileBinding), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfileBindingDetail)(nil), (*sunpike.ClusterProfileBindingDetail)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfileBindingDetail_To_sunpike_ClusterProfileBindingDetail(a.(*ClusterProfileBindingDetail), b.(*sunpike.ClusterProfileBindingDetail), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfileBindingDetail)(nil), (*ClusterProfileBindingDetail)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfileBindingDetail_To_v1alpha2_ClusterProfileBindingDetail(a.(*sunpike.ClusterProfileBindingDetail), b.(*ClusterProfileBindingDetail), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfileBindingList)(nil), (*sunpike.ClusterProfileBindingList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfileBindingList_To_sunpike_ClusterProfileBindingList(a.(*ClusterProfileBindingList), b.(*sunpike.ClusterProfileBindingList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfileBindingList)(nil), (*ClusterProfileBindingList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfileBindingList_To_v1alpha2_ClusterProfileBindingList(a.(*sunpike.ClusterProfileBindingList), b.(*ClusterProfileBindingList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfileBindingSpec)(nil), (*sunpike.ClusterProfileBindingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfileBindingSpec_To_sunpike_ClusterProfileBindingSpec(a.(*ClusterProfileBindingSpec), b.(*sunpike.ClusterProfileBindingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfileBindingSpec)(nil), (*ClusterProfileBindingSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfileBindingSpec_To_v1alpha2_ClusterProfileBindingSpec(a.(*sunpike.ClusterProfileBindingSpec), b.(*ClusterProfileBindingSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfileBindingStatus)(nil), (*sunpike.ClusterProfileBindingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfileBindingStatus_To_sunpike_ClusterProfileBindingStatus(a.(*ClusterProfileBindingStatus), b.(*sunpike.ClusterProfileBindingStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfileBindingStatus)(nil), (*ClusterProfileBindingStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfileBindingStatus_To_v1alpha2_ClusterProfileBindingStatus(a.(*sunpike.ClusterProfileBindingStatus), b.(*ClusterProfileBindingStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfileDetail)(nil), (*sunpike.ClusterProfileDetail)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfileDetail_To_sunpike_ClusterProfileDetail(a.(*ClusterProfileDetail), b.(*sunpike.ClusterProfileDetail), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfileDetail)(nil), (*ClusterProfileDetail)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfileDetail_To_v1alpha2_ClusterProfileDetail(a.(*sunpike.ClusterProfileDetail), b.(*ClusterProfileDetail), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfileList)(nil), (*sunpike.ClusterProfileList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfileList_To_sunpike_ClusterProfileList(a.(*ClusterProfileList), b.(*sunpike.ClusterProfileList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfileList)(nil), (*ClusterProfileList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfileList_To_v1alpha2_ClusterProfileList(a.(*sunpike.ClusterProfileList), b.(*ClusterProfileList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfileSpec)(nil), (*sunpike.ClusterProfileSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfileSpec_To_sunpike_ClusterProfileSpec(a.(*ClusterProfileSpec), b.(*sunpike.ClusterProfileSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfileSpec)(nil), (*ClusterProfileSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfileSpec_To_v1alpha2_ClusterProfileSpec(a.(*sunpike.ClusterProfileSpec), b.(*ClusterProfileSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterProfileStatus)(nil), (*sunpike.ClusterProfileStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterProfileStatus_To_sunpike_ClusterProfileStatus(a.(*ClusterProfileStatus), b.(*sunpike.ClusterProfileStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterProfileStatus)(nil), (*ClusterProfileStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterProfileStatus_To_v1alpha2_ClusterProfileStatus(a.(*sunpike.ClusterProfileStatus), b.(*ClusterProfileStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterSpec)(nil), (*sunpike.ClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterSpec_To_sunpike_ClusterSpec(a.(*ClusterSpec), b.(*sunpike.ClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterSpec)(nil), (*ClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterSpec_To_v1alpha2_ClusterSpec(a.(*sunpike.ClusterSpec), b.(*ClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterStatus)(nil), (*sunpike.ClusterStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterStatus_To_sunpike_ClusterStatus(a.(*ClusterStatus), b.(*sunpike.ClusterStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterStatus)(nil), (*ClusterStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterStatus_To_v1alpha2_ClusterStatus(a.(*sunpike.ClusterStatus), b.(*ClusterStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterVersion)(nil), (*sunpike.ClusterVersion)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterVersion_To_sunpike_ClusterVersion(a.(*ClusterVersion), b.(*sunpike.ClusterVersion), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterVersion)(nil), (*ClusterVersion)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterVersion_To_v1alpha2_ClusterVersion(a.(*sunpike.ClusterVersion), b.(*ClusterVersion), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterVersionAddon)(nil), (*sunpike.ClusterVersionAddon)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterVersionAddon_To_sunpike_ClusterVersionAddon(a.(*ClusterVersionAddon), b.(*sunpike.ClusterVersionAddon), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterVersionAddon)(nil), (*ClusterVersionAddon)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterVersionAddon_To_v1alpha2_ClusterVersionAddon(a.(*sunpike.ClusterVersionAddon), b.(*ClusterVersionAddon), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterVersionList)(nil), (*sunpike.ClusterVersionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClusterVersionList_To_sunpike_ClusterVersionList(a.(*ClusterVersionList), b.(*sunpike.ClusterVersionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ClusterVersionList)(nil), (*ClusterVersionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ClusterVersionList_To_v1alpha2_ClusterVersionList(a.(*sunpike.ClusterVersionList), b.(*ClusterVersionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Condition)(nil), (*sunpike.Condition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Condition_To_sunpike_Condition(a.(*Condition), b.(*sunpike.Condition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.Condition)(nil), (*Condition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_Condition_To_v1alpha2_Condition(a.(*sunpike.Condition), b.(*Condition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ContainerRuntime)(nil), (*sunpike.ContainerRuntime)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ContainerRuntime_To_sunpike_ContainerRuntime(a.(*ContainerRuntime), b.(*sunpike.ContainerRuntime), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ContainerRuntime)(nil), (*ContainerRuntime)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ContainerRuntime_To_v1alpha2_ContainerRuntime(a.(*sunpike.ContainerRuntime), b.(*ContainerRuntime), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DockerOpts)(nil), (*sunpike.DockerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_DockerOpts_To_sunpike_DockerOpts(a.(*DockerOpts), b.(*sunpike.DockerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.DockerOpts)(nil), (*DockerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_DockerOpts_To_v1alpha2_DockerOpts(a.(*sunpike.DockerOpts), b.(*DockerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EC2Instance)(nil), (*sunpike.EC2Instance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EC2Instance_To_sunpike_EC2Instance(a.(*EC2Instance), b.(*sunpike.EC2Instance), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.EC2Instance)(nil), (*EC2Instance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_EC2Instance_To_v1alpha2_EC2Instance(a.(*sunpike.EC2Instance), b.(*EC2Instance), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EC2InstanceNetwork)(nil), (*sunpike.EC2InstanceNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EC2InstanceNetwork_To_sunpike_EC2InstanceNetwork(a.(*EC2InstanceNetwork), b.(*sunpike.EC2InstanceNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.EC2InstanceNetwork)(nil), (*EC2InstanceNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_EC2InstanceNetwork_To_v1alpha2_EC2InstanceNetwork(a.(*sunpike.EC2InstanceNetwork), b.(*EC2InstanceNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EKSCluster)(nil), (*sunpike.EKSCluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EKSCluster_To_sunpike_EKSCluster(a.(*EKSCluster), b.(*sunpike.EKSCluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.EKSCluster)(nil), (*EKSCluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_EKSCluster_To_v1alpha2_EKSCluster(a.(*sunpike.EKSCluster), b.(*EKSCluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EKSClusterLogging)(nil), (*sunpike.EKSClusterLogging)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EKSClusterLogging_To_sunpike_EKSClusterLogging(a.(*EKSClusterLogging), b.(*sunpike.EKSClusterLogging), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.EKSClusterLogging)(nil), (*EKSClusterLogging)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_EKSClusterLogging_To_v1alpha2_EKSClusterLogging(a.(*sunpike.EKSClusterLogging), b.(*EKSClusterLogging), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EKSLogging)(nil), (*sunpike.EKSLogging)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EKSLogging_To_sunpike_EKSLogging(a.(*EKSLogging), b.(*sunpike.EKSLogging), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.EKSLogging)(nil), (*EKSLogging)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_EKSLogging_To_v1alpha2_EKSLogging(a.(*sunpike.EKSLogging), b.(*EKSLogging), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EKSNetwork)(nil), (*sunpike.EKSNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EKSNetwork_To_sunpike_EKSNetwork(a.(*EKSNetwork), b.(*sunpike.EKSNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.EKSNetwork)(nil), (*EKSNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_EKSNetwork_To_v1alpha2_EKSNetwork(a.(*sunpike.EKSNetwork), b.(*EKSNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EKSNodeGroup)(nil), (*sunpike.EKSNodeGroup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EKSNodeGroup_To_sunpike_EKSNodeGroup(a.(*EKSNodeGroup), b.(*sunpike.EKSNodeGroup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.EKSNodeGroup)(nil), (*EKSNodeGroup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_EKSNodeGroup_To_v1alpha2_EKSNodeGroup(a.(*sunpike.EKSNodeGroup), b.(*EKSNodeGroup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EtcdOpts)(nil), (*sunpike.EtcdOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EtcdOpts_To_sunpike_EtcdOpts(a.(*EtcdOpts), b.(*sunpike.EtcdOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.EtcdOpts)(nil), (*EtcdOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_EtcdOpts_To_v1alpha2_EtcdOpts(a.(*sunpike.EtcdOpts), b.(*EtcdOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlannelOpts)(nil), (*sunpike.FlannelOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_FlannelOpts_To_sunpike_FlannelOpts(a.(*FlannelOpts), b.(*sunpike.FlannelOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.FlannelOpts)(nil), (*FlannelOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_FlannelOpts_To_v1alpha2_FlannelOpts(a.(*sunpike.FlannelOpts), b.(*FlannelOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GKECluster)(nil), (*sunpike.GKECluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GKECluster_To_sunpike_GKECluster(a.(*GKECluster), b.(*sunpike.GKECluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.GKECluster)(nil), (*GKECluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_GKECluster_To_v1alpha2_GKECluster(a.(*sunpike.GKECluster), b.(*GKECluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GKEClusterNetwork)(nil), (*sunpike.GKEClusterNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GKEClusterNetwork_To_sunpike_GKEClusterNetwork(a.(*GKEClusterNetwork), b.(*sunpike.GKEClusterNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.GKEClusterNetwork)(nil), (*GKEClusterNetwork)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_GKEClusterNetwork_To_v1alpha2_GKEClusterNetwork(a.(*sunpike.GKEClusterNetwork), b.(*GKEClusterNetwork), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GKEInstance)(nil), (*sunpike.GKEInstance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GKEInstance_To_sunpike_GKEInstance(a.(*GKEInstance), b.(*sunpike.GKEInstance), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.GKEInstance)(nil), (*GKEInstance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_GKEInstance_To_v1alpha2_GKEInstance(a.(*sunpike.GKEInstance), b.(*GKEInstance), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GKENodePool)(nil), (*sunpike.GKENodePool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GKENodePool_To_sunpike_GKENodePool(a.(*GKENodePool), b.(*sunpike.GKENodePool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.GKENodePool)(nil), (*GKENodePool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_GKENodePool_To_v1alpha2_GKENodePool(a.(*sunpike.GKENodePool), b.(*GKENodePool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GoogleCloudProviderCredentials)(nil), (*sunpike.GoogleCloudProviderCredentials)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GoogleCloudProviderCredentials_To_sunpike_GoogleCloudProviderCredentials(a.(*GoogleCloudProviderCredentials), b.(*sunpike.GoogleCloudProviderCredentials), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.GoogleCloudProviderCredentials)(nil), (*GoogleCloudProviderCredentials)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_GoogleCloudProviderCredentials_To_v1alpha2_GoogleCloudProviderCredentials(a.(*sunpike.GoogleCloudProviderCredentials), b.(*GoogleCloudProviderCredentials), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GoogleCloudProviderSpec)(nil), (*sunpike.GoogleCloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GoogleCloudProviderSpec_To_sunpike_GoogleCloudProviderSpec(a.(*GoogleCloudProviderSpec), b.(*sunpike.GoogleCloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.GoogleCloudProviderSpec)(nil), (*GoogleCloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_GoogleCloudProviderSpec_To_v1alpha2_GoogleCloudProviderSpec(a.(*sunpike.GoogleCloudProviderSpec), b.(*GoogleCloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HA)(nil), (*sunpike.HA)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_HA_To_sunpike_HA(a.(*HA), b.(*sunpike.HA), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.HA)(nil), (*HA)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_HA_To_v1alpha2_HA(a.(*sunpike.HA), b.(*HA), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KeepalivedOpts)(nil), (*sunpike.KeepalivedOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KeepalivedOpts_To_sunpike_KeepalivedOpts(a.(*KeepalivedOpts), b.(*sunpike.KeepalivedOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KeepalivedOpts)(nil), (*KeepalivedOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KeepalivedOpts_To_v1alpha2_KeepalivedOpts(a.(*sunpike.KeepalivedOpts), b.(*KeepalivedOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KeystoneOpts)(nil), (*sunpike.KeystoneOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KeystoneOpts_To_sunpike_KeystoneOpts(a.(*KeystoneOpts), b.(*sunpike.KeystoneOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KeystoneOpts)(nil), (*KeystoneOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KeystoneOpts_To_v1alpha2_KeystoneOpts(a.(*sunpike.KeystoneOpts), b.(*KeystoneOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeApiserverOpts)(nil), (*sunpike.KubeApiserverOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(a.(*KubeApiserverOpts), b.(*sunpike.KubeApiserverOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeApiserverOpts)(nil), (*KubeApiserverOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeApiserverOpts_To_v1alpha2_KubeApiserverOpts(a.(*sunpike.KubeApiserverOpts), b.(*KubeApiserverOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeControllerManagerOpts)(nil), (*sunpike.KubeControllerManagerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(a.(*KubeControllerManagerOpts), b.(*sunpike.KubeControllerManagerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeControllerManagerOpts)(nil), (*KubeControllerManagerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeControllerManagerOpts_To_v1alpha2_KubeControllerManagerOpts(a.(*sunpike.KubeControllerManagerOpts), b.(*KubeControllerManagerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeProxyOpts)(nil), (*sunpike.KubeProxyOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeProxyOpts_To_sunpike_KubeProxyOpts(a.(*KubeProxyOpts), b.(*sunpike.KubeProxyOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeProxyOpts)(nil), (*KubeProxyOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeProxyOpts_To_v1alpha2_KubeProxyOpts(a.(*sunpike.KubeProxyOpts), b.(*KubeProxyOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeSchedulerOpts)(nil), (*sunpike.KubeSchedulerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(a.(*KubeSchedulerOpts), b.(*sunpike.KubeSchedulerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeSchedulerOpts)(nil), (*KubeSchedulerOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeSchedulerOpts_To_v1alpha2_KubeSchedulerOpts(a.(*sunpike.KubeSchedulerOpts), b.(*KubeSchedulerOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeVirtOpts)(nil), (*sunpike.KubeVirtOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeVirtOpts_To_sunpike_KubeVirtOpts(a.(*KubeVirtOpts), b.(*sunpike.KubeVirtOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeVirtOpts)(nil), (*KubeVirtOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeVirtOpts_To_v1alpha2_KubeVirtOpts(a.(*sunpike.KubeVirtOpts), b.(*KubeVirtOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeletOpts)(nil), (*sunpike.KubeletOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubeletOpts_To_sunpike_KubeletOpts(a.(*KubeletOpts), b.(*sunpike.KubeletOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.KubeletOpts)(nil), (*KubeletOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_KubeletOpts_To_v1alpha2_KubeletOpts(a.(*sunpike.KubeletOpts), b.(*KubeletOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LoadBalancer)(nil), (*sunpike.LoadBalancer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_LoadBalancer_To_sunpike_LoadBalancer(a.(*LoadBalancer), b.(*sunpike.LoadBalancer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.LoadBalancer)(nil), (*LoadBalancer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_LoadBalancer_To_v1alpha2_LoadBalancer(a.(*sunpike.LoadBalancer), b.(*LoadBalancer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LocalCloudProviderSpec)(nil), (*sunpike.LocalCloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_LocalCloudProviderSpec_To_sunpike_LocalCloudProviderSpec(a.(*LocalCloudProviderSpec), b.(*sunpike.LocalCloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.LocalCloudProviderSpec)(nil), (*LocalCloudProviderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_LocalCloudProviderSpec_To_v1alpha2_LocalCloudProviderSpec(a.(*sunpike.LocalCloudProviderSpec), b.(*LocalCloudProviderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LuigiOpts)(nil), (*sunpike.LuigiOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_LuigiOpts_To_sunpike_LuigiOpts(a.(*LuigiOpts), b.(*sunpike.LuigiOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.LuigiOpts)(nil), (*LuigiOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_LuigiOpts_To_v1alpha2_LuigiOpts(a.(*sunpike.LuigiOpts), b.(*LuigiOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetalLBOpts)(nil), (*sunpike.MetalLBOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_MetalLBOpts_To_sunpike_MetalLBOpts(a.(*MetalLBOpts), b.(*sunpike.MetalLBOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.MetalLBOpts)(nil), (*MetalLBOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_MetalLBOpts_To_v1alpha2_MetalLBOpts(a.(*sunpike.MetalLBOpts), b.(*MetalLBOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Override)(nil), (*sunpike.Override)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Override_To_sunpike_Override(a.(*Override), b.(*sunpike.Override), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.Override)(nil), (*Override)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_Override_To_v1alpha2_Override(a.(*sunpike.Override), b.(*Override), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PF9)(nil), (*sunpike.PF9)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_PF9_To_sunpike_PF9(a.(*PF9), b.(*sunpike.PF9), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.PF9)(nil), (*PF9)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_PF9_To_v1alpha2_PF9(a.(*sunpike.PF9), b.(*PF9), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Params)(nil), (*sunpike.Params)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Params_To_sunpike_Params(a.(*Params), b.(*sunpike.Params), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.Params)(nil), (*Params)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_Params_To_v1alpha2_Params(a.(*sunpike.Params), b.(*Params), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ProfileAgentOpts)(nil), (*sunpike.ProfileAgentOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(a.(*ProfileAgentOpts), b.(*sunpike.ProfileAgentOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.ProfileAgentOpts)(nil), (*ProfileAgentOpts)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_ProfileAgentOpts_To_v1alpha2_ProfileAgentOpts(a.(*sunpike.ProfileAgentOpts), b.(*ProfileAgentOpts), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Region)(nil), (*sunpike.Region)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Region_To_sunpike_Region(a.(*Region), b.(*sunpike.Region), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.Region)(nil), (*Region)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_Region_To_v1alpha2_Region(a.(*sunpike.Region), b.(*Region), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*StorageBackend)(nil), (*sunpike.StorageBackend)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_StorageBackend_To_sunpike_StorageBackend(a.(*StorageBackend), b.(*sunpike.StorageBackend), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.StorageBackend)(nil), (*StorageBackend)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_StorageBackend_To_v1alpha2_StorageBackend(a.(*sunpike.StorageBackend), b.(*StorageBackend), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Toleration)(nil), (*sunpike.Toleration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Toleration_To_sunpike_Toleration(a.(*Toleration), b.(*sunpike.Toleration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sunpike.Toleration)(nil), (*Toleration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sunpike_Toleration_To_v1alpha2_Toleration(a.(*sunpike.Toleration), b.(*Toleration), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha2_AKSAgentPool_To_sunpike_AKSAgentPool(in *AKSAgentPool, out *sunpike.AKSAgentPool, s conversion.Scope) error {
	out.Name = in.Name
	out.Count = in.Count
	out.VMSize = in.VMSize
	out.OSDiskSizeGB = in.OSDiskSizeGB
	out.OSDiskType = in.OSDiskType
	out.MaxPods = in.MaxPods
	out.Type = in.Type
	out.AvailabilityZone = *(*[]string)(unsafe.Pointer(&in.AvailabilityZone))
	out.ProvisioningState = in.ProvisioningState
	out.PowerState = in.PowerState
	out.KubernetesVersion = in.KubernetesVersion
	out.Labels = *(*map[string]string)(unsafe.Pointer(&in.Labels))
	out.Mode = in.Mode
	out.OSType = in.OSType
	out.NodeImageVersion = in.NodeImageVersion
	out.VnetSubnetID = in.VnetSubnetID
	return nil
}

// Convert_v1alpha2_AKSAgentPool_To_sunpike_AKSAgentPool is an autogenerated conversion function.
func Convert_v1alpha2_AKSAgentPool_To_sunpike_AKSAgentPool(in *AKSAgentPool, out *sunpike.AKSAgentPool, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSAgentPool_To_sunpike_AKSAgentPool(in, out, s)
}

func autoConvert_sunpike_AKSAgentPool_To_v1alpha2_AKSAgentPool(in *sunpike.AKSAgentPool, out *AKSAgentPool, s conversion.Scope) error {
	out.Name = in.Name
	out.Count = in.Count
	out.VMSize = in.VMSize
	out.OSDiskSizeGB = in.OSDiskSizeGB
	out.OSDiskType = in.OSDiskType
	out.MaxPods = in.MaxPods
	out.Type = in.Type
	out.AvailabilityZone = *(*[]string)(unsafe.Pointer(&in.AvailabilityZone))
	out.ProvisioningState = in.ProvisioningState
	out.PowerState = in.PowerState
	out.KubernetesVersion = in.KubernetesVersion
	out.Labels = *(*map[string]string)(unsafe.Pointer(&in.Labels))
	out.Mode = in.Mode
	out.OSType = in.OSType
	out.NodeImageVersion = in.NodeImageVersion
	out.VnetSubnetID = in.VnetSubnetID
	return nil
}

// Convert_sunpike_AKSAgentPool_To_v1alpha2_AKSAgentPool is an autogenerated conversion function.
func Convert_sunpike_AKSAgentPool_To_v1alpha2_AKSAgentPool(in *sunpike.AKSAgentPool, out *AKSAgentPool, s conversion.Scope) error {
	return autoConvert_sunpike_AKSAgentPool_To_v1alpha2_AKSAgentPool(in, out, s)
}

func autoConvert_v1alpha2_AKSCluster_To_sunpike_AKSCluster(in *AKSCluster, out *sunpike.AKSCluster, s conversion.Scope) error {
	out.Location = in.Location
	out.KubernetesVersion = in.KubernetesVersion
	out.Type = in.Type
	out.ProvisioningState = in.ProvisioningState
	out.PowerState = in.PowerState
	out.EnableRBAC = in.EnableRBAC
	out.MaxAgentPools = in.MaxAgentPools
	out.NodeResourceGroup = in.NodeResourceGroup
	out.Network = (*sunpike.AKSNetwork)(unsafe.Pointer(in.Network))
	out.AgentPools = *(*[]sunpike.AKSAgentPool)(unsafe.Pointer(&in.AgentPools))
	out.Instances = *(*[]sunpike.AKSInstance)(unsafe.Pointer(&in.Instances))
	out.ServicePrincipalClientID = in.ServicePrincipalClientID
	out.EnablePrivateCluster = (*bool)(unsafe.Pointer(in.EnablePrivateCluster))
	out.DNSPrefix = in.DNSPrefix
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.FQDN = in.FQDN
	return nil
}

// Convert_v1alpha2_AKSCluster_To_sunpike_AKSCluster is an autogenerated conversion function.
func Convert_v1alpha2_AKSCluster_To_sunpike_AKSCluster(in *AKSCluster, out *sunpike.AKSCluster, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSCluster_To_sunpike_AKSCluster(in, out, s)
}

func autoConvert_sunpike_AKSCluster_To_v1alpha2_AKSCluster(in *sunpike.AKSCluster, out *AKSCluster, s conversion.Scope) error {
	out.Location = in.Location
	out.KubernetesVersion = in.KubernetesVersion
	out.Type = in.Type
	out.ProvisioningState = in.ProvisioningState
	out.PowerState = in.PowerState
	out.EnableRBAC = in.EnableRBAC
	out.MaxAgentPools = in.MaxAgentPools
	out.NodeResourceGroup = in.NodeResourceGroup
	out.Network = (*AKSNetwork)(unsafe.Pointer(in.Network))
	out.AgentPools = *(*[]AKSAgentPool)(unsafe.Pointer(&in.AgentPools))
	out.Instances = *(*[]AKSInstance)(unsafe.Pointer(&in.Instances))
	out.ServicePrincipalClientID = in.ServicePrincipalClientID
	out.EnablePrivateCluster = (*bool)(unsafe.Pointer(in.EnablePrivateCluster))
	out.DNSPrefix = in.DNSPrefix
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.FQDN = in.FQDN
	return nil
}

// Convert_sunpike_AKSCluster_To_v1alpha2_AKSCluster is an autogenerated conversion function.
func Convert_sunpike_AKSCluster_To_v1alpha2_AKSCluster(in *sunpike.AKSCluster, out *AKSCluster, s conversion.Scope) error {
	return autoConvert_sunpike_AKSCluster_To_v1alpha2_AKSCluster(in, out, s)
}

func autoConvert_v1alpha2_AKSInstance_To_sunpike_AKSInstance(in *AKSInstance, out *sunpike.AKSInstance, s conversion.Scope) error {
	out.Name = in.Name
	out.Location = in.Location
	out.InstanceId = in.InstanceId
	out.VMID = in.VMID
	out.Zones = *(*[]string)(unsafe.Pointer(&in.Zones))
	out.SKU = (*sunpike.AKSInstanceSKU)(unsafe.Pointer(in.SKU))
	out.VirtualMachineScaleSetName = in.VirtualMachineScaleSetName
	out.AgentPoolName = in.AgentPoolName
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.NetworkInterfaces = *(*[]string)(unsafe.Pointer(&in.NetworkInterfaces))
	out.OSProfile = (*sunpike.AKSInstanceOSProfile)(unsafe.Pointer(in.OSProfile))
	return nil
}

// Convert_v1alpha2_AKSInstance_To_sunpike_AKSInstance is an autogenerated conversion function.
func Convert_v1alpha2_AKSInstance_To_sunpike_AKSInstance(in *AKSInstance, out *sunpike.AKSInstance, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSInstance_To_sunpike_AKSInstance(in, out, s)
}

func autoConvert_sunpike_AKSInstance_To_v1alpha2_AKSInstance(in *sunpike.AKSInstance, out *AKSInstance, s conversion.Scope) error {
	out.Name = in.Name
	out.Location = in.Location
	out.InstanceId = in.InstanceId
	out.VMID = in.VMID
	out.Zones = *(*[]string)(unsafe.Pointer(&in.Zones))
	out.SKU = (*AKSInstanceSKU)(unsafe.Pointer(in.SKU))
	out.VirtualMachineScaleSetName = in.VirtualMachineScaleSetName
	out.AgentPoolName = in.AgentPoolName
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.NetworkInterfaces = *(*[]string)(unsafe.Pointer(&in.NetworkInterfaces))
	out.OSProfile = (*AKSInstanceOSProfile)(unsafe.Pointer(in.OSProfile))
	return nil
}

// Convert_sunpike_AKSInstance_To_v1alpha2_AKSInstance is an autogenerated conversion function.
func Convert_sunpike_AKSInstance_To_v1alpha2_AKSInstance(in *sunpike.AKSInstance, out *AKSInstance, s conversion.Scope) error {
	return autoConvert_sunpike_AKSInstance_To_v1alpha2_AKSInstance(in, out, s)
}

func autoConvert_v1alpha2_AKSInstanceLinuxConfiguration_To_sunpike_AKSInstanceLinuxConfiguration(in *AKSInstanceLinuxConfiguration, out *sunpike.AKSInstanceLinuxConfiguration, s conversion.Scope) error {
	out.SSHKeys = *(*[]sunpike.AKSLinuxInstanceSSHKey)(unsafe.Pointer(&in.SSHKeys))
	out.DisablePasswordAuthentication = in.DisablePasswordAuthentication
	out.ProvisionVMAgent = in.ProvisionVMAgent
	return nil
}

// Convert_v1alpha2_AKSInstanceLinuxConfiguration_To_sunpike_AKSInstanceLinuxConfiguration is an autogenerated conversion function.
func Convert_v1alpha2_AKSInstanceLinuxConfiguration_To_sunpike_AKSInstanceLinuxConfiguration(in *AKSInstanceLinuxConfiguration, out *sunpike.AKSInstanceLinuxConfiguration, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSInstanceLinuxConfiguration_To_sunpike_AKSInstanceLinuxConfiguration(in, out, s)
}

func autoConvert_sunpike_AKSInstanceLinuxConfiguration_To_v1alpha2_AKSInstanceLinuxConfiguration(in *sunpike.AKSInstanceLinuxConfiguration, out *AKSInstanceLinuxConfiguration, s conversion.Scope) error {
	out.SSHKeys = *(*[]AKSLinuxInstanceSSHKey)(unsafe.Pointer(&in.SSHKeys))
	out.DisablePasswordAuthentication = in.DisablePasswordAuthentication
	out.ProvisionVMAgent = in.ProvisionVMAgent
	return nil
}

// Convert_sunpike_AKSInstanceLinuxConfiguration_To_v1alpha2_AKSInstanceLinuxConfiguration is an autogenerated conversion function.
func Convert_sunpike_AKSInstanceLinuxConfiguration_To_v1alpha2_AKSInstanceLinuxConfiguration(in *sunpike.AKSInstanceLinuxConfiguration, out *AKSInstanceLinuxConfiguration, s conversion.Scope) error {
	return autoConvert_sunpike_AKSInstanceLinuxConfiguration_To_v1alpha2_AKSInstanceLinuxConfiguration(in, out, s)
}

func autoConvert_v1alpha2_AKSInstanceOSProfile_To_sunpike_AKSInstanceOSProfile(in *AKSInstanceOSProfile, out *sunpike.AKSInstanceOSProfile, s conversion.Scope) error {
	out.ComputerName = in.ComputerName
	out.AdminUsername = in.AdminUsername
	out.LinuxConfiguration = (*sunpike.AKSInstanceLinuxConfiguration)(unsafe.Pointer(in.LinuxConfiguration))
	out.WindowsConfiguration = (*sunpike.AKSInstanceWindowsConfiguration)(unsafe.Pointer(in.WindowsConfiguration))
	return nil
}

// Convert_v1alpha2_AKSInstanceOSProfile_To_sunpike_AKSInstanceOSProfile is an autogenerated conversion function.
func Convert_v1alpha2_AKSInstanceOSProfile_To_sunpike_AKSInstanceOSProfile(in *AKSInstanceOSProfile, out *sunpike.AKSInstanceOSProfile, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSInstanceOSProfile_To_sunpike_AKSInstanceOSProfile(in, out, s)
}

func autoConvert_sunpike_AKSInstanceOSProfile_To_v1alpha2_AKSInstanceOSProfile(in *sunpike.AKSInstanceOSProfile, out *AKSInstanceOSProfile, s conversion.Scope) error {
	out.ComputerName = in.ComputerName
	out.AdminUsername = in.AdminUsername
	out.LinuxConfiguration = (*AKSInstanceLinuxConfiguration)(unsafe.Pointer(in.LinuxConfiguration))
	out.WindowsConfiguration = (*AKSInstanceWindowsConfiguration)(unsafe.Pointer(in.WindowsConfiguration))
	return nil
}

// Convert_sunpike_AKSInstanceOSProfile_To_v1alpha2_AKSInstanceOSProfile is an autogenerated conversion function.
func Convert_sunpike_AKSInstanceOSProfile_To_v1alpha2_AKSInstanceOSProfile(in *sunpike.AKSInstanceOSProfile, out *AKSInstanceOSProfile, s conversion.Scope) error {
	return autoConvert_sunpike_AKSInstanceOSProfile_To_v1alpha2_AKSInstanceOSProfile(in, out, s)
}

func autoConvert_v1alpha2_AKSInstanceSKU_To_sunpike_AKSInstanceSKU(in *AKSInstanceSKU, out *sunpike.AKSInstanceSKU, s conversion.Scope) error {
	out.Name = in.Name
	out.Tier = in.Tier
	return nil
}

// Convert_v1alpha2_AKSInstanceSKU_To_sunpike_AKSInstanceSKU is an autogenerated conversion function.
func Convert_v1alpha2_AKSInstanceSKU_To_sunpike_AKSInstanceSKU(in *AKSInstanceSKU, out *sunpike.AKSInstanceSKU, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSInstanceSKU_To_sunpike_AKSInstanceSKU(in, out, s)
}

func autoConvert_sunpike_AKSInstanceSKU_To_v1alpha2_AKSInstanceSKU(in *sunpike.AKSInstanceSKU, out *AKSInstanceSKU, s conversion.Scope) error {
	out.Name = in.Name
	out.Tier = in.Tier
	return nil
}

// Convert_sunpike_AKSInstanceSKU_To_v1alpha2_AKSInstanceSKU is an autogenerated conversion function.
func Convert_sunpike_AKSInstanceSKU_To_v1alpha2_AKSInstanceSKU(in *sunpike.AKSInstanceSKU, out *AKSInstanceSKU, s conversion.Scope) error {
	return autoConvert_sunpike_AKSInstanceSKU_To_v1alpha2_AKSInstanceSKU(in, out, s)
}

func autoConvert_v1alpha2_AKSInstanceWindowsConfiguration_To_sunpike_AKSInstanceWindowsConfiguration(in *AKSInstanceWindowsConfiguration, out *sunpike.AKSInstanceWindowsConfiguration, s conversion.Scope) error {
	out.WinRMListeners = *(*[]sunpike.AKSWindowsInstanceWinRMListener)(unsafe.Pointer(&in.WinRMListeners))
	out.EnableAutomaticUpdates = in.EnableAutomaticUpdates
	out.ProvisionVMAgent = in.ProvisionVMAgent
	out.TimeZone = in.TimeZone
	return nil
}

// Convert_v1alpha2_AKSInstanceWindowsConfiguration_To_sunpike_AKSInstanceWindowsConfiguration is an autogenerated conversion function.
func Convert_v1alpha2_AKSInstanceWindowsConfiguration_To_sunpike_AKSInstanceWindowsConfiguration(in *AKSInstanceWindowsConfiguration, out *sunpike.AKSInstanceWindowsConfiguration, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSInstanceWindowsConfiguration_To_sunpike_AKSInstanceWindowsConfiguration(in, out, s)
}

func autoConvert_sunpike_AKSInstanceWindowsConfiguration_To_v1alpha2_AKSInstanceWindowsConfiguration(in *sunpike.AKSInstanceWindowsConfiguration, out *AKSInstanceWindowsConfiguration, s conversion.Scope) error {
	out.WinRMListeners = *(*[]AKSWindowsInstanceWinRMListener)(unsafe.Pointer(&in.WinRMListeners))
	out.EnableAutomaticUpdates = in.EnableAutomaticUpdates
	out.ProvisionVMAgent = in.ProvisionVMAgent
	out.TimeZone = in.TimeZone
	return nil
}

// Convert_sunpike_AKSInstanceWindowsConfiguration_To_v1alpha2_AKSInstanceWindowsConfiguration is an autogenerated conversion function.
func Convert_sunpike_AKSInstanceWindowsConfiguration_To_v1alpha2_AKSInstanceWindowsConfiguration(in *sunpike.AKSInstanceWindowsConfiguration, out *AKSInstanceWindowsConfiguration, s conversion.Scope) error {
	return autoConvert_sunpike_AKSInstanceWindowsConfiguration_To_v1alpha2_AKSInstanceWindowsConfiguration(in, out, s)
}

func autoConvert_v1alpha2_AKSLinuxInstanceSSHKey_To_sunpike_AKSLinuxInstanceSSHKey(in *AKSLinuxInstanceSSHKey, out *sunpike.AKSLinuxInstanceSSHKey, s conversion.Scope) error {
	out.KeyData = in.KeyData
	out.Path = in.Path
	return nil
}

// Convert_v1alpha2_AKSLinuxInstanceSSHKey_To_sunpike_AKSLinuxInstanceSSHKey is an autogenerated conversion function.
func Convert_v1alpha2_AKSLinuxInstanceSSHKey_To_sunpike_AKSLinuxInstanceSSHKey(in *AKSLinuxInstanceSSHKey, out *sunpike.AKSLinuxInstanceSSHKey, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSLinuxInstanceSSHKey_To_sunpike_AKSLinuxInstanceSSHKey(in, out, s)
}

func autoConvert_sunpike_AKSLinuxInstanceSSHKey_To_v1alpha2_AKSLinuxInstanceSSHKey(in *sunpike.AKSLinuxInstanceSSHKey, out *AKSLinuxInstanceSSHKey, s conversion.Scope) error {
	out.KeyData = in.KeyData
	out.Path = in.Path
	return nil
}

// Convert_sunpike_AKSLinuxInstanceSSHKey_To_v1alpha2_AKSLinuxInstanceSSHKey is an autogenerated conversion function.
func Convert_sunpike_AKSLinuxInstanceSSHKey_To_v1alpha2_AKSLinuxInstanceSSHKey(in *sunpike.AKSLinuxInstanceSSHKey, out *AKSLinuxInstanceSSHKey, s conversion.Scope) error {
	return autoConvert_sunpike_AKSLinuxInstanceSSHKey_To_v1alpha2_AKSLinuxInstanceSSHKey(in, out, s)
}

func autoConvert_v1alpha2_AKSLoadBalancerProfile_To_sunpike_AKSLoadBalancerProfile(in *AKSLoadBalancerProfile, out *sunpike.AKSLoadBalancerProfile, s conversion.Scope) error {
	out.AllocatedOutboundPorts = in.AllocatedOutboundPorts
	out.ManagedOutboundIPs = in.ManagedOutboundIPs
	out.EffectiveOutboundIPs = *(*[]string)(unsafe.Pointer(&in.EffectiveOutboundIPs))
	out.OutboundIPs = *(*[]string)(unsafe.Pointer(&in.OutboundIPs))
	out.OutboundIPPrefixes = *(*[]string)(unsafe.Pointer(&in.OutboundIPPrefixes))
	return nil
}

// Convert_v1alpha2_AKSLoadBalancerProfile_To_sunpike_AKSLoadBalancerProfile is an autogenerated conversion function.
func Convert_v1alpha2_AKSLoadBalancerProfile_To_sunpike_AKSLoadBalancerProfile(in *AKSLoadBalancerProfile, out *sunpike.AKSLoadBalancerProfile, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSLoadBalancerProfile_To_sunpike_AKSLoadBalancerProfile(in, out, s)
}

func autoConvert_sunpike_AKSLoadBalancerProfile_To_v1alpha2_AKSLoadBalancerProfile(in *sunpike.AKSLoadBalancerProfile, out *AKSLoadBalancerProfile, s conversion.Scope) error {
	out.AllocatedOutboundPorts = in.AllocatedOutboundPorts
	out.ManagedOutboundIPs = in.ManagedOutboundIPs
	out.EffectiveOutboundIPs = *(*[]string)(unsafe.Pointer(&in.EffectiveOutboundIPs))
	out.OutboundIPs = *(*[]string)(unsafe.Pointer(&in.OutboundIPs))
	out.OutboundIPPrefixes = *(*[]string)(unsafe.Pointer(&in.OutboundIPPrefixes))
	return nil
}

// Convert_sunpike_AKSLoadBalancerProfile_To_v1alpha2_AKSLoadBalancerProfile is an autogenerated conversion function.
func Convert_sunpike_AKSLoadBalancerProfile_To_v1alpha2_AKSLoadBalancerProfile(in *sunpike.AKSLoadBalancerProfile, out *AKSLoadBalancerProfile, s conversion.Scope) error {
	return autoConvert_sunpike_AKSLoadBalancerProfile_To_v1alpha2_AKSLoadBalancerProfile(in, out, s)
}

func autoConvert_v1alpha2_AKSNetwork_To_sunpike_AKSNetwork(in *AKSNetwork, out *sunpike.AKSNetwork, s conversion.Scope) error {
	out.Plugin = in.Plugin
	out.Policy = in.Policy
	out.ServiceCIDR = in.ServiceCIDR
	out.ContainerCIDR = in.ContainerCIDR
	out.DNSServiceIP = in.DNSServiceIP
	out.OutboundType = in.OutboundType
	out.LoadBalancerSKU = in.LoadBalancerSKU
	out.LoadBalancerProfile = (*sunpike.AKSLoadBalancerProfile)(unsafe.Pointer(in.LoadBalancerProfile))
	return nil
}

// Convert_v1alpha2_AKSNetwork_To_sunpike_AKSNetwork is an autogenerated conversion function.
func Convert_v1alpha2_AKSNetwork_To_sunpike_AKSNetwork(in *AKSNetwork, out *sunpike.AKSNetwork, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSNetwork_To_sunpike_AKSNetwork(in, out, s)
}

func autoConvert_sunpike_AKSNetwork_To_v1alpha2_AKSNetwork(in *sunpike.AKSNetwork, out *AKSNetwork, s conversion.Scope) error {
	out.Plugin = in.Plugin
	out.Policy = in.Policy
	out.ServiceCIDR = in.ServiceCIDR
	out.ContainerCIDR = in.ContainerCIDR
	out.DNSServiceIP = in.DNSServiceIP
	out.OutboundType = in.OutboundType
	out.LoadBalancerSKU = in.LoadBalancerSKU
	out.LoadBalancerProfile = (*AKSLoadBalancerProfile)(unsafe.Pointer(in.LoadBalancerProfile))
	return nil
}

// Convert_sunpike_AKSNetwork_To_v1alpha2_AKSNetwork is an autogenerated conversion function.
func Convert_sunpike_AKSNetwork_To_v1alpha2_AKSNetwork(in *sunpike.AKSNetwork, out *AKSNetwork, s conversion.Scope) error {
	return autoConvert_sunpike_AKSNetwork_To_v1alpha2_AKSNetwork(in, out, s)
}

func autoConvert_v1alpha2_AKSWindowsInstanceWinRMListener_To_sunpike_AKSWindowsInstanceWinRMListener(in *AKSWindowsInstanceWinRMListener, out *sunpike.AKSWindowsInstanceWinRMListener, s conversion.Scope) error {
	out.CertificateURL = in.CertificateURL
	out.Protocol = in.Protocol
	return nil
}

// Convert_v1alpha2_AKSWindowsInstanceWinRMListener_To_sunpike_AKSWindowsInstanceWinRMListener is an autogenerated conversion function.
func Convert_v1alpha2_AKSWindowsInstanceWinRMListener_To_sunpike_AKSWindowsInstanceWinRMListener(in *AKSWindowsInstanceWinRMListener, out *sunpike.AKSWindowsInstanceWinRMListener, s conversion.Scope) error {
	return autoConvert_v1alpha2_AKSWindowsInstanceWinRMListener_To_sunpike_AKSWindowsInstanceWinRMListener(in, out, s)
}

func autoConvert_sunpike_AKSWindowsInstanceWinRMListener_To_v1alpha2_AKSWindowsInstanceWinRMListener(in *sunpike.AKSWindowsInstanceWinRMListener, out *AKSWindowsInstanceWinRMListener, s conversion.Scope) error {
	out.CertificateURL = in.CertificateURL
	out.Protocol = in.Protocol
	return nil
}

// Convert_sunpike_AKSWindowsInstanceWinRMListener_To_v1alpha2_AKSWindowsInstanceWinRMListener is an autogenerated conversion function.
func Convert_sunpike_AKSWindowsInstanceWinRMListener_To_v1alpha2_AKSWindowsInstanceWinRMListener(in *sunpike.AKSWindowsInstanceWinRMListener, out *AKSWindowsInstanceWinRMListener, s conversion.Scope) error {
	return autoConvert_sunpike_AKSWindowsInstanceWinRMListener_To_v1alpha2_AKSWindowsInstanceWinRMListener(in, out, s)
}

func autoConvert_v1alpha2_APIEndpoint_To_sunpike_APIEndpoint(in *APIEndpoint, out *sunpike.APIEndpoint, s conversion.Scope) error {
	out.Host = in.Host
	out.Port = in.Port
	out.UsePF9Domain = in.UsePF9Domain
	return nil
}

// Convert_v1alpha2_APIEndpoint_To_sunpike_APIEndpoint is an autogenerated conversion function.
func Convert_v1alpha2_APIEndpoint_To_sunpike_APIEndpoint(in *APIEndpoint, out *sunpike.APIEndpoint, s conversion.Scope) error {
	return autoConvert_v1alpha2_APIEndpoint_To_sunpike_APIEndpoint(in, out, s)
}

func autoConvert_sunpike_APIEndpoint_To_v1alpha2_APIEndpoint(in *sunpike.APIEndpoint, out *APIEndpoint, s conversion.Scope) error {
	out.Host = in.Host
	out.Port = in.Port
	out.UsePF9Domain = in.UsePF9Domain
	return nil
}

// Convert_sunpike_APIEndpoint_To_v1alpha2_APIEndpoint is an autogenerated conversion function.
func Convert_sunpike_APIEndpoint_To_v1alpha2_APIEndpoint(in *sunpike.APIEndpoint, out *APIEndpoint, s conversion.Scope) error {
	return autoConvert_sunpike_APIEndpoint_To_v1alpha2_APIEndpoint(in, out, s)
}

func autoConvert_v1alpha2_AWSCloudProviderCredentials_To_sunpike_AWSCloudProviderCredentials(in *AWSCloudProviderCredentials, out *sunpike.AWSCloudProviderCredentials, s conversion.Scope) error {
	out.AccessKeyID = in.AccessKeyID
	out.SecretAccessKey = in.SecretAccessKey
	out.Region = in.Region
	return nil
}

// Convert_v1alpha2_AWSCloudProviderCredentials_To_sunpike_AWSCloudProviderCredentials is an autogenerated conversion function.
func Convert_v1alpha2_AWSCloudProviderCredentials_To_sunpike_AWSCloudProviderCredentials(in *AWSCloudProviderCredentials, out *sunpike.AWSCloudProviderCredentials, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSCloudProviderCredentials_To_sunpike_AWSCloudProviderCredentials(in, out, s)
}

func autoConvert_sunpike_AWSCloudProviderCredentials_To_v1alpha2_AWSCloudProviderCredentials(in *sunpike.AWSCloudProviderCredentials, out *AWSCloudProviderCredentials, s conversion.Scope) error {
	out.AccessKeyID = in.AccessKeyID
	out.SecretAccessKey = in.SecretAccessKey
	out.Region = in.Region
	return nil
}

// Convert_sunpike_AWSCloudProviderCredentials_To_v1alpha2_AWSCloudProviderCredentials is an autogenerated conversion function.
func Convert_sunpike_AWSCloudProviderCredentials_To_v1alpha2_AWSCloudProviderCredentials(in *sunpike.AWSCloudProviderCredentials, out *AWSCloudProviderCredentials, s conversion.Scope) error {
	return autoConvert_sunpike_AWSCloudProviderCredentials_To_v1alpha2_AWSCloudProviderCredentials(in, out, s)
}

func autoConvert_v1alpha2_AWSCloudProviderSpec_To_sunpike_AWSCloudProviderSpec(in *AWSCloudProviderSpec, out *sunpike.AWSCloudProviderSpec, s conversion.Scope) error {
	out.SecretName = in.SecretName
	out.Region = in.Region
	return nil
}

// Convert_v1alpha2_AWSCloudProviderSpec_To_sunpike_AWSCloudProviderSpec is an autogenerated conversion function.
func Convert_v1alpha2_AWSCloudProviderSpec_To_sunpike_AWSCloudProviderSpec(in *AWSCloudProviderSpec, out *sunpike.AWSCloudProviderSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSCloudProviderSpec_To_sunpike_AWSCloudProviderSpec(in, out, s)
}

func autoConvert_sunpike_AWSCloudProviderSpec_To_v1alpha2_AWSCloudProviderSpec(in *sunpike.AWSCloudProviderSpec, out *AWSCloudProviderSpec, s conversion.Scope) error {
	out.SecretName = in.SecretName
	out.Region = in.Region
	return nil
}

// Convert_sunpike_AWSCloudProviderSpec_To_v1alpha2_AWSCloudProviderSpec is an autogenerated conversion function.
func Convert_sunpike_AWSCloudProviderSpec_To_v1alpha2_AWSCloudProviderSpec(in *sunpike.AWSCloudProviderSpec, out *AWSCloudProviderSpec, s conversion.Scope) error {
	return autoConvert_sunpike_AWSCloudProviderSpec_To_v1alpha2_AWSCloudProviderSpec(in, out, s)
}

func autoConvert_v1alpha2_AWSCluster_To_sunpike_AWSCluster(in *AWSCluster, out *sunpike.AWSCluster, s conversion.Scope) error {
	out.SSHKeyName = in.SSHKeyName
	out.Region = in.Region
	out.AZs = *(*[]string)(unsafe.Pointer(&in.AZs))
	out.AMI = in.AMI
	out.MasterFlavor = in.MasterFlavor
	out.WorkerFlavor = in.WorkerFlavor
	return nil
}

// Convert_v1alpha2_AWSCluster_To_sunpike_AWSCluster is an autogenerated conversion function.
func Convert_v1alpha2_AWSCluster_To_sunpike_AWSCluster(in *AWSCluster, out *sunpike.AWSCluster, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSCluster_To_sunpike_AWSCluster(in, out, s)
}

func autoConvert_sunpike_AWSCluster_To_v1alpha2_AWSCluster(in *sunpike.AWSCluster, out *AWSCluster, s conversion.Scope) error {
	out.SSHKeyName = in.SSHKeyName
	out.Region = in.Region
	out.AZs = *(*[]string)(unsafe.Pointer(&in.AZs))
	out.AMI = in.AMI
	out.MasterFlavor = in.MasterFlavor
	out.WorkerFlavor = in.WorkerFlavor
	return nil
}

// Convert_sunpike_AWSCluster_To_v1alpha2_AWSCluster is an autogenerated conversion function.
func Convert_sunpike_AWSCluster_To_v1alpha2_AWSCluster(in *sunpike.AWSCluster, out *AWSCluster, s conversion.Scope) error {
	return autoConvert_sunpike_AWSCluster_To_v1alpha2_AWSCluster(in, out, s)
}

func autoConvert_v1alpha2_AWSOpts_To_sunpike_AWSOpts(in *AWSOpts, out *sunpike.AWSOpts, s conversion.Scope) error {
	out.ExternalSNAT = in.ExternalSNAT
	return nil
}

// Convert_v1alpha2_AWSOpts_To_sunpike_AWSOpts is an autogenerated conversion function.
func Convert_v1alpha2_AWSOpts_To_sunpike_AWSOpts(in *AWSOpts, out *sunpike.AWSOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSOpts_To_sunpike_AWSOpts(in, out, s)
}

func autoConvert_sunpike_AWSOpts_To_v1alpha2_AWSOpts(in *sunpike.AWSOpts, out *AWSOpts, s conversion.Scope) error {
	out.ExternalSNAT = in.ExternalSNAT
	return nil
}

// Convert_sunpike_AWSOpts_To_v1alpha2_AWSOpts is an autogenerated conversion function.
func Convert_sunpike_AWSOpts_To_v1alpha2_AWSOpts(in *sunpike.AWSOpts, out *AWSOpts, s conversion.Scope) error {
	return autoConvert_sunpike_AWSOpts_To_v1alpha2_AWSOpts(in, out, s)
}

func autoConvert_v1alpha2_AWSScalingConfig_To_sunpike_AWSScalingConfig(in *AWSScalingConfig, out *sunpike.AWSScalingConfig, s conversion.Scope) error {
	out.MinSize = in.MinSize
	out.MaxSize = in.MaxSize
	out.DesiredSize = in.DesiredSize
	return nil
}

// Convert_v1alpha2_AWSScalingConfig_To_sunpike_AWSScalingConfig is an autogenerated conversion function.
func Convert_v1alpha2_AWSScalingConfig_To_sunpike_AWSScalingConfig(in *AWSScalingConfig, out *sunpike.AWSScalingConfig, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSScalingConfig_To_sunpike_AWSScalingConfig(in, out, s)
}

func autoConvert_sunpike_AWSScalingConfig_To_v1alpha2_AWSScalingConfig(in *sunpike.AWSScalingConfig, out *AWSScalingConfig, s conversion.Scope) error {
	out.MinSize = in.MinSize
	out.MaxSize = in.MaxSize
	out.DesiredSize = in.DesiredSize
	return nil
}

// Convert_sunpike_AWSScalingConfig_To_v1alpha2_AWSScalingConfig is an autogenerated conversion function.
func Convert_sunpike_AWSScalingConfig_To_v1alpha2_AWSScalingConfig(in *sunpike.AWSScalingConfig, out *AWSScalingConfig, s conversion.Scope) error {
	return autoConvert_sunpike_AWSScalingConfig_To_v1alpha2_AWSScalingConfig(in, out, s)
}

func autoConvert_v1alpha2_AWSVPC_To_sunpike_AWSVPC(in *AWSVPC, out *sunpike.AWSVPC, s conversion.Scope) error {
	out.VPCID = in.VPCID
	out.SecurityGroup = *(*[]string)(unsafe.Pointer(&in.SecurityGroup))
	out.PublicAccess = in.PublicAccess
	out.PrivateAccess = in.PrivateAccess
	out.ClusterSecurityGroupID = in.ClusterSecurityGroupID
	out.Subnets = *(*[]string)(unsafe.Pointer(&in.Subnets))
	return nil
}

// Convert_v1alpha2_AWSVPC_To_sunpike_AWSVPC is an autogenerated conversion function.
func Convert_v1alpha2_AWSVPC_To_sunpike_AWSVPC(in *AWSVPC, out *sunpike.AWSVPC, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSVPC_To_sunpike_AWSVPC(in, out, s)
}

func autoConvert_sunpike_AWSVPC_To_v1alpha2_AWSVPC(in *sunpike.AWSVPC, out *AWSVPC, s conversion.Scope) error {
	out.VPCID = in.VPCID
	out.SecurityGroup = *(*[]string)(unsafe.Pointer(&in.SecurityGroup))
	out.PublicAccess = in.PublicAccess
	out.PrivateAccess = in.PrivateAccess
	out.ClusterSecurityGroupID = in.ClusterSecurityGroupID
	out.Subnets = *(*[]string)(unsafe.Pointer(&in.Subnets))
	return nil
}

// Convert_sunpike_AWSVPC_To_v1alpha2_AWSVPC is an autogenerated conversion function.
func Convert_sunpike_AWSVPC_To_v1alpha2_AWSVPC(in *sunpike.AWSVPC, out *AWSVPC, s conversion.Scope) error {
	return autoConvert_sunpike_AWSVPC_To_v1alpha2_AWSVPC(in, out, s)
}

func autoConvert_v1alpha2_AddonOperatorOpts_To_sunpike_AddonOperatorOpts(in *AddonOperatorOpts, out *sunpike.AddonOperatorOpts, s conversion.Scope) error {
	out.ImageTag = in.ImageTag
	return nil
}

// Convert_v1alpha2_AddonOperatorOpts_To_sunpike_AddonOperatorOpts is an autogenerated conversion function.
func Convert_v1alpha2_AddonOperatorOpts_To_sunpike_AddonOperatorOpts(in *AddonOperatorOpts, out *sunpike.AddonOperatorOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_AddonOperatorOpts_To_sunpike_AddonOperatorOpts(in, out, s)
}

func autoConvert_sunpike_AddonOperatorOpts_To_v1alpha2_AddonOperatorOpts(in *sunpike.AddonOperatorOpts, out *AddonOperatorOpts, s conversion.Scope) error {
	out.ImageTag = in.ImageTag
	return nil
}

// Convert_sunpike_AddonOperatorOpts_To_v1alpha2_AddonOperatorOpts is an autogenerated conversion function.
func Convert_sunpike_AddonOperatorOpts_To_v1alpha2_AddonOperatorOpts(in *sunpike.AddonOperatorOpts, out *AddonOperatorOpts, s conversion.Scope) error {
	return autoConvert_sunpike_AddonOperatorOpts_To_v1alpha2_AddonOperatorOpts(in, out, s)
}

func autoConvert_v1alpha2_AddonOperatorVersion_To_sunpike_AddonOperatorVersion(in *AddonOperatorVersion, out *sunpike.AddonOperatorVersion, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.KubeVersion = in.KubeVersion
	out.Versions = *(*[]string)(unsafe.Pointer(&in.Versions))
	return nil
}

// Convert_v1alpha2_AddonOperatorVersion_To_sunpike_AddonOperatorVersion is an autogenerated conversion function.
func Convert_v1alpha2_AddonOperatorVersion_To_sunpike_AddonOperatorVersion(in *AddonOperatorVersion, out *sunpike.AddonOperatorVersion, s conversion.Scope) error {
	return autoConvert_v1alpha2_AddonOperatorVersion_To_sunpike_AddonOperatorVersion(in, out, s)
}

func autoConvert_sunpike_AddonOperatorVersion_To_v1alpha2_AddonOperatorVersion(in *sunpike.AddonOperatorVersion, out *AddonOperatorVersion, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.KubeVersion = in.KubeVersion
	out.Versions = *(*[]string)(unsafe.Pointer(&in.Versions))
	return nil
}

// Convert_sunpike_AddonOperatorVersion_To_v1alpha2_AddonOperatorVersion is an autogenerated conversion function.
func Convert_sunpike_AddonOperatorVersion_To_v1alpha2_AddonOperatorVersion(in *sunpike.AddonOperatorVersion, out *AddonOperatorVersion, s conversion.Scope) error {
	return autoConvert_sunpike_AddonOperatorVersion_To_v1alpha2_AddonOperatorVersion(in, out, s)
}

func autoConvert_v1alpha2_AddonOperatorVersionList_To_sunpike_AddonOperatorVersionList(in *AddonOperatorVersionList, out *sunpike.AddonOperatorVersionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sunpike.AddonOperatorVersion)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha2_AddonOperatorVersionList_To_sunpike_AddonOperatorVersionList is an autogenerated conversion function.
func Convert_v1alpha2_AddonOperatorVersionList_To_sunpike_AddonOperatorVersionList(in *AddonOperatorVersionList, out *sunpike.AddonOperatorVersionList, s conversion.Scope) error {
	return autoConvert_v1alpha2_AddonOperatorVersionList_To_sunpike_AddonOperatorVersionList(in, out, s)
}

func autoConvert_sunpike_AddonOperatorVersionList_To_v1alpha2_AddonOperatorVersionList(in *sunpike.AddonOperatorVersionList, out *AddonOperatorVersionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]AddonOperatorVersion)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sunpike_AddonOperatorVersionList_To_v1alpha2_AddonOperatorVersionList is an autogenerated conversion function.
func Convert_sunpike_AddonOperatorVersionList_To_v1alpha2_AddonOperatorVersionList(in *sunpike.AddonOperatorVersionList, out *AddonOperatorVersionList, s conversion.Scope) error {
	return autoConvert_sunpike_AddonOperatorVersionList_To_v1alpha2_AddonOperatorVersionList(in, out, s)
}

func autoConvert_v1alpha2_AddonTypeVersion_To_sunpike_AddonTypeVersion(in *AddonTypeVersion, out *sunpike.AddonTypeVersion, s conversion.Scope) error {
	out.Name = in.Name
	out.Versions = *(*[]string)(unsafe.Pointer(&in.Versions))
	return nil
}

// Convert_v1alpha2_AddonTypeVersion_To_sunpike_AddonTypeVersion is an autogenerated conversion function.
func Convert_v1alpha2_AddonTypeVersion_To_sunpike_AddonTypeVersion(in *AddonTypeVersion, out *sunpike.AddonTypeVersion, s conversion.Scope) error {
	return autoConvert_v1alpha2_AddonTypeVersion_To_sunpike_AddonTypeVersion(in, out, s)
}

func autoConvert_sunpike_AddonTypeVersion_To_v1alpha2_AddonTypeVersion(in *sunpike.AddonTypeVersion, out *AddonTypeVersion, s conversion.Scope) error {
	out.Name = in.Name
	out.Versions = *(*[]string)(unsafe.Pointer(&in.Versions))
	return nil
}

// Convert_sunpike_AddonTypeVersion_To_v1alpha2_AddonTypeVersion is an autogenerated conversion function.
func Convert_sunpike_AddonTypeVersion_To_v1alpha2_AddonTypeVersion(in *sunpike.AddonTypeVersion, out *AddonTypeVersion, s conversion.Scope) error {
	return autoConvert_sunpike_AddonTypeVersion_To_v1alpha2_AddonTypeVersion(in, out, s)
}

func autoConvert_v1alpha2_AddonVersion_To_sunpike_AddonVersion(in *AddonVersion, out *sunpike.AddonVersion, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.KubeVersion = in.KubeVersion
	out.Addons = *(*[]sunpike.AddonTypeVersion)(unsafe.Pointer(&in.Addons))
	return nil
}

// Convert_v1alpha2_AddonVersion_To_sunpike_AddonVersion is an autogenerated conversion function.
func Convert_v1alpha2_AddonVersion_To_sunpike_AddonVersion(in *AddonVersion, out *sunpike.AddonVersion, s conversion.Scope) error {
	return autoConvert_v1alpha2_AddonVersion_To_sunpike_AddonVersion(in, out, s)
}

func autoConvert_sunpike_AddonVersion_To_v1alpha2_AddonVersion(in *sunpike.AddonVersion, out *AddonVersion, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.KubeVersion = in.KubeVersion
	out.Addons = *(*[]AddonTypeVersion)(unsafe.Pointer(&in.Addons))
	return nil
}

// Convert_sunpike_AddonVersion_To_v1alpha2_AddonVersion is an autogenerated conversion function.
func Convert_sunpike_AddonVersion_To_v1alpha2_AddonVersion(in *sunpike.AddonVersion, out *AddonVersion, s conversion.Scope) error {
	return autoConvert_sunpike_AddonVersion_To_v1alpha2_AddonVersion(in, out, s)
}

func autoConvert_v1alpha2_AddonVersionList_To_sunpike_AddonVersionList(in *AddonVersionList, out *sunpike.AddonVersionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sunpike.AddonVersion)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha2_AddonVersionList_To_sunpike_AddonVersionList is an autogenerated conversion function.
func Convert_v1alpha2_AddonVersionList_To_sunpike_AddonVersionList(in *AddonVersionList, out *sunpike.AddonVersionList, s conversion.Scope) error {
	return autoConvert_v1alpha2_AddonVersionList_To_sunpike_AddonVersionList(in, out, s)
}

func autoConvert_sunpike_AddonVersionList_To_v1alpha2_AddonVersionList(in *sunpike.AddonVersionList, out *AddonVersionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]AddonVersion)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sunpike_AddonVersionList_To_v1alpha2_AddonVersionList is an autogenerated conversion function.
func Convert_sunpike_AddonVersionList_To_v1alpha2_AddonVersionList(in *sunpike.AddonVersionList, out *AddonVersionList, s conversion.Scope) error {
	return autoConvert_sunpike_AddonVersionList_To_v1alpha2_AddonVersionList(in, out, s)
}

func autoConvert_v1alpha2_AddonsOpts_To_sunpike_AddonsOpts(in *AddonsOpts, out *sunpike.AddonsOpts, s conversion.Scope) error {
	if err := Convert_v1alpha2_AppCatalogOpts_To_sunpike_AppCatalogOpts(&in.AppCatalog, &out.AppCatalog, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(&in.CAS, &out.CAS, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_LuigiOpts_To_sunpike_LuigiOpts(&in.Luigi, &out.Luigi, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_KubeVirtOpts_To_sunpike_KubeVirtOpts(&in.Kubevirt, &out.Kubevirt, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_CPUManagerOpts_To_sunpike_CPUManagerOpts(&in.CPUManager, &out.CPUManager, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(&in.ProfileAgent, &out.ProfileAgent, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_AddonOperatorOpts_To_sunpike_AddonOperatorOpts(&in.AddonOperator, &out.AddonOperator, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_AddonsOpts_To_sunpike_AddonsOpts is an autogenerated conversion function.
func Convert_v1alpha2_AddonsOpts_To_sunpike_AddonsOpts(in *AddonsOpts, out *sunpike.AddonsOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_AddonsOpts_To_sunpike_AddonsOpts(in, out, s)
}

func autoConvert_sunpike_AddonsOpts_To_v1alpha2_AddonsOpts(in *sunpike.AddonsOpts, out *AddonsOpts, s conversion.Scope) error {
	if err := Convert_sunpike_AppCatalogOpts_To_v1alpha2_AppCatalogOpts(&in.AppCatalog, &out.AppCatalog, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ClusterAutoScalerOpts_To_v1alpha2_ClusterAutoScalerOpts(&in.CAS, &out.CAS, s); err != nil {
		return err
	}
	if err := Convert_sunpike_LuigiOpts_To_v1alpha2_LuigiOpts(&in.Luigi, &out.Luigi, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeVirtOpts_To_v1alpha2_KubeVirtOpts(&in.Kubevirt, &out.Kubevirt, s); err != nil {
		return err
	}
	if err := Convert_sunpike_CPUManagerOpts_To_v1alpha2_CPUManagerOpts(&in.CPUManager, &out.CPUManager, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ProfileAgentOpts_To_v1alpha2_ProfileAgentOpts(&in.ProfileAgent, &out.ProfileAgent, s); err != nil {
		return err
	}
	if err := Convert_sunpike_AddonOperatorOpts_To_v1alpha2_AddonOperatorOpts(&in.AddonOperator, &out.AddonOperator, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_AddonsOpts_To_v1alpha2_AddonsOpts is an autogenerated conversion function.
func Convert_sunpike_AddonsOpts_To_v1alpha2_AddonsOpts(in *sunpike.AddonsOpts, out *AddonsOpts, s conversion.Scope) error {
	return autoConvert_sunpike_AddonsOpts_To_v1alpha2_AddonsOpts(in, out, s)
}

func autoConvert_v1alpha2_AppCatalogOpts_To_sunpike_AppCatalogOpts(in *AppCatalogOpts, out *sunpike.AppCatalogOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha2_AppCatalogOpts_To_sunpike_AppCatalogOpts is an autogenerated conversion function.
func Convert_v1alpha2_AppCatalogOpts_To_sunpike_AppCatalogOpts(in *AppCatalogOpts, out *sunpike.AppCatalogOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_AppCatalogOpts_To_sunpike_AppCatalogOpts(in, out, s)
}

func autoConvert_sunpike_AppCatalogOpts_To_v1alpha2_AppCatalogOpts(in *sunpike.AppCatalogOpts, out *AppCatalogOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_AppCatalogOpts_To_v1alpha2_AppCatalogOpts is an autogenerated conversion function.
func Convert_sunpike_AppCatalogOpts_To_v1alpha2_AppCatalogOpts(in *sunpike.AppCatalogOpts, out *AppCatalogOpts, s conversion.Scope) error {
	return autoConvert_sunpike_AppCatalogOpts_To_v1alpha2_AppCatalogOpts(in, out, s)
}

func autoConvert_v1alpha2_Auth_To_sunpike_Auth(in *Auth, out *sunpike.Auth, s conversion.Scope) error {
	if err := Convert_v1alpha2_KeystoneOpts_To_sunpike_KeystoneOpts(&in.Keystone, &out.Keystone, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_Auth_To_sunpike_Auth is an autogenerated conversion function.
func Convert_v1alpha2_Auth_To_sunpike_Auth(in *Auth, out *sunpike.Auth, s conversion.Scope) error {
	return autoConvert_v1alpha2_Auth_To_sunpike_Auth(in, out, s)
}

func autoConvert_sunpike_Auth_To_v1alpha2_Auth(in *sunpike.Auth, out *Auth, s conversion.Scope) error {
	if err := Convert_sunpike_KeystoneOpts_To_v1alpha2_KeystoneOpts(&in.Keystone, &out.Keystone, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_Auth_To_v1alpha2_Auth is an autogenerated conversion function.
func Convert_sunpike_Auth_To_v1alpha2_Auth(in *sunpike.Auth, out *Auth, s conversion.Scope) error {
	return autoConvert_sunpike_Auth_To_v1alpha2_Auth(in, out, s)
}

func autoConvert_v1alpha2_AzureCloudProviderCredentials_To_sunpike_AzureCloudProviderCredentials(in *AzureCloudProviderCredentials, out *sunpike.AzureCloudProviderCredentials, s conversion.Scope) error {
	out.ClientID = in.ClientID
	out.ClientSecret = in.ClientSecret
	out.SubscriptionID = in.SubscriptionID
	out.TenantID = in.TenantID
	return nil
}

// Convert_v1alpha2_AzureCloudProviderCredentials_To_sunpike_AzureCloudProviderCredentials is an autogenerated conversion function.
func Convert_v1alpha2_AzureCloudProviderCredentials_To_sunpike_AzureCloudProviderCredentials(in *AzureCloudProviderCredentials, out *sunpike.AzureCloudProviderCredentials, s conversion.Scope) error {
	return autoConvert_v1alpha2_AzureCloudProviderCredentials_To_sunpike_AzureCloudProviderCredentials(in, out, s)
}

func autoConvert_sunpike_AzureCloudProviderCredentials_To_v1alpha2_AzureCloudProviderCredentials(in *sunpike.AzureCloudProviderCredentials, out *AzureCloudProviderCredentials, s conversion.Scope) error {
	out.ClientID = in.ClientID
	out.ClientSecret = in.ClientSecret
	out.SubscriptionID = in.SubscriptionID
	out.TenantID = in.TenantID
	return nil
}

// Convert_sunpike_AzureCloudProviderCredentials_To_v1alpha2_AzureCloudProviderCredentials is an autogenerated conversion function.
func Convert_sunpike_AzureCloudProviderCredentials_To_v1alpha2_AzureCloudProviderCredentials(in *sunpike.AzureCloudProviderCredentials, out *AzureCloudProviderCredentials, s conversion.Scope) error {
	return autoConvert_sunpike_AzureCloudProviderCredentials_To_v1alpha2_AzureCloudProviderCredentials(in, out, s)
}

func autoConvert_v1alpha2_AzureCloudProviderSpec_To_sunpike_AzureCloudProviderSpec(in *AzureCloudProviderSpec, out *sunpike.AzureCloudProviderSpec, s conversion.Scope) error {
	out.SecretName = in.SecretName
	return nil
}

// Convert_v1alpha2_AzureCloudProviderSpec_To_sunpike_AzureCloudProviderSpec is an autogenerated conversion function.
func Convert_v1alpha2_AzureCloudProviderSpec_To_sunpike_AzureCloudProviderSpec(in *AzureCloudProviderSpec, out *sunpike.AzureCloudProviderSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_AzureCloudProviderSpec_To_sunpike_AzureCloudProviderSpec(in, out, s)
}

func autoConvert_sunpike_AzureCloudProviderSpec_To_v1alpha2_AzureCloudProviderSpec(in *sunpike.AzureCloudProviderSpec, out *AzureCloudProviderSpec, s conversion.Scope) error {
	out.SecretName = in.SecretName
	return nil
}

// Convert_sunpike_AzureCloudProviderSpec_To_v1alpha2_AzureCloudProviderSpec is an autogenerated conversion function.
func Convert_sunpike_AzureCloudProviderSpec_To_v1alpha2_AzureCloudProviderSpec(in *sunpike.AzureCloudProviderSpec, out *AzureCloudProviderSpec, s conversion.Scope) error {
	return autoConvert_sunpike_AzureCloudProviderSpec_To_v1alpha2_AzureCloudProviderSpec(in, out, s)
}

func autoConvert_v1alpha2_CNIOpts_To_sunpike_CNIOpts(in *CNIOpts, out *sunpike.CNIOpts, s conversion.Scope) error {
	out.Bridge = in.Bridge
	out.MTUSize = in.MTUSize
	out.IPv6 = in.IPv6
	out.NetworkPlugin = in.NetworkPlugin
	if err := Convert_v1alpha2_CalicoOpts_To_sunpike_CalicoOpts(&in.Calico, &out.Calico, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_FlannelOpts_To_sunpike_FlannelOpts(&in.Flannel, &out.Flannel, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_AWSOpts_To_sunpike_AWSOpts(&in.AWS, &out.AWS, s); err != nil {
		return err
	}
	out.IPv4 = in.IPv4
	return nil
}

// Convert_v1alpha2_CNIOpts_To_sunpike_CNIOpts is an autogenerated conversion function.
func Convert_v1alpha2_CNIOpts_To_sunpike_CNIOpts(in *CNIOpts, out *sunpike.CNIOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_CNIOpts_To_sunpike_CNIOpts(in, out, s)
}

func autoConvert_sunpike_CNIOpts_To_v1alpha2_CNIOpts(in *sunpike.CNIOpts, out *CNIOpts, s conversion.Scope) error {
	out.Bridge = in.Bridge
	out.MTUSize = in.MTUSize
	out.IPv6 = in.IPv6
	out.NetworkPlugin = in.NetworkPlugin
	if err := Convert_sunpike_CalicoOpts_To_v1alpha2_CalicoOpts(&in.Calico, &out.Calico, s); err != nil {
		return err
	}
	if err := Convert_sunpike_FlannelOpts_To_v1alpha2_FlannelOpts(&in.Flannel, &out.Flannel, s); err != nil {
		return err
	}
	if err := Convert_sunpike_AWSOpts_To_v1alpha2_AWSOpts(&in.AWS, &out.AWS, s); err != nil {
		return err
	}
	out.IPv4 = in.IPv4
	return nil
}

// Convert_sunpike_CNIOpts_To_v1alpha2_CNIOpts is an autogenerated conversion function.
func Convert_sunpike_CNIOpts_To_v1alpha2_CNIOpts(in *sunpike.CNIOpts, out *CNIOpts, s conversion.Scope) error {
	return autoConvert_sunpike_CNIOpts_To_v1alpha2_CNIOpts(in, out, s)
}

func autoConvert_v1alpha2_CPUManagerOpts_To_sunpike_CPUManagerOpts(in *CPUManagerOpts, out *sunpike.CPUManagerOpts, s conversion.Scope) error {
	out.CPUManagerPolicy = in.CPUManagerPolicy
	out.TopologyManagerPolicy = in.TopologyManagerPolicy
	out.ReservedCPUs = in.ReservedCPUs
	return nil
}

// Convert_v1alpha2_CPUManagerOpts_To_sunpike_CPUManagerOpts is an autogenerated conversion function.
func Convert_v1alpha2_CPUManagerOpts_To_sunpike_CPUManagerOpts(in *CPUManagerOpts, out *sunpike.CPUManagerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_CPUManagerOpts_To_sunpike_CPUManagerOpts(in, out, s)
}

func autoConvert_sunpike_CPUManagerOpts_To_v1alpha2_CPUManagerOpts(in *sunpike.CPUManagerOpts, out *CPUManagerOpts, s conversion.Scope) error {
	out.CPUManagerPolicy = in.CPUManagerPolicy
	out.TopologyManagerPolicy = in.TopologyManagerPolicy
	out.ReservedCPUs = in.ReservedCPUs
	return nil
}

// Convert_sunpike_CPUManagerOpts_To_v1alpha2_CPUManagerOpts is an autogenerated conversion function.
func Convert_sunpike_CPUManagerOpts_To_v1alpha2_CPUManagerOpts(in *sunpike.CPUManagerOpts, out *CPUManagerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_CPUManagerOpts_To_v1alpha2_CPUManagerOpts(in, out, s)
}

func autoConvert_v1alpha2_CalicoOpts_To_sunpike_CalicoOpts(in *CalicoOpts, out *sunpike.CalicoOpts, s conversion.Scope) error {
	out.IPIPMode = in.IPIPMode
	out.IPv4BlkSize = in.IPv4BlkSize
	out.NatOutgoing = in.NatOutgoing
	out.IPv4Mode = in.IPv4Mode
	out.IPv4DetectionMethod = in.IPv4DetectionMethod
	out.IPv6Mode = in.IPv6Mode
	out.IPv6BlkSize = in.IPv6BlkSize
	out.IPv6PoolCIDR = in.IPv6PoolCIDR
	out.IPv6PoolNAT = in.IPv6PoolNAT
	out.IPv6DetectionMethod = in.IPv6DetectionMethod
	out.RouterID = in.RouterID
	out.FelixIPv6Support = in.FelixIPv6Support
	out.NodeCpuLimit = in.NodeCpuLimit
	out.NodeMemoryLimit = in.NodeMemoryLimit
	out.TyphaCpuLimit = in.TyphaCpuLimit
	out.TyphaMemoryLimit = in.TyphaMemoryLimit
	out.ControllerCpuLimit = in.ControllerCpuLimit
	out.ControllerMemoryLimit = in.ControllerMemoryLimit
	return nil
}

// Convert_v1alpha2_CalicoOpts_To_sunpike_CalicoOpts is an autogenerated conversion function.
func Convert_v1alpha2_CalicoOpts_To_sunpike_CalicoOpts(in *CalicoOpts, out *sunpike.CalicoOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_CalicoOpts_To_sunpike_CalicoOpts(in, out, s)
}

func autoConvert_sunpike_CalicoOpts_To_v1alpha2_CalicoOpts(in *sunpike.CalicoOpts, out *CalicoOpts, s conversion.Scope) error {
	out.IPIPMode = in.IPIPMode
	out.IPv4BlkSize = in.IPv4BlkSize
	out.NatOutgoing = in.NatOutgoing
	out.IPv4Mode = in.IPv4Mode
	out.IPv4DetectionMethod = in.IPv4DetectionMethod
	out.IPv6Mode = in.IPv6Mode
	out.IPv6BlkSize = in.IPv6BlkSize
	out.IPv6PoolCIDR = in.IPv6PoolCIDR
	out.IPv6PoolNAT = in.IPv6PoolNAT
	out.IPv6DetectionMethod = in.IPv6DetectionMethod
	out.RouterID = in.RouterID
	out.FelixIPv6Support = in.FelixIPv6Support
	out.NodeCpuLimit = in.NodeCpuLimit
	out.NodeMemoryLimit = in.NodeMemoryLimit
	out.TyphaCpuLimit = in.TyphaCpuLimit
	out.TyphaMemoryLimit = in.TyphaMemoryLimit
	out.ControllerCpuLimit = in.ControllerCpuLimit
	out.ControllerMemoryLimit = in.ControllerMemoryLimit
	return nil
}

// Convert_sunpike_CalicoOpts_To_v1alpha2_CalicoOpts is an autogenerated conversion function.
func Convert_sunpike_CalicoOpts_To_v1alpha2_CalicoOpts(in *sunpike.CalicoOpts, out *CalicoOpts, s conversion.Scope) error {
	return autoConvert_sunpike_CalicoOpts_To_v1alpha2_CalicoOpts(in, out, s)
}

func autoConvert_v1alpha2_CloudProvider_To_sunpike_CloudProvider(in *CloudProvider, out *sunpike.CloudProvider, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_CloudProviderSpec_To_sunpike_CloudProviderSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_CloudProviderStatus_To_sunpike_CloudProviderStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_CloudProvider_To_sunpike_CloudProvider is an autogenerated conversion function.
func Convert_v1alpha2_CloudProvider_To_sunpike_CloudProvider(in *CloudProvider, out *sunpike.CloudProvider, s conversion.Scope) error {
	return autoConvert_v1alpha2_CloudProvider_To_sunpike_CloudProvider(in, out, s)
}

func autoConvert_sunpike_CloudProvider_To_v1alpha2_CloudProvider(in *sunpike.CloudProvider, out *CloudProvider, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_sunpike_CloudProviderSpec_To_v1alpha2_CloudProviderSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_sunpike_CloudProviderStatus_To_v1alpha2_CloudProviderStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_CloudProvider_To_v1alpha2_CloudProvider is an autogenerated conversion function.
func Convert_sunpike_CloudProvider_To_v1alpha2_CloudProvider(in *sunpike.CloudProvider, out *CloudProvider, s conversion.Scope) error {
	return autoConvert_sunpike_CloudProvider_To_v1alpha2_CloudProvider(in, out, s)
}

func autoConvert_v1alpha2_CloudProviderList_To_sunpike_CloudProviderList(in *CloudProviderList, out *sunpike.CloudProviderList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sunpike.CloudProvider)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha2_CloudProviderList_To_sunpike_CloudProviderList is an autogenerated conversion function.
func Convert_v1alpha2_CloudProviderList_To_sunpike_CloudProviderList(in *CloudProviderList, out *sunpike.CloudProviderList, s conversion.Scope) error {
	return autoConvert_v1alpha2_CloudProviderList_To_sunpike_CloudProviderList(in, out, s)
}

func autoConvert_sunpike_CloudProviderList_To_v1alpha2_CloudProviderList(in *sunpike.CloudProviderList, out *CloudProviderList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]CloudProvider)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sunpike_CloudProviderList_To_v1alpha2_CloudProviderList is an autogenerated conversion function.
func Convert_sunpike_CloudProviderList_To_v1alpha2_CloudProviderList(in *sunpike.CloudProviderList, out *CloudProviderList, s conversion.Scope) error {
	return autoConvert_sunpike_CloudProviderList_To_v1alpha2_CloudProviderList(in, out, s)
}

func autoConvert_v1alpha2_CloudProviderSpec_To_sunpike_CloudProviderSpec(in *CloudProviderSpec, out *sunpike.CloudProviderSpec, s conversion.Scope) error {
	out.AWS = (*sunpike.AWSCloudProviderSpec)(unsafe.Pointer(in.AWS))
	out.Azure = (*sunpike.AzureCloudProviderSpec)(unsafe.Pointer(in.Azure))
	out.GKE = (*sunpike.GoogleCloudProviderSpec)(unsafe.Pointer(in.GKE))
	out.Local = (*sunpike.LocalCloudProviderSpec)(unsafe.Pointer(in.Local))
	return nil
}

// Convert_v1alpha2_CloudProviderSpec_To_sunpike_CloudProviderSpec is an autogenerated conversion function.
func Convert_v1alpha2_CloudProviderSpec_To_sunpike_CloudProviderSpec(in *CloudProviderSpec, out *sunpike.CloudProviderSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_CloudProviderSpec_To_sunpike_CloudProviderSpec(in, out, s)
}

func autoConvert_sunpike_CloudProviderSpec_To_v1alpha2_CloudProviderSpec(in *sunpike.CloudProviderSpec, out *CloudProviderSpec, s conversion.Scope) error {
	out.AWS = (*AWSCloudProviderSpec)(unsafe.Pointer(in.AWS))
	out.Azure = (*AzureCloudProviderSpec)(unsafe.Pointer(in.Azure))
	out.GKE = (*GoogleCloudProviderSpec)(unsafe.Pointer(in.GKE))
	out.Local = (*LocalCloudProviderSpec)(unsafe.Pointer(in.Local))
	return nil
}

// Convert_sunpike_CloudProviderSpec_To_v1alpha2_CloudProviderSpec is an autogenerated conversion function.
func Convert_sunpike_CloudProviderSpec_To_v1alpha2_CloudProviderSpec(in *sunpike.CloudProviderSpec, out *CloudProviderSpec, s conversion.Scope) error {
	return autoConvert_sunpike_CloudProviderSpec_To_v1alpha2_CloudProviderSpec(in, out, s)
}

func autoConvert_v1alpha2_CloudProviderStatus_To_sunpike_CloudProviderStatus(in *CloudProviderStatus, out *sunpike.CloudProviderStatus, s conversion.Scope) error {
	out.Phase = sunpike.CloudProviderPhase(in.Phase)
	out.Type = sunpike.CloudProviderType(in.Type)
	out.Conditions = *(*sunpike.Conditions)(unsafe.Pointer(&in.Conditions))
	out.ObservedGeneration = in.ObservedGeneration
	out.Regions = *(*[]sunpike.Region)(unsafe.Pointer(&in.Regions))
	out.LastChecked = in.LastChecked
	return nil
}

// Convert_v1alpha2_CloudProviderStatus_To_sunpike_CloudProviderStatus is an autogenerated conversion function.
func Convert_v1alpha2_CloudProviderStatus_To_sunpike_CloudProviderStatus(in *CloudProviderStatus, out *sunpike.CloudProviderStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_CloudProviderStatus_To_sunpike_CloudProviderStatus(in, out, s)
}

func autoConvert_sunpike_CloudProviderStatus_To_v1alpha2_CloudProviderStatus(in *sunpike.CloudProviderStatus, out *CloudProviderStatus, s conversion.Scope) error {
	out.Phase = CloudProviderPhase(in.Phase)
	out.Type = CloudProviderType(in.Type)
	out.Conditions = *(*Conditions)(unsafe.Pointer(&in.Conditions))
	out.ObservedGeneration = in.ObservedGeneration
	out.Regions = *(*[]Region)(unsafe.Pointer(&in.Regions))
	out.LastChecked = in.LastChecked
	return nil
}

// Convert_sunpike_CloudProviderStatus_To_v1alpha2_CloudProviderStatus is an autogenerated conversion function.
func Convert_sunpike_CloudProviderStatus_To_v1alpha2_CloudProviderStatus(in *sunpike.CloudProviderStatus, out *CloudProviderStatus, s conversion.Scope) error {
	return autoConvert_sunpike_CloudProviderStatus_To_v1alpha2_CloudProviderStatus(in, out, s)
}

func autoConvert_v1alpha2_Cluster_To_sunpike_Cluster(in *Cluster, out *sunpike.Cluster, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_ClusterSpec_To_sunpike_ClusterSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_ClusterStatus_To_sunpike_ClusterStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_Cluster_To_sunpike_Cluster is an autogenerated conversion function.
func Convert_v1alpha2_Cluster_To_sunpike_Cluster(in *Cluster, out *sunpike.Cluster, s conversion.Scope) error {
	return autoConvert_v1alpha2_Cluster_To_sunpike_Cluster(in, out, s)
}

func autoConvert_sunpike_Cluster_To_v1alpha2_Cluster(in *sunpike.Cluster, out *Cluster, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_sunpike_ClusterSpec_To_v1alpha2_ClusterSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ClusterStatus_To_v1alpha2_ClusterStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_Cluster_To_v1alpha2_Cluster is an autogenerated conversion function.
func Convert_sunpike_Cluster_To_v1alpha2_Cluster(in *sunpike.Cluster, out *Cluster, s conversion.Scope) error {
	return autoConvert_sunpike_Cluster_To_v1alpha2_Cluster(in, out, s)
}

func autoConvert_v1alpha2_ClusterAddon_To_sunpike_ClusterAddon(in *ClusterAddon, out *sunpike.ClusterAddon, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_ClusterAddonSpec_To_sunpike_ClusterAddonSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_ClusterAddonStatus_To_sunpike_ClusterAddonStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_ClusterAddon_To_sunpike_ClusterAddon is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAddon_To_sunpike_ClusterAddon(in *ClusterAddon, out *sunpike.ClusterAddon, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAddon_To_sunpike_ClusterAddon(in, out, s)
}

func autoConvert_sunpike_ClusterAddon_To_v1alpha2_ClusterAddon(in *sunpike.ClusterAddon, out *ClusterAddon, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_sunpike_ClusterAddonSpec_To_v1alpha2_ClusterAddonSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ClusterAddonStatus_To_v1alpha2_ClusterAddonStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_ClusterAddon_To_v1alpha2_ClusterAddon is an autogenerated conversion function.
func Convert_sunpike_ClusterAddon_To_v1alpha2_ClusterAddon(in *sunpike.ClusterAddon, out *ClusterAddon, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAddon_To_v1alpha2_ClusterAddon(in, out, s)
}

func autoConvert_v1alpha2_ClusterAddonList_To_sunpike_ClusterAddonList(in *ClusterAddonList, out *sunpike.ClusterAddonList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sunpike.ClusterAddon)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha2_ClusterAddonList_To_sunpike_ClusterAddonList is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAddonList_To_sunpike_ClusterAddonList(in *ClusterAddonList, out *sunpike.ClusterAddonList, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAddonList_To_sunpike_ClusterAddonList(in, out, s)
}

func autoConvert_sunpike_ClusterAddonList_To_v1alpha2_ClusterAddonList(in *sunpike.ClusterAddonList, out *ClusterAddonList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ClusterAddon)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sunpike_ClusterAddonList_To_v1alpha2_ClusterAddonList is an autogenerated conversion function.
func Convert_sunpike_ClusterAddonList_To_v1alpha2_ClusterAddonList(in *sunpike.ClusterAddonList, out *ClusterAddonList, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAddonList_To_v1alpha2_ClusterAddonList(in, out, s)
}

func autoConvert_v1alpha2_ClusterAddonSpec_To_sunpike_ClusterAddonSpec(in *ClusterAddonSpec, out *sunpike.ClusterAddonSpec, s conversion.Scope) error {
	out.ClusterID = in.ClusterID
	out.Version = in.Version
	out.Type = in.Type
	if err := Convert_v1alpha2_Override_To_sunpike_Override(&in.Override, &out.Override, s); err != nil {
		return err
	}
	out.Watch = in.Watch
	out.Tolerations = *(*[]sunpike.Toleration)(unsafe.Pointer(&in.Tolerations))
	return nil
}

// Convert_v1alpha2_ClusterAddonSpec_To_sunpike_ClusterAddonSpec is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAddonSpec_To_sunpike_ClusterAddonSpec(in *ClusterAddonSpec, out *sunpike.ClusterAddonSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAddonSpec_To_sunpike_ClusterAddonSpec(in, out, s)
}

func autoConvert_sunpike_ClusterAddonSpec_To_v1alpha2_ClusterAddonSpec(in *sunpike.ClusterAddonSpec, out *ClusterAddonSpec, s conversion.Scope) error {
	out.ClusterID = in.ClusterID
	out.Version = in.Version
	out.Type = in.Type
	if err := Convert_sunpike_Override_To_v1alpha2_Override(&in.Override, &out.Override, s); err != nil {
		return err
	}
	out.Watch = in.Watch
	out.Tolerations = *(*[]Toleration)(unsafe.Pointer(&in.Tolerations))
	return nil
}

// Convert_sunpike_ClusterAddonSpec_To_v1alpha2_ClusterAddonSpec is an autogenerated conversion function.
func Convert_sunpike_ClusterAddonSpec_To_v1alpha2_ClusterAddonSpec(in *sunpike.ClusterAddonSpec, out *ClusterAddonSpec, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAddonSpec_To_v1alpha2_ClusterAddonSpec(in, out, s)
}

func autoConvert_v1alpha2_ClusterAddonStatus_To_sunpike_ClusterAddonStatus(in *ClusterAddonStatus, out *sunpike.ClusterAddonStatus, s conversion.Scope) error {
	out.Phase = sunpike.AddonPhase(in.Phase)
	out.Message = in.Message
	out.Healthy = in.Healthy
	out.LastChecked = in.LastChecked
	return nil
}

// Convert_v1alpha2_ClusterAddonStatus_To_sunpike_ClusterAddonStatus is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAddonStatus_To_sunpike_ClusterAddonStatus(in *ClusterAddonStatus, out *sunpike.ClusterAddonStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAddonStatus_To_sunpike_ClusterAddonStatus(in, out, s)
}

func autoConvert_sunpike_ClusterAddonStatus_To_v1alpha2_ClusterAddonStatus(in *sunpike.ClusterAddonStatus, out *ClusterAddonStatus, s conversion.Scope) error {
	out.Phase = AddonPhase(in.Phase)
	out.Message = in.Message
	out.Healthy = in.Healthy
	out.LastChecked = in.LastChecked
	return nil
}

// Convert_sunpike_ClusterAddonStatus_To_v1alpha2_ClusterAddonStatus is an autogenerated conversion function.
func Convert_sunpike_ClusterAddonStatus_To_v1alpha2_ClusterAddonStatus(in *sunpike.ClusterAddonStatus, out *ClusterAddonStatus, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAddonStatus_To_v1alpha2_ClusterAddonStatus(in, out, s)
}

func autoConvert_v1alpha2_ClusterAgent_To_sunpike_ClusterAgent(in *ClusterAgent, out *sunpike.ClusterAgent, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_ClusterAgentSpec_To_sunpike_ClusterAgentSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_ClusterAgentStatus_To_sunpike_ClusterAgentStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_ClusterAgent_To_sunpike_ClusterAgent is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAgent_To_sunpike_ClusterAgent(in *ClusterAgent, out *sunpike.ClusterAgent, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAgent_To_sunpike_ClusterAgent(in, out, s)
}

func autoConvert_sunpike_ClusterAgent_To_v1alpha2_ClusterAgent(in *sunpike.ClusterAgent, out *ClusterAgent, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_sunpike_ClusterAgentSpec_To_v1alpha2_ClusterAgentSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ClusterAgentStatus_To_v1alpha2_ClusterAgentStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_ClusterAgent_To_v1alpha2_ClusterAgent is an autogenerated conversion function.
func Convert_sunpike_ClusterAgent_To_v1alpha2_ClusterAgent(in *sunpike.ClusterAgent, out *ClusterAgent, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAgent_To_v1alpha2_ClusterAgent(in, out, s)
}

func autoConvert_v1alpha2_ClusterAgentList_To_sunpike_ClusterAgentList(in *ClusterAgentList, out *sunpike.ClusterAgentList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sunpike.ClusterAgent)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha2_ClusterAgentList_To_sunpike_ClusterAgentList is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAgentList_To_sunpike_ClusterAgentList(in *ClusterAgentList, out *sunpike.ClusterAgentList, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAgentList_To_sunpike_ClusterAgentList(in, out, s)
}

func autoConvert_sunpike_ClusterAgentList_To_v1alpha2_ClusterAgentList(in *sunpike.ClusterAgentList, out *ClusterAgentList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ClusterAgent)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sunpike_ClusterAgentList_To_v1alpha2_ClusterAgentList is an autogenerated conversion function.
func Convert_sunpike_ClusterAgentList_To_v1alpha2_ClusterAgentList(in *sunpike.ClusterAgentList, out *ClusterAgentList, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAgentList_To_v1alpha2_ClusterAgentList(in, out, s)
}

func autoConvert_v1alpha2_ClusterAgentSpec_To_sunpike_ClusterAgentSpec(in *ClusterAgentSpec, out *sunpike.ClusterAgentSpec, s conversion.Scope) error {
	out.ClusterName = in.ClusterName
	return nil
}

// Convert_v1alpha2_ClusterAgentSpec_To_sunpike_ClusterAgentSpec is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAgentSpec_To_sunpike_ClusterAgentSpec(in *ClusterAgentSpec, out *sunpike.ClusterAgentSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAgentSpec_To_sunpike_ClusterAgentSpec(in, out, s)
}

func autoConvert_sunpike_ClusterAgentSpec_To_v1alpha2_ClusterAgentSpec(in *sunpike.ClusterAgentSpec, out *ClusterAgentSpec, s conversion.Scope) error {
	out.ClusterName = in.ClusterName
	return nil
}

// Convert_sunpike_ClusterAgentSpec_To_v1alpha2_ClusterAgentSpec is an autogenerated conversion function.
func Convert_sunpike_ClusterAgentSpec_To_v1alpha2_ClusterAgentSpec(in *sunpike.ClusterAgentSpec, out *ClusterAgentSpec, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAgentSpec_To_v1alpha2_ClusterAgentSpec(in, out, s)
}

func autoConvert_v1alpha2_ClusterAgentStatus_To_sunpike_ClusterAgentStatus(in *ClusterAgentStatus, out *sunpike.ClusterAgentStatus, s conversion.Scope) error {
	out.Phase = sunpike.ClusterAgentPhase(in.Phase)
	out.Message = in.Message
	out.LastHeartBeat = in.LastHeartBeat
	out.Version = in.Version
	return nil
}

// Convert_v1alpha2_ClusterAgentStatus_To_sunpike_ClusterAgentStatus is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAgentStatus_To_sunpike_ClusterAgentStatus(in *ClusterAgentStatus, out *sunpike.ClusterAgentStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAgentStatus_To_sunpike_ClusterAgentStatus(in, out, s)
}

func autoConvert_sunpike_ClusterAgentStatus_To_v1alpha2_ClusterAgentStatus(in *sunpike.ClusterAgentStatus, out *ClusterAgentStatus, s conversion.Scope) error {
	out.Phase = ClusterAgentPhase(in.Phase)
	out.Message = in.Message
	out.LastHeartBeat = in.LastHeartBeat
	out.Version = in.Version
	return nil
}

// Convert_sunpike_ClusterAgentStatus_To_v1alpha2_ClusterAgentStatus is an autogenerated conversion function.
func Convert_sunpike_ClusterAgentStatus_To_v1alpha2_ClusterAgentStatus(in *sunpike.ClusterAgentStatus, out *ClusterAgentStatus, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAgentStatus_To_v1alpha2_ClusterAgentStatus(in, out, s)
}

func autoConvert_v1alpha2_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(in *ClusterAutoScalerOpts, out *sunpike.ClusterAutoScalerOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.MinWorkers = in.MinWorkers
	out.MaxWorkers = in.MaxWorkers
	return nil
}

// Convert_v1alpha2_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts is an autogenerated conversion function.
func Convert_v1alpha2_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(in *ClusterAutoScalerOpts, out *sunpike.ClusterAutoScalerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterAutoScalerOpts_To_sunpike_ClusterAutoScalerOpts(in, out, s)
}

func autoConvert_sunpike_ClusterAutoScalerOpts_To_v1alpha2_ClusterAutoScalerOpts(in *sunpike.ClusterAutoScalerOpts, out *ClusterAutoScalerOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.MinWorkers = in.MinWorkers
	out.MaxWorkers = in.MaxWorkers
	return nil
}

// Convert_sunpike_ClusterAutoScalerOpts_To_v1alpha2_ClusterAutoScalerOpts is an autogenerated conversion function.
func Convert_sunpike_ClusterAutoScalerOpts_To_v1alpha2_ClusterAutoScalerOpts(in *sunpike.ClusterAutoScalerOpts, out *ClusterAutoScalerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterAutoScalerOpts_To_v1alpha2_ClusterAutoScalerOpts(in, out, s)
}

func autoConvert_v1alpha2_ClusterList_To_sunpike_ClusterList(in *ClusterList, out *sunpike.ClusterList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sunpike.Cluster)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha2_ClusterList_To_sunpike_ClusterList is an autogenerated conversion function.
func Convert_v1alpha2_ClusterList_To_sunpike_ClusterList(in *ClusterList, out *sunpike.ClusterList, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterList_To_sunpike_ClusterList(in, out, s)
}

func autoConvert_sunpike_ClusterList_To_v1alpha2_ClusterList(in *sunpike.ClusterList, out *ClusterList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Cluster)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sunpike_ClusterList_To_v1alpha2_ClusterList is an autogenerated conversion function.
func Convert_sunpike_ClusterList_To_v1alpha2_ClusterList(in *sunpike.ClusterList, out *ClusterList, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterList_To_v1alpha2_ClusterList(in, out, s)
}

func autoConvert_v1alpha2_ClusterNetwork_To_sunpike_ClusterNetwork(in *ClusterNetwork, out *sunpike.ClusterNetwork, s conversion.Scope) error {
	out.ServicesCIDR = in.ServicesCIDR
	out.PodsCIDR = in.PodsCIDR
	out.ServiceDomain = in.ServiceDomain
	return nil
}

// Convert_v1alpha2_ClusterNetwork_To_sunpike_ClusterNetwork is an autogenerated conversion function.
func Convert_v1alpha2_ClusterNetwork_To_sunpike_ClusterNetwork(in *ClusterNetwork, out *sunpike.ClusterNetwork, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterNetwork_To_sunpike_ClusterNetwork(in, out, s)
}

func autoConvert_sunpike_ClusterNetwork_To_v1alpha2_ClusterNetwork(in *sunpike.ClusterNetwork, out *ClusterNetwork, s conversion.Scope) error {
	out.ServicesCIDR = in.ServicesCIDR
	out.PodsCIDR = in.PodsCIDR
	out.ServiceDomain = in.ServiceDomain
	return nil
}

// Convert_sunpike_ClusterNetwork_To_v1alpha2_ClusterNetwork is an autogenerated conversion function.
func Convert_sunpike_ClusterNetwork_To_v1alpha2_ClusterNetwork(in *sunpike.ClusterNetwork, out *ClusterNetwork, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterNetwork_To_v1alpha2_ClusterNetwork(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfile_To_sunpike_ClusterProfile(in *ClusterProfile, out *sunpike.ClusterProfile, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_ClusterProfileSpec_To_sunpike_ClusterProfileSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_ClusterProfileStatus_To_sunpike_ClusterProfileStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	out.Description = in.Description
	return nil
}

// Convert_v1alpha2_ClusterProfile_To_sunpike_ClusterProfile is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfile_To_sunpike_ClusterProfile(in *ClusterProfile, out *sunpike.ClusterProfile, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfile_To_sunpike_ClusterProfile(in, out, s)
}

func autoConvert_sunpike_ClusterProfile_To_v1alpha2_ClusterProfile(in *sunpike.ClusterProfile, out *ClusterProfile, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_sunpike_ClusterProfileSpec_To_v1alpha2_ClusterProfileSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ClusterProfileStatus_To_v1alpha2_ClusterProfileStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	out.Description = in.Description
	return nil
}

// Convert_sunpike_ClusterProfile_To_v1alpha2_ClusterProfile is an autogenerated conversion function.
func Convert_sunpike_ClusterProfile_To_v1alpha2_ClusterProfile(in *sunpike.ClusterProfile, out *ClusterProfile, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfile_To_v1alpha2_ClusterProfile(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfileBinding_To_sunpike_ClusterProfileBinding(in *ClusterProfileBinding, out *sunpike.ClusterProfileBinding, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_ClusterProfileBindingSpec_To_sunpike_ClusterProfileBindingSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_ClusterProfileBindingStatus_To_sunpike_ClusterProfileBindingStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_ClusterProfileBinding_To_sunpike_ClusterProfileBinding is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfileBinding_To_sunpike_ClusterProfileBinding(in *ClusterProfileBinding, out *sunpike.ClusterProfileBinding, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfileBinding_To_sunpike_ClusterProfileBinding(in, out, s)
}

func autoConvert_sunpike_ClusterProfileBinding_To_v1alpha2_ClusterProfileBinding(in *sunpike.ClusterProfileBinding, out *ClusterProfileBinding, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_sunpike_ClusterProfileBindingSpec_To_v1alpha2_ClusterProfileBindingSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ClusterProfileBindingStatus_To_v1alpha2_ClusterProfileBindingStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_ClusterProfileBinding_To_v1alpha2_ClusterProfileBinding is an autogenerated conversion function.
func Convert_sunpike_ClusterProfileBinding_To_v1alpha2_ClusterProfileBinding(in *sunpike.ClusterProfileBinding, out *ClusterProfileBinding, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfileBinding_To_v1alpha2_ClusterProfileBinding(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfileBindingDetail_To_sunpike_ClusterProfileBindingDetail(in *ClusterProfileBindingDetail, out *sunpike.ClusterProfileBindingDetail, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = in.Data
	out.Analysis = in.Analysis
	return nil
}

// Convert_v1alpha2_ClusterProfileBindingDetail_To_sunpike_ClusterProfileBindingDetail is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfileBindingDetail_To_sunpike_ClusterProfileBindingDetail(in *ClusterProfileBindingDetail, out *sunpike.ClusterProfileBindingDetail, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfileBindingDetail_To_sunpike_ClusterProfileBindingDetail(in, out, s)
}

func autoConvert_sunpike_ClusterProfileBindingDetail_To_v1alpha2_ClusterProfileBindingDetail(in *sunpike.ClusterProfileBindingDetail, out *ClusterProfileBindingDetail, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = in.Data
	out.Analysis = in.Analysis
	return nil
}

// Convert_sunpike_ClusterProfileBindingDetail_To_v1alpha2_ClusterProfileBindingDetail is an autogenerated conversion function.
func Convert_sunpike_ClusterProfileBindingDetail_To_v1alpha2_ClusterProfileBindingDetail(in *sunpike.ClusterProfileBindingDetail, out *ClusterProfileBindingDetail, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfileBindingDetail_To_v1alpha2_ClusterProfileBindingDetail(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfileBindingList_To_sunpike_ClusterProfileBindingList(in *ClusterProfileBindingList, out *sunpike.ClusterProfileBindingList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sunpike.ClusterProfileBinding)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha2_ClusterProfileBindingList_To_sunpike_ClusterProfileBindingList is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfileBindingList_To_sunpike_ClusterProfileBindingList(in *ClusterProfileBindingList, out *sunpike.ClusterProfileBindingList, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfileBindingList_To_sunpike_ClusterProfileBindingList(in, out, s)
}

func autoConvert_sunpike_ClusterProfileBindingList_To_v1alpha2_ClusterProfileBindingList(in *sunpike.ClusterProfileBindingList, out *ClusterProfileBindingList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ClusterProfileBinding)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sunpike_ClusterProfileBindingList_To_v1alpha2_ClusterProfileBindingList is an autogenerated conversion function.
func Convert_sunpike_ClusterProfileBindingList_To_v1alpha2_ClusterProfileBindingList(in *sunpike.ClusterProfileBindingList, out *ClusterProfileBindingList, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfileBindingList_To_v1alpha2_ClusterProfileBindingList(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfileBindingSpec_To_sunpike_ClusterProfileBindingSpec(in *ClusterProfileBindingSpec, out *sunpike.ClusterProfileBindingSpec, s conversion.Scope) error {
	out.ClusterRef = in.ClusterRef
	out.ProfileRef = in.ProfileRef
	out.DryRun = in.DryRun
	out.ReapInterval = in.ReapInterval
	return nil
}

// Convert_v1alpha2_ClusterProfileBindingSpec_To_sunpike_ClusterProfileBindingSpec is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfileBindingSpec_To_sunpike_ClusterProfileBindingSpec(in *ClusterProfileBindingSpec, out *sunpike.ClusterProfileBindingSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfileBindingSpec_To_sunpike_ClusterProfileBindingSpec(in, out, s)
}

func autoConvert_sunpike_ClusterProfileBindingSpec_To_v1alpha2_ClusterProfileBindingSpec(in *sunpike.ClusterProfileBindingSpec, out *ClusterProfileBindingSpec, s conversion.Scope) error {
	out.ClusterRef = in.ClusterRef
	out.ProfileRef = in.ProfileRef
	out.DryRun = in.DryRun
	out.ReapInterval = in.ReapInterval
	return nil
}

// Convert_sunpike_ClusterProfileBindingSpec_To_v1alpha2_ClusterProfileBindingSpec is an autogenerated conversion function.
func Convert_sunpike_ClusterProfileBindingSpec_To_v1alpha2_ClusterProfileBindingSpec(in *sunpike.ClusterProfileBindingSpec, out *ClusterProfileBindingSpec, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfileBindingSpec_To_v1alpha2_ClusterProfileBindingSpec(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfileBindingStatus_To_sunpike_ClusterProfileBindingStatus(in *ClusterProfileBindingStatus, out *sunpike.ClusterProfileBindingStatus, s conversion.Scope) error {
	out.Phase = sunpike.ClusterProfileBindingPhase(in.Phase)
	out.Message = in.Message
	out.RetryCount = in.RetryCount
	return nil
}

// Convert_v1alpha2_ClusterProfileBindingStatus_To_sunpike_ClusterProfileBindingStatus is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfileBindingStatus_To_sunpike_ClusterProfileBindingStatus(in *ClusterProfileBindingStatus, out *sunpike.ClusterProfileBindingStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfileBindingStatus_To_sunpike_ClusterProfileBindingStatus(in, out, s)
}

func autoConvert_sunpike_ClusterProfileBindingStatus_To_v1alpha2_ClusterProfileBindingStatus(in *sunpike.ClusterProfileBindingStatus, out *ClusterProfileBindingStatus, s conversion.Scope) error {
	out.Phase = ClusterProfileBindingPhase(in.Phase)
	out.Message = in.Message
	out.RetryCount = in.RetryCount
	return nil
}

// Convert_sunpike_ClusterProfileBindingStatus_To_v1alpha2_ClusterProfileBindingStatus is an autogenerated conversion function.
func Convert_sunpike_ClusterProfileBindingStatus_To_v1alpha2_ClusterProfileBindingStatus(in *sunpike.ClusterProfileBindingStatus, out *ClusterProfileBindingStatus, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfileBindingStatus_To_v1alpha2_ClusterProfileBindingStatus(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfileDetail_To_sunpike_ClusterProfileDetail(in *ClusterProfileDetail, out *sunpike.ClusterProfileDetail, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = in.Data
	return nil
}

// Convert_v1alpha2_ClusterProfileDetail_To_sunpike_ClusterProfileDetail is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfileDetail_To_sunpike_ClusterProfileDetail(in *ClusterProfileDetail, out *sunpike.ClusterProfileDetail, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfileDetail_To_sunpike_ClusterProfileDetail(in, out, s)
}

func autoConvert_sunpike_ClusterProfileDetail_To_v1alpha2_ClusterProfileDetail(in *sunpike.ClusterProfileDetail, out *ClusterProfileDetail, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = in.Data
	return nil
}

// Convert_sunpike_ClusterProfileDetail_To_v1alpha2_ClusterProfileDetail is an autogenerated conversion function.
func Convert_sunpike_ClusterProfileDetail_To_v1alpha2_ClusterProfileDetail(in *sunpike.ClusterProfileDetail, out *ClusterProfileDetail, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfileDetail_To_v1alpha2_ClusterProfileDetail(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfileList_To_sunpike_ClusterProfileList(in *ClusterProfileList, out *sunpike.ClusterProfileList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sunpike.ClusterProfile)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha2_ClusterProfileList_To_sunpike_ClusterProfileList is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfileList_To_sunpike_ClusterProfileList(in *ClusterProfileList, out *sunpike.ClusterProfileList, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfileList_To_sunpike_ClusterProfileList(in, out, s)
}

func autoConvert_sunpike_ClusterProfileList_To_v1alpha2_ClusterProfileList(in *sunpike.ClusterProfileList, out *ClusterProfileList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ClusterProfile)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sunpike_ClusterProfileList_To_v1alpha2_ClusterProfileList is an autogenerated conversion function.
func Convert_sunpike_ClusterProfileList_To_v1alpha2_ClusterProfileList(in *sunpike.ClusterProfileList, out *ClusterProfileList, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfileList_To_v1alpha2_ClusterProfileList(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfileSpec_To_sunpike_ClusterProfileSpec(in *ClusterProfileSpec, out *sunpike.ClusterProfileSpec, s conversion.Scope) error {
	out.Location = in.Location
	out.CloneFrom = in.CloneFrom
	out.NamespaceScopedResources = *(*[]string)(unsafe.Pointer(&in.NamespaceScopedResources))
	out.ClusterScopedResources = *(*[]string)(unsafe.Pointer(&in.ClusterScopedResources))
	out.ReapInterval = in.ReapInterval
	return nil
}

// Convert_v1alpha2_ClusterProfileSpec_To_sunpike_ClusterProfileSpec is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfileSpec_To_sunpike_ClusterProfileSpec(in *ClusterProfileSpec, out *sunpike.ClusterProfileSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfileSpec_To_sunpike_ClusterProfileSpec(in, out, s)
}

func autoConvert_sunpike_ClusterProfileSpec_To_v1alpha2_ClusterProfileSpec(in *sunpike.ClusterProfileSpec, out *ClusterProfileSpec, s conversion.Scope) error {
	out.Location = in.Location
	out.CloneFrom = in.CloneFrom
	out.NamespaceScopedResources = *(*[]string)(unsafe.Pointer(&in.NamespaceScopedResources))
	out.ClusterScopedResources = *(*[]string)(unsafe.Pointer(&in.ClusterScopedResources))
	out.ReapInterval = in.ReapInterval
	return nil
}

// Convert_sunpike_ClusterProfileSpec_To_v1alpha2_ClusterProfileSpec is an autogenerated conversion function.
func Convert_sunpike_ClusterProfileSpec_To_v1alpha2_ClusterProfileSpec(in *sunpike.ClusterProfileSpec, out *ClusterProfileSpec, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfileSpec_To_v1alpha2_ClusterProfileSpec(in, out, s)
}

func autoConvert_v1alpha2_ClusterProfileStatus_To_sunpike_ClusterProfileStatus(in *ClusterProfileStatus, out *sunpike.ClusterProfileStatus, s conversion.Scope) error {
	out.Phase = sunpike.ClusterProfilePhase(in.Phase)
	out.Conditions = *(*sunpike.Conditions)(unsafe.Pointer(&in.Conditions))
	out.Message = in.Message
	out.RetryCount = in.RetryCount
	return nil
}

// Convert_v1alpha2_ClusterProfileStatus_To_sunpike_ClusterProfileStatus is an autogenerated conversion function.
func Convert_v1alpha2_ClusterProfileStatus_To_sunpike_ClusterProfileStatus(in *ClusterProfileStatus, out *sunpike.ClusterProfileStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterProfileStatus_To_sunpike_ClusterProfileStatus(in, out, s)
}

func autoConvert_sunpike_ClusterProfileStatus_To_v1alpha2_ClusterProfileStatus(in *sunpike.ClusterProfileStatus, out *ClusterProfileStatus, s conversion.Scope) error {
	out.Phase = ClusterProfilePhase(in.Phase)
	out.Conditions = *(*Conditions)(unsafe.Pointer(&in.Conditions))
	out.Message = in.Message
	out.RetryCount = in.RetryCount
	return nil
}

// Convert_sunpike_ClusterProfileStatus_To_v1alpha2_ClusterProfileStatus is an autogenerated conversion function.
func Convert_sunpike_ClusterProfileStatus_To_v1alpha2_ClusterProfileStatus(in *sunpike.ClusterProfileStatus, out *ClusterProfileStatus, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterProfileStatus_To_v1alpha2_ClusterProfileStatus(in, out, s)
}

func autoConvert_v1alpha2_ClusterSpec_To_sunpike_ClusterSpec(in *ClusterSpec, out *sunpike.ClusterSpec, s conversion.Scope) error {
	out.Debug = in.Debug
	out.CloudProviderID = in.CloudProviderID
	out.ProjectID = in.ProjectID
	out.KubeVersion = in.KubeVersion
	if err := Convert_v1alpha2_ClusterNetwork_To_sunpike_ClusterNetwork(&in.ClusterNetwork, &out.ClusterNetwork, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_KubeProxyOpts_To_sunpike_KubeProxyOpts(&in.KubeProxy, &out.KubeProxy, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_KubeletOpts_To_sunpike_KubeletOpts(&in.Kubelet, &out.Kubelet, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_ContainerRuntime_To_sunpike_ContainerRuntime(&in.ContainerRuntime, &out.ContainerRuntime, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_LoadBalancer_To_sunpike_LoadBalancer(&in.LoadBalancer, &out.LoadBalancer, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_StorageBackend_To_sunpike_StorageBackend(&in.StorageBackend, &out.StorageBackend, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_Auth_To_sunpike_Auth(&in.Auth, &out.Auth, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_HA_To_sunpike_HA(&in.HA, &out.HA, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(&in.Scheduler, &out.Scheduler, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(&in.ControllerManager, &out.ControllerManager, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(&in.Apiserver, &out.Apiserver, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_APIEndpoint_To_sunpike_APIEndpoint(&in.ControlPlaneEndpoint, &out.ControlPlaneEndpoint, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_CNIOpts_To_sunpike_CNIOpts(&in.CNI, &out.CNI, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_AddonsOpts_To_sunpike_AddonsOpts(&in.Addons, &out.Addons, s); err != nil {
		return err
	}
	out.AllowWorkloadsOnMasters = in.AllowWorkloadsOnMasters
	out.VaultToken = in.VaultToken
	if err := Convert_v1alpha2_PF9_To_sunpike_PF9(&in.PF9, &out.PF9, s); err != nil {
		return err
	}
	out.DisplayName = in.DisplayName
	out.AWS = (*sunpike.AWSCluster)(unsafe.Pointer(in.AWS))
	out.External = in.External
	out.EKS = (*sunpike.EKSCluster)(unsafe.Pointer(in.EKS))
	out.DockerPrivateRegistry = in.DockerPrivateRegistry
	out.QuayPrivateRegistry = in.QuayPrivateRegistry
	out.GCRPrivateRegistry = in.GCRPrivateRegistry
	out.K8SPrivateRegistry = in.K8SPrivateRegistry
	out.UseHostname = in.UseHostname
	out.AKS = (*sunpike.AKSCluster)(unsafe.Pointer(in.AKS))
	out.GKE = (*sunpike.GKECluster)(unsafe.Pointer(in.GKE))
	return nil
}

// Convert_v1alpha2_ClusterSpec_To_sunpike_ClusterSpec is an autogenerated conversion function.
func Convert_v1alpha2_ClusterSpec_To_sunpike_ClusterSpec(in *ClusterSpec, out *sunpike.ClusterSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterSpec_To_sunpike_ClusterSpec(in, out, s)
}

func autoConvert_sunpike_ClusterSpec_To_v1alpha2_ClusterSpec(in *sunpike.ClusterSpec, out *ClusterSpec, s conversion.Scope) error {
	out.Debug = in.Debug
	out.CloudProviderID = in.CloudProviderID
	out.ProjectID = in.ProjectID
	out.KubeVersion = in.KubeVersion
	if err := Convert_sunpike_ClusterNetwork_To_v1alpha2_ClusterNetwork(&in.ClusterNetwork, &out.ClusterNetwork, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeProxyOpts_To_v1alpha2_KubeProxyOpts(&in.KubeProxy, &out.KubeProxy, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeletOpts_To_v1alpha2_KubeletOpts(&in.Kubelet, &out.Kubelet, s); err != nil {
		return err
	}
	if err := Convert_sunpike_ContainerRuntime_To_v1alpha2_ContainerRuntime(&in.ContainerRuntime, &out.ContainerRuntime, s); err != nil {
		return err
	}
	if err := Convert_sunpike_LoadBalancer_To_v1alpha2_LoadBalancer(&in.LoadBalancer, &out.LoadBalancer, s); err != nil {
		return err
	}
	if err := Convert_sunpike_StorageBackend_To_v1alpha2_StorageBackend(&in.StorageBackend, &out.StorageBackend, s); err != nil {
		return err
	}
	if err := Convert_sunpike_Auth_To_v1alpha2_Auth(&in.Auth, &out.Auth, s); err != nil {
		return err
	}
	if err := Convert_sunpike_HA_To_v1alpha2_HA(&in.HA, &out.HA, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeSchedulerOpts_To_v1alpha2_KubeSchedulerOpts(&in.Scheduler, &out.Scheduler, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeControllerManagerOpts_To_v1alpha2_KubeControllerManagerOpts(&in.ControllerManager, &out.ControllerManager, s); err != nil {
		return err
	}
	if err := Convert_sunpike_KubeApiserverOpts_To_v1alpha2_KubeApiserverOpts(&in.Apiserver, &out.Apiserver, s); err != nil {
		return err
	}
	if err := Convert_sunpike_APIEndpoint_To_v1alpha2_APIEndpoint(&in.ControlPlaneEndpoint, &out.ControlPlaneEndpoint, s); err != nil {
		return err
	}
	if err := Convert_sunpike_CNIOpts_To_v1alpha2_CNIOpts(&in.CNI, &out.CNI, s); err != nil {
		return err
	}
	if err := Convert_sunpike_AddonsOpts_To_v1alpha2_AddonsOpts(&in.Addons, &out.Addons, s); err != nil {
		return err
	}
	out.AllowWorkloadsOnMasters = in.AllowWorkloadsOnMasters
	out.VaultToken = in.VaultToken
	if err := Convert_sunpike_PF9_To_v1alpha2_PF9(&in.PF9, &out.PF9, s); err != nil {
		return err
	}
	out.DisplayName = in.DisplayName
	out.AWS = (*AWSCluster)(unsafe.Pointer(in.AWS))
	out.External = in.External
	out.EKS = (*EKSCluster)(unsafe.Pointer(in.EKS))
	out.DockerPrivateRegistry = in.DockerPrivateRegistry
	out.QuayPrivateRegistry = in.QuayPrivateRegistry
	out.GCRPrivateRegistry = in.GCRPrivateRegistry
	out.K8SPrivateRegistry = in.K8SPrivateRegistry
	out.UseHostname = in.UseHostname
	out.AKS = (*AKSCluster)(unsafe.Pointer(in.AKS))
	out.GKE = (*GKECluster)(unsafe.Pointer(in.GKE))
	return nil
}

// Convert_sunpike_ClusterSpec_To_v1alpha2_ClusterSpec is an autogenerated conversion function.
func Convert_sunpike_ClusterSpec_To_v1alpha2_ClusterSpec(in *sunpike.ClusterSpec, out *ClusterSpec, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterSpec_To_v1alpha2_ClusterSpec(in, out, s)
}

func autoConvert_v1alpha2_ClusterStatus_To_sunpike_ClusterStatus(in *ClusterStatus, out *sunpike.ClusterStatus, s conversion.Scope) error {
	out.Phase = sunpike.ClusterPhase(in.Phase)
	out.Message = in.Message
	out.Masters = in.Masters
	out.Workers = in.Workers
	out.ControlPlaneEndpoint = in.ControlPlaneEndpoint
	out.Type = sunpike.CloudProviderType(in.Type)
	out.Conditions = *(*sunpike.Conditions)(unsafe.Pointer(&in.Conditions))
	out.ObservedGeneration = in.ObservedGeneration
	return nil
}

// Convert_v1alpha2_ClusterStatus_To_sunpike_ClusterStatus is an autogenerated conversion function.
func Convert_v1alpha2_ClusterStatus_To_sunpike_ClusterStatus(in *ClusterStatus, out *sunpike.ClusterStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterStatus_To_sunpike_ClusterStatus(in, out, s)
}

func autoConvert_sunpike_ClusterStatus_To_v1alpha2_ClusterStatus(in *sunpike.ClusterStatus, out *ClusterStatus, s conversion.Scope) error {
	out.Phase = ClusterPhase(in.Phase)
	out.Message = in.Message
	out.Masters = in.Masters
	out.Workers = in.Workers
	out.ControlPlaneEndpoint = in.ControlPlaneEndpoint
	out.Type = CloudProviderType(in.Type)
	out.Conditions = *(*Conditions)(unsafe.Pointer(&in.Conditions))
	out.ObservedGeneration = in.ObservedGeneration
	return nil
}

// Convert_sunpike_ClusterStatus_To_v1alpha2_ClusterStatus is an autogenerated conversion function.
func Convert_sunpike_ClusterStatus_To_v1alpha2_ClusterStatus(in *sunpike.ClusterStatus, out *ClusterStatus, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterStatus_To_v1alpha2_ClusterStatus(in, out, s)
}

func autoConvert_v1alpha2_ClusterVersion_To_sunpike_ClusterVersion(in *ClusterVersion, out *sunpike.ClusterVersion, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Version = in.Version
	out.KubeVersion = in.KubeVersion
	out.PMKVersion = in.PMKVersion
	out.Addons = *(*[]sunpike.ClusterVersionAddon)(unsafe.Pointer(&in.Addons))
	out.Changelog = in.Changelog
	out.ReleasedAt = in.ReleasedAt
	out.Phase = sunpike.ClusterVersionPhase(in.Phase)
	return nil
}

// Convert_v1alpha2_ClusterVersion_To_sunpike_ClusterVersion is an autogenerated conversion function.
func Convert_v1alpha2_ClusterVersion_To_sunpike_ClusterVersion(in *ClusterVersion, out *sunpike.ClusterVersion, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterVersion_To_sunpike_ClusterVersion(in, out, s)
}

func autoConvert_sunpike_ClusterVersion_To_v1alpha2_ClusterVersion(in *sunpike.ClusterVersion, out *ClusterVersion, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Version = in.Version
	out.KubeVersion = in.KubeVersion
	out.PMKVersion = in.PMKVersion
	out.Addons = *(*[]ClusterVersionAddon)(unsafe.Pointer(&in.Addons))
	out.Changelog = in.Changelog
	out.ReleasedAt = in.ReleasedAt
	out.Phase = ClusterVersionPhase(in.Phase)
	return nil
}

// Convert_sunpike_ClusterVersion_To_v1alpha2_ClusterVersion is an autogenerated conversion function.
func Convert_sunpike_ClusterVersion_To_v1alpha2_ClusterVersion(in *sunpike.ClusterVersion, out *ClusterVersion, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterVersion_To_v1alpha2_ClusterVersion(in, out, s)
}

func autoConvert_v1alpha2_ClusterVersionAddon_To_sunpike_ClusterVersionAddon(in *ClusterVersionAddon, out *sunpike.ClusterVersionAddon, s conversion.Scope) error {
	out.Name = in.Name
	out.Version = in.Version
	return nil
}

// Convert_v1alpha2_ClusterVersionAddon_To_sunpike_ClusterVersionAddon is an autogenerated conversion function.
func Convert_v1alpha2_ClusterVersionAddon_To_sunpike_ClusterVersionAddon(in *ClusterVersionAddon, out *sunpike.ClusterVersionAddon, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterVersionAddon_To_sunpike_ClusterVersionAddon(in, out, s)
}

func autoConvert_sunpike_ClusterVersionAddon_To_v1alpha2_ClusterVersionAddon(in *sunpike.ClusterVersionAddon, out *ClusterVersionAddon, s conversion.Scope) error {
	out.Name = in.Name
	out.Version = in.Version
	return nil
}

// Convert_sunpike_ClusterVersionAddon_To_v1alpha2_ClusterVersionAddon is an autogenerated conversion function.
func Convert_sunpike_ClusterVersionAddon_To_v1alpha2_ClusterVersionAddon(in *sunpike.ClusterVersionAddon, out *ClusterVersionAddon, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterVersionAddon_To_v1alpha2_ClusterVersionAddon(in, out, s)
}

func autoConvert_v1alpha2_ClusterVersionList_To_sunpike_ClusterVersionList(in *ClusterVersionList, out *sunpike.ClusterVersionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sunpike.ClusterVersion)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha2_ClusterVersionList_To_sunpike_ClusterVersionList is an autogenerated conversion function.
func Convert_v1alpha2_ClusterVersionList_To_sunpike_ClusterVersionList(in *ClusterVersionList, out *sunpike.ClusterVersionList, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClusterVersionList_To_sunpike_ClusterVersionList(in, out, s)
}

func autoConvert_sunpike_ClusterVersionList_To_v1alpha2_ClusterVersionList(in *sunpike.ClusterVersionList, out *ClusterVersionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ClusterVersion)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sunpike_ClusterVersionList_To_v1alpha2_ClusterVersionList is an autogenerated conversion function.
func Convert_sunpike_ClusterVersionList_To_v1alpha2_ClusterVersionList(in *sunpike.ClusterVersionList, out *ClusterVersionList, s conversion.Scope) error {
	return autoConvert_sunpike_ClusterVersionList_To_v1alpha2_ClusterVersionList(in, out, s)
}

func autoConvert_v1alpha2_Condition_To_sunpike_Condition(in *Condition, out *sunpike.Condition, s conversion.Scope) error {
	out.Type = sunpike.ConditionType(in.Type)
	out.Status = v1.ConditionStatus(in.Status)
	out.Severity = sunpike.ConditionSeverity(in.Severity)
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_v1alpha2_Condition_To_sunpike_Condition is an autogenerated conversion function.
func Convert_v1alpha2_Condition_To_sunpike_Condition(in *Condition, out *sunpike.Condition, s conversion.Scope) error {
	return autoConvert_v1alpha2_Condition_To_sunpike_Condition(in, out, s)
}

func autoConvert_sunpike_Condition_To_v1alpha2_Condition(in *sunpike.Condition, out *Condition, s conversion.Scope) error {
	out.Type = ConditionType(in.Type)
	out.Status = v1.ConditionStatus(in.Status)
	out.Severity = ConditionSeverity(in.Severity)
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_sunpike_Condition_To_v1alpha2_Condition is an autogenerated conversion function.
func Convert_sunpike_Condition_To_v1alpha2_Condition(in *sunpike.Condition, out *Condition, s conversion.Scope) error {
	return autoConvert_sunpike_Condition_To_v1alpha2_Condition(in, out, s)
}

func autoConvert_v1alpha2_ContainerRuntime_To_sunpike_ContainerRuntime(in *ContainerRuntime, out *sunpike.ContainerRuntime, s conversion.Scope) error {
	if err := Convert_v1alpha2_DockerOpts_To_sunpike_DockerOpts(&in.Docker, &out.Docker, s); err != nil {
		return err
	}
	out.Runtime = in.Runtime
	return nil
}

// Convert_v1alpha2_ContainerRuntime_To_sunpike_ContainerRuntime is an autogenerated conversion function.
func Convert_v1alpha2_ContainerRuntime_To_sunpike_ContainerRuntime(in *ContainerRuntime, out *sunpike.ContainerRuntime, s conversion.Scope) error {
	return autoConvert_v1alpha2_ContainerRuntime_To_sunpike_ContainerRuntime(in, out, s)
}

func autoConvert_sunpike_ContainerRuntime_To_v1alpha2_ContainerRuntime(in *sunpike.ContainerRuntime, out *ContainerRuntime, s conversion.Scope) error {
	if err := Convert_sunpike_DockerOpts_To_v1alpha2_DockerOpts(&in.Docker, &out.Docker, s); err != nil {
		return err
	}
	out.Runtime = in.Runtime
	return nil
}

// Convert_sunpike_ContainerRuntime_To_v1alpha2_ContainerRuntime is an autogenerated conversion function.
func Convert_sunpike_ContainerRuntime_To_v1alpha2_ContainerRuntime(in *sunpike.ContainerRuntime, out *ContainerRuntime, s conversion.Scope) error {
	return autoConvert_sunpike_ContainerRuntime_To_v1alpha2_ContainerRuntime(in, out, s)
}

func autoConvert_v1alpha2_DockerOpts_To_sunpike_DockerOpts(in *DockerOpts, out *sunpike.DockerOpts, s conversion.Scope) error {
	out.LiveRestore = in.LiveRestore
	out.RootDir = in.RootDir
	out.DockerhubID = in.DockerhubID
	out.DockerhubPassword = in.DockerhubPassword
	out.RegistryMirrors = in.RegistryMirrors
	out.DockerCentosPackageRepoUrl = in.DockerCentosPackageRepoUrl
	out.DockerUbuntuPackageRepoUrl = in.DockerUbuntuPackageRepoUrl
	return nil
}

// Convert_v1alpha2_DockerOpts_To_sunpike_DockerOpts is an autogenerated conversion function.
func Convert_v1alpha2_DockerOpts_To_sunpike_DockerOpts(in *DockerOpts, out *sunpike.DockerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_DockerOpts_To_sunpike_DockerOpts(in, out, s)
}

func autoConvert_sunpike_DockerOpts_To_v1alpha2_DockerOpts(in *sunpike.DockerOpts, out *DockerOpts, s conversion.Scope) error {
	out.LiveRestore = in.LiveRestore
	out.RootDir = in.RootDir
	out.DockerhubID = in.DockerhubID
	out.DockerhubPassword = in.DockerhubPassword
	out.RegistryMirrors = in.RegistryMirrors
	out.DockerCentosPackageRepoUrl = in.DockerCentosPackageRepoUrl
	out.DockerUbuntuPackageRepoUrl = in.DockerUbuntuPackageRepoUrl
	return nil
}

// Convert_sunpike_DockerOpts_To_v1alpha2_DockerOpts is an autogenerated conversion function.
func Convert_sunpike_DockerOpts_To_v1alpha2_DockerOpts(in *sunpike.DockerOpts, out *DockerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_DockerOpts_To_v1alpha2_DockerOpts(in, out, s)
}

func autoConvert_v1alpha2_EC2Instance_To_sunpike_EC2Instance(in *EC2Instance, out *sunpike.EC2Instance, s conversion.Scope) error {
	out.InstanceID = in.InstanceID
	out.AvailabilityZone = in.AvailabilityZone
	out.InstanceType = in.InstanceType
	out.Network = (*sunpike.EC2InstanceNetwork)(unsafe.Pointer(in.Network))
	return nil
}

// Convert_v1alpha2_EC2Instance_To_sunpike_EC2Instance is an autogenerated conversion function.
func Convert_v1alpha2_EC2Instance_To_sunpike_EC2Instance(in *EC2Instance, out *sunpike.EC2Instance, s conversion.Scope) error {
	return autoConvert_v1alpha2_EC2Instance_To_sunpike_EC2Instance(in, out, s)
}

func autoConvert_sunpike_EC2Instance_To_v1alpha2_EC2Instance(in *sunpike.EC2Instance, out *EC2Instance, s conversion.Scope) error {
	out.InstanceID = in.InstanceID
	out.AvailabilityZone = in.AvailabilityZone
	out.InstanceType = in.InstanceType
	out.Network = (*EC2InstanceNetwork)(unsafe.Pointer(in.Network))
	return nil
}

// Convert_sunpike_EC2Instance_To_v1alpha2_EC2Instance is an autogenerated conversion function.
func Convert_sunpike_EC2Instance_To_v1alpha2_EC2Instance(in *sunpike.EC2Instance, out *EC2Instance, s conversion.Scope) error {
	return autoConvert_sunpike_EC2Instance_To_v1alpha2_EC2Instance(in, out, s)
}

func autoConvert_v1alpha2_EC2InstanceNetwork_To_sunpike_EC2InstanceNetwork(in *EC2InstanceNetwork, out *sunpike.EC2InstanceNetwork, s conversion.Scope) error {
	out.PrivateDNSName = in.PrivateDNSName
	out.PublicDNSName = in.PublicDNSName
	out.PrivateIPAddress = in.PrivateIPAddress
	out.PublicIPAddress = in.PublicIPAddress
	out.Subnet = in.Subnet
	out.VPCID = in.VPCID
	return nil
}

// Convert_v1alpha2_EC2InstanceNetwork_To_sunpike_EC2InstanceNetwork is an autogenerated conversion function.
func Convert_v1alpha2_EC2InstanceNetwork_To_sunpike_EC2InstanceNetwork(in *EC2InstanceNetwork, out *sunpike.EC2InstanceNetwork, s conversion.Scope) error {
	return autoConvert_v1alpha2_EC2InstanceNetwork_To_sunpike_EC2InstanceNetwork(in, out, s)
}

func autoConvert_sunpike_EC2InstanceNetwork_To_v1alpha2_EC2InstanceNetwork(in *sunpike.EC2InstanceNetwork, out *EC2InstanceNetwork, s conversion.Scope) error {
	out.PrivateDNSName = in.PrivateDNSName
	out.PublicDNSName = in.PublicDNSName
	out.PrivateIPAddress = in.PrivateIPAddress
	out.PublicIPAddress = in.PublicIPAddress
	out.Subnet = in.Subnet
	out.VPCID = in.VPCID
	return nil
}

// Convert_sunpike_EC2InstanceNetwork_To_v1alpha2_EC2InstanceNetwork is an autogenerated conversion function.
func Convert_sunpike_EC2InstanceNetwork_To_v1alpha2_EC2InstanceNetwork(in *sunpike.EC2InstanceNetwork, out *EC2InstanceNetwork, s conversion.Scope) error {
	return autoConvert_sunpike_EC2InstanceNetwork_To_v1alpha2_EC2InstanceNetwork(in, out, s)
}

func autoConvert_v1alpha2_EKSCluster_To_sunpike_EKSCluster(in *EKSCluster, out *sunpike.EKSCluster, s conversion.Scope) error {
	out.Region = in.Region
	out.KubernetesVersion = in.KubernetesVersion
	out.EKSVersion = in.EKSVersion
	out.CreatedAt = in.CreatedAt
	out.Status = in.Status
	out.CA = in.CA
	out.IAMRole = in.IAMRole
	out.Network = (*sunpike.EKSNetwork)(unsafe.Pointer(in.Network))
	out.Logging = (*sunpike.EKSLogging)(unsafe.Pointer(in.Logging))
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.NodeGroups = *(*[]sunpike.EKSNodeGroup)(unsafe.Pointer(&in.NodeGroups))
	return nil
}

// Convert_v1alpha2_EKSCluster_To_sunpike_EKSCluster is an autogenerated conversion function.
func Convert_v1alpha2_EKSCluster_To_sunpike_EKSCluster(in *EKSCluster, out *sunpike.EKSCluster, s conversion.Scope) error {
	return autoConvert_v1alpha2_EKSCluster_To_sunpike_EKSCluster(in, out, s)
}

func autoConvert_sunpike_EKSCluster_To_v1alpha2_EKSCluster(in *sunpike.EKSCluster, out *EKSCluster, s conversion.Scope) error {
	out.Region = in.Region
	out.KubernetesVersion = in.KubernetesVersion
	out.EKSVersion = in.EKSVersion
	out.CreatedAt = in.CreatedAt
	out.Status = in.Status
	out.CA = in.CA
	out.IAMRole = in.IAMRole
	out.Network = (*EKSNetwork)(unsafe.Pointer(in.Network))
	out.Logging = (*EKSLogging)(unsafe.Pointer(in.Logging))
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.NodeGroups = *(*[]EKSNodeGroup)(unsafe.Pointer(&in.NodeGroups))
	return nil
}

// Convert_sunpike_EKSCluster_To_v1alpha2_EKSCluster is an autogenerated conversion function.
func Convert_sunpike_EKSCluster_To_v1alpha2_EKSCluster(in *sunpike.EKSCluster, out *EKSCluster, s conversion.Scope) error {
	return autoConvert_sunpike_EKSCluster_To_v1alpha2_EKSCluster(in, out, s)
}

func autoConvert_v1alpha2_EKSClusterLogging_To_sunpike_EKSClusterLogging(in *EKSClusterLogging, out *sunpike.EKSClusterLogging, s conversion.Scope) error {
	out.Types = *(*[]string)(unsafe.Pointer(&in.Types))
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha2_EKSClusterLogging_To_sunpike_EKSClusterLogging is an autogenerated conversion function.
func Convert_v1alpha2_EKSClusterLogging_To_sunpike_EKSClusterLogging(in *EKSClusterLogging, out *sunpike.EKSClusterLogging, s conversion.Scope) error {
	return autoConvert_v1alpha2_EKSClusterLogging_To_sunpike_EKSClusterLogging(in, out, s)
}

func autoConvert_sunpike_EKSClusterLogging_To_v1alpha2_EKSClusterLogging(in *sunpike.EKSClusterLogging, out *EKSClusterLogging, s conversion.Scope) error {
	out.Types = *(*[]string)(unsafe.Pointer(&in.Types))
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_EKSClusterLogging_To_v1alpha2_EKSClusterLogging is an autogenerated conversion function.
func Convert_sunpike_EKSClusterLogging_To_v1alpha2_EKSClusterLogging(in *sunpike.EKSClusterLogging, out *EKSClusterLogging, s conversion.Scope) error {
	return autoConvert_sunpike_EKSClusterLogging_To_v1alpha2_EKSClusterLogging(in, out, s)
}

func autoConvert_v1alpha2_EKSLogging_To_sunpike_EKSLogging(in *EKSLogging, out *sunpike.EKSLogging, s conversion.Scope) error {
	out.EKSClusterLogging = *(*[]sunpike.EKSClusterLogging)(unsafe.Pointer(&in.EKSClusterLogging))
	return nil
}

// Convert_v1alpha2_EKSLogging_To_sunpike_EKSLogging is an autogenerated conversion function.
func Convert_v1alpha2_EKSLogging_To_sunpike_EKSLogging(in *EKSLogging, out *sunpike.EKSLogging, s conversion.Scope) error {
	return autoConvert_v1alpha2_EKSLogging_To_sunpike_EKSLogging(in, out, s)
}

func autoConvert_sunpike_EKSLogging_To_v1alpha2_EKSLogging(in *sunpike.EKSLogging, out *EKSLogging, s conversion.Scope) error {
	out.EKSClusterLogging = *(*[]EKSClusterLogging)(unsafe.Pointer(&in.EKSClusterLogging))
	return nil
}

// Convert_sunpike_EKSLogging_To_v1alpha2_EKSLogging is an autogenerated conversion function.
func Convert_sunpike_EKSLogging_To_v1alpha2_EKSLogging(in *sunpike.EKSLogging, out *EKSLogging, s conversion.Scope) error {
	return autoConvert_sunpike_EKSLogging_To_v1alpha2_EKSLogging(in, out, s)
}

func autoConvert_v1alpha2_EKSNetwork_To_sunpike_EKSNetwork(in *EKSNetwork, out *sunpike.EKSNetwork, s conversion.Scope) error {
	out.ContainerCIDR = *(*[]string)(unsafe.Pointer(&in.ContainerCIDR))
	out.ServicesCIDR = in.ServicesCIDR
	out.VPC = (*sunpike.AWSVPC)(unsafe.Pointer(in.VPC))
	return nil
}

// Convert_v1alpha2_EKSNetwork_To_sunpike_EKSNetwork is an autogenerated conversion function.
func Convert_v1alpha2_EKSNetwork_To_sunpike_EKSNetwork(in *EKSNetwork, out *sunpike.EKSNetwork, s conversion.Scope) error {
	return autoConvert_v1alpha2_EKSNetwork_To_sunpike_EKSNetwork(in, out, s)
}

func autoConvert_sunpike_EKSNetwork_To_v1alpha2_EKSNetwork(in *sunpike.EKSNetwork, out *EKSNetwork, s conversion.Scope) error {
	out.ContainerCIDR = *(*[]string)(unsafe.Pointer(&in.ContainerCIDR))
	out.ServicesCIDR = in.ServicesCIDR
	out.VPC = (*AWSVPC)(unsafe.Pointer(in.VPC))
	return nil
}

// Convert_sunpike_EKSNetwork_To_v1alpha2_EKSNetwork is an autogenerated conversion function.
func Convert_sunpike_EKSNetwork_To_v1alpha2_EKSNetwork(in *sunpike.EKSNetwork, out *EKSNetwork, s conversion.Scope) error {
	return autoConvert_sunpike_EKSNetwork_To_v1alpha2_EKSNetwork(in, out, s)
}

func autoConvert_v1alpha2_EKSNodeGroup_To_sunpike_EKSNodeGroup(in *EKSNodeGroup, out *sunpike.EKSNodeGroup, s conversion.Scope) error {
	out.Name = in.Name
	out.ARN = in.ARN
	out.KubernetesVersion = in.KubernetesVersion
	out.CreatedAt = in.CreatedAt
	out.UpdatedAt = in.UpdatedAt
	out.Status = in.Status
	out.CapacityType = in.CapacityType
	out.InstanceTypes = *(*[]string)(unsafe.Pointer(&in.InstanceTypes))
	out.Subnets = *(*[]string)(unsafe.Pointer(&in.Subnets))
	out.AMI = in.AMI
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.Labels = *(*map[string]string)(unsafe.Pointer(&in.Labels))
	out.SSHKey = in.SSHKey
	out.ScalingConfig = (*sunpike.AWSScalingConfig)(unsafe.Pointer(in.ScalingConfig))
	out.DiskSizeInGB = in.DiskSizeInGB
	out.IAMRole = in.IAMRole
	out.Instances = *(*[]sunpike.EC2Instance)(unsafe.Pointer(&in.Instances))
	return nil
}

// Convert_v1alpha2_EKSNodeGroup_To_sunpike_EKSNodeGroup is an autogenerated conversion function.
func Convert_v1alpha2_EKSNodeGroup_To_sunpike_EKSNodeGroup(in *EKSNodeGroup, out *sunpike.EKSNodeGroup, s conversion.Scope) error {
	return autoConvert_v1alpha2_EKSNodeGroup_To_sunpike_EKSNodeGroup(in, out, s)
}

func autoConvert_sunpike_EKSNodeGroup_To_v1alpha2_EKSNodeGroup(in *sunpike.EKSNodeGroup, out *EKSNodeGroup, s conversion.Scope) error {
	out.Name = in.Name
	out.ARN = in.ARN
	out.KubernetesVersion = in.KubernetesVersion
	out.CreatedAt = in.CreatedAt
	out.UpdatedAt = in.UpdatedAt
	out.Status = in.Status
	out.CapacityType = in.CapacityType
	out.InstanceTypes = *(*[]string)(unsafe.Pointer(&in.InstanceTypes))
	out.Subnets = *(*[]string)(unsafe.Pointer(&in.Subnets))
	out.AMI = in.AMI
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.Labels = *(*map[string]string)(unsafe.Pointer(&in.Labels))
	out.SSHKey = in.SSHKey
	out.ScalingConfig = (*AWSScalingConfig)(unsafe.Pointer(in.ScalingConfig))
	out.DiskSizeInGB = in.DiskSizeInGB
	out.IAMRole = in.IAMRole
	out.Instances = *(*[]EC2Instance)(unsafe.Pointer(&in.Instances))
	return nil
}

// Convert_sunpike_EKSNodeGroup_To_v1alpha2_EKSNodeGroup is an autogenerated conversion function.
func Convert_sunpike_EKSNodeGroup_To_v1alpha2_EKSNodeGroup(in *sunpike.EKSNodeGroup, out *EKSNodeGroup, s conversion.Scope) error {
	return autoConvert_sunpike_EKSNodeGroup_To_v1alpha2_EKSNodeGroup(in, out, s)
}

func autoConvert_v1alpha2_EtcdOpts_To_sunpike_EtcdOpts(in *EtcdOpts, out *sunpike.EtcdOpts, s conversion.Scope) error {
	out.DataDir = in.DataDir
	out.DiscoveryURL = in.DiscoveryURL
	out.ElectionTimeout = in.ElectionTimeout
	out.Env = in.Env
	out.HeartbeatIntervalMs = in.HeartbeatIntervalMs
	out.Version = in.Version
	return nil
}

// Convert_v1alpha2_EtcdOpts_To_sunpike_EtcdOpts is an autogenerated conversion function.
func Convert_v1alpha2_EtcdOpts_To_sunpike_EtcdOpts(in *EtcdOpts, out *sunpike.EtcdOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_EtcdOpts_To_sunpike_EtcdOpts(in, out, s)
}

func autoConvert_sunpike_EtcdOpts_To_v1alpha2_EtcdOpts(in *sunpike.EtcdOpts, out *EtcdOpts, s conversion.Scope) error {
	out.DataDir = in.DataDir
	out.DiscoveryURL = in.DiscoveryURL
	out.ElectionTimeout = in.ElectionTimeout
	out.Env = in.Env
	out.HeartbeatIntervalMs = in.HeartbeatIntervalMs
	out.Version = in.Version
	return nil
}

// Convert_sunpike_EtcdOpts_To_v1alpha2_EtcdOpts is an autogenerated conversion function.
func Convert_sunpike_EtcdOpts_To_v1alpha2_EtcdOpts(in *sunpike.EtcdOpts, out *EtcdOpts, s conversion.Scope) error {
	return autoConvert_sunpike_EtcdOpts_To_v1alpha2_EtcdOpts(in, out, s)
}

func autoConvert_v1alpha2_FlannelOpts_To_sunpike_FlannelOpts(in *FlannelOpts, out *sunpike.FlannelOpts, s conversion.Scope) error {
	out.InterfaceLabel = in.InterfaceLabel
	out.PublicInterfaceLabel = in.PublicInterfaceLabel
	return nil
}

// Convert_v1alpha2_FlannelOpts_To_sunpike_FlannelOpts is an autogenerated conversion function.
func Convert_v1alpha2_FlannelOpts_To_sunpike_FlannelOpts(in *FlannelOpts, out *sunpike.FlannelOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_FlannelOpts_To_sunpike_FlannelOpts(in, out, s)
}

func autoConvert_sunpike_FlannelOpts_To_v1alpha2_FlannelOpts(in *sunpike.FlannelOpts, out *FlannelOpts, s conversion.Scope) error {
	out.InterfaceLabel = in.InterfaceLabel
	out.PublicInterfaceLabel = in.PublicInterfaceLabel
	return nil
}

// Convert_sunpike_FlannelOpts_To_v1alpha2_FlannelOpts is an autogenerated conversion function.
func Convert_sunpike_FlannelOpts_To_v1alpha2_FlannelOpts(in *sunpike.FlannelOpts, out *FlannelOpts, s conversion.Scope) error {
	return autoConvert_sunpike_FlannelOpts_To_v1alpha2_FlannelOpts(in, out, s)
}

func autoConvert_v1alpha2_GKECluster_To_sunpike_GKECluster(in *GKECluster, out *sunpike.GKECluster, s conversion.Scope) error {
	out.Locations = *(*[]string)(unsafe.Pointer(&in.Locations))
	out.ID = in.ID
	out.ClusterCACertificate = in.ClusterCACertificate
	out.InitialClusterVersion = in.InitialClusterVersion
	out.ReleaseChannel = in.ReleaseChannel
	out.DatabaseEncryption = in.DatabaseEncryption
	out.Network = (*sunpike.GKEClusterNetwork)(unsafe.Pointer(in.Network))
	out.NodePools = *(*[]sunpike.GKENodePool)(unsafe.Pointer(&in.NodePools))
	out.PrivateCluster = (*bool)(unsafe.Pointer(in.PrivateCluster))
	return nil
}

// Convert_v1alpha2_GKECluster_To_sunpike_GKECluster is an autogenerated conversion function.
func Convert_v1alpha2_GKECluster_To_sunpike_GKECluster(in *GKECluster, out *sunpike.GKECluster, s conversion.Scope) error {
	return autoConvert_v1alpha2_GKECluster_To_sunpike_GKECluster(in, out, s)
}

func autoConvert_sunpike_GKECluster_To_v1alpha2_GKECluster(in *sunpike.GKECluster, out *GKECluster, s conversion.Scope) error {
	out.Locations = *(*[]string)(unsafe.Pointer(&in.Locations))
	out.ID = in.ID
	out.ClusterCACertificate = in.ClusterCACertificate
	out.InitialClusterVersion = in.InitialClusterVersion
	out.ReleaseChannel = in.ReleaseChannel
	out.DatabaseEncryption = in.DatabaseEncryption
	out.Network = (*GKEClusterNetwork)(unsafe.Pointer(in.Network))
	out.NodePools = *(*[]GKENodePool)(unsafe.Pointer(&in.NodePools))
	out.PrivateCluster = (*bool)(unsafe.Pointer(in.PrivateCluster))
	return nil
}

// Convert_sunpike_GKECluster_To_v1alpha2_GKECluster is an autogenerated conversion function.
func Convert_sunpike_GKECluster_To_v1alpha2_GKECluster(in *sunpike.GKECluster, out *GKECluster, s conversion.Scope) error {
	return autoConvert_sunpike_GKECluster_To_v1alpha2_GKECluster(in, out, s)
}

func autoConvert_v1alpha2_GKEClusterNetwork_To_sunpike_GKEClusterNetwork(in *GKEClusterNetwork, out *sunpike.GKEClusterNetwork, s conversion.Scope) error {
	out.UseIpAliases = in.UseIpAliases
	out.Network = in.Network
	out.Subnetwork = in.Subnetwork
	out.PodIpv4CIDR = in.PodIpv4CIDR
	out.ServicesIpv4CIDR = in.ServicesIpv4CIDR
	out.NetworkPolicyConfig = in.NetworkPolicyConfig
	return nil
}

// Convert_v1alpha2_GKEClusterNetwork_To_sunpike_GKEClusterNetwork is an autogenerated conversion function.
func Convert_v1alpha2_GKEClusterNetwork_To_sunpike_GKEClusterNetwork(in *GKEClusterNetwork, out *sunpike.GKEClusterNetwork, s conversion.Scope) error {
	return autoConvert_v1alpha2_GKEClusterNetwork_To_sunpike_GKEClusterNetwork(in, out, s)
}

func autoConvert_sunpike_GKEClusterNetwork_To_v1alpha2_GKEClusterNetwork(in *sunpike.GKEClusterNetwork, out *GKEClusterNetwork, s conversion.Scope) error {
	out.UseIpAliases = in.UseIpAliases
	out.Network = in.Network
	out.Subnetwork = in.Subnetwork
	out.PodIpv4CIDR = in.PodIpv4CIDR
	out.ServicesIpv4CIDR = in.ServicesIpv4CIDR
	out.NetworkPolicyConfig = in.NetworkPolicyConfig
	return nil
}

// Convert_sunpike_GKEClusterNetwork_To_v1alpha2_GKEClusterNetwork is an autogenerated conversion function.
func Convert_sunpike_GKEClusterNetwork_To_v1alpha2_GKEClusterNetwork(in *sunpike.GKEClusterNetwork, out *GKEClusterNetwork, s conversion.Scope) error {
	return autoConvert_sunpike_GKEClusterNetwork_To_v1alpha2_GKEClusterNetwork(in, out, s)
}

func autoConvert_v1alpha2_GKEInstance_To_sunpike_GKEInstance(in *GKEInstance, out *sunpike.GKEInstance, s conversion.Scope) error {
	out.Name = in.Name
	out.Status = in.Status
	out.ID = in.ID
	out.Location = in.Location
	out.InstanceTemplate = in.InstanceTemplate
	out.InstanceGroupName = in.InstanceGroupName
	return nil
}

// Convert_v1alpha2_GKEInstance_To_sunpike_GKEInstance is an autogenerated conversion function.
func Convert_v1alpha2_GKEInstance_To_sunpike_GKEInstance(in *GKEInstance, out *sunpike.GKEInstance, s conversion.Scope) error {
	return autoConvert_v1alpha2_GKEInstance_To_sunpike_GKEInstance(in, out, s)
}

func autoConvert_sunpike_GKEInstance_To_v1alpha2_GKEInstance(in *sunpike.GKEInstance, out *GKEInstance, s conversion.Scope) error {
	out.Name = in.Name
	out.Status = in.Status
	out.ID = in.ID
	out.Location = in.Location
	out.InstanceTemplate = in.InstanceTemplate
	out.InstanceGroupName = in.InstanceGroupName
	return nil
}

// Convert_sunpike_GKEInstance_To_v1alpha2_GKEInstance is an autogenerated conversion function.
func Convert_sunpike_GKEInstance_To_v1alpha2_GKEInstance(in *sunpike.GKEInstance, out *GKEInstance, s conversion.Scope) error {
	return autoConvert_sunpike_GKEInstance_To_v1alpha2_GKEInstance(in, out, s)
}

func autoConvert_v1alpha2_GKENodePool_To_sunpike_GKENodePool(in *GKENodePool, out *sunpike.GKENodePool, s conversion.Scope) error {
	out.Name = in.Name
	out.DiskSizeGb = in.DiskSizeGb
	out.MachineType = in.MachineType
	out.ImageType = in.ImageType
	out.DiskType = in.DiskType
	out.NodeCount = in.NodeCount
	out.MaxPodsPerNode = in.MaxPodsPerNode
	out.Status = in.Status
	out.K8sVersion = in.K8sVersion
	out.Locations = *(*[]string)(unsafe.Pointer(&in.Locations))
	out.Instances = *(*[]sunpike.GKEInstance)(unsafe.Pointer(&in.Instances))
	return nil
}

// Convert_v1alpha2_GKENodePool_To_sunpike_GKENodePool is an autogenerated conversion function.
func Convert_v1alpha2_GKENodePool_To_sunpike_GKENodePool(in *GKENodePool, out *sunpike.GKENodePool, s conversion.Scope) error {
	return autoConvert_v1alpha2_GKENodePool_To_sunpike_GKENodePool(in, out, s)
}

func autoConvert_sunpike_GKENodePool_To_v1alpha2_GKENodePool(in *sunpike.GKENodePool, out *GKENodePool, s conversion.Scope) error {
	out.Name = in.Name
	out.DiskSizeGb = in.DiskSizeGb
	out.MachineType = in.MachineType
	out.ImageType = in.ImageType
	out.DiskType = in.DiskType
	out.NodeCount = in.NodeCount
	out.MaxPodsPerNode = in.MaxPodsPerNode
	out.Status = in.Status
	out.K8sVersion = in.K8sVersion
	out.Locations = *(*[]string)(unsafe.Pointer(&in.Locations))
	out.Instances = *(*[]GKEInstance)(unsafe.Pointer(&in.Instances))
	return nil
}

// Convert_sunpike_GKENodePool_To_v1alpha2_GKENodePool is an autogenerated conversion function.
func Convert_sunpike_GKENodePool_To_v1alpha2_GKENodePool(in *sunpike.GKENodePool, out *GKENodePool, s conversion.Scope) error {
	return autoConvert_sunpike_GKENodePool_To_v1alpha2_GKENodePool(in, out, s)
}

func autoConvert_v1alpha2_GoogleCloudProviderCredentials_To_sunpike_GoogleCloudProviderCredentials(in *GoogleCloudProviderCredentials, out *sunpike.GoogleCloudProviderCredentials, s conversion.Scope) error {
	out.Type = in.Type
	out.ProjectID = in.ProjectID
	out.PrivateKeyID = in.PrivateKeyID
	out.PrivateKey = in.PrivateKey
	out.ClientEmail = in.ClientEmail
	out.ClientID = in.ClientID
	out.AuthURI = in.AuthURI
	out.TokenURI = in.TokenURI
	out.AuthProviderx509CertURL = in.AuthProviderx509CertURL
	out.Clientx509CertURL = in.Clientx509CertURL
	return nil
}

// Convert_v1alpha2_GoogleCloudProviderCredentials_To_sunpike_GoogleCloudProviderCredentials is an autogenerated conversion function.
func Convert_v1alpha2_GoogleCloudProviderCredentials_To_sunpike_GoogleCloudProviderCredentials(in *GoogleCloudProviderCredentials, out *sunpike.GoogleCloudProviderCredentials, s conversion.Scope) error {
	return autoConvert_v1alpha2_GoogleCloudProviderCredentials_To_sunpike_GoogleCloudProviderCredentials(in, out, s)
}

func autoConvert_sunpike_GoogleCloudProviderCredentials_To_v1alpha2_GoogleCloudProviderCredentials(in *sunpike.GoogleCloudProviderCredentials, out *GoogleCloudProviderCredentials, s conversion.Scope) error {
	out.Type = in.Type
	out.ProjectID = in.ProjectID
	out.PrivateKeyID = in.PrivateKeyID
	out.PrivateKey = in.PrivateKey
	out.ClientEmail = in.ClientEmail
	out.ClientID = in.ClientID
	out.AuthURI = in.AuthURI
	out.TokenURI = in.TokenURI
	out.AuthProviderx509CertURL = in.AuthProviderx509CertURL
	out.Clientx509CertURL = in.Clientx509CertURL
	return nil
}

// Convert_sunpike_GoogleCloudProviderCredentials_To_v1alpha2_GoogleCloudProviderCredentials is an autogenerated conversion function.
func Convert_sunpike_GoogleCloudProviderCredentials_To_v1alpha2_GoogleCloudProviderCredentials(in *sunpike.GoogleCloudProviderCredentials, out *GoogleCloudProviderCredentials, s conversion.Scope) error {
	return autoConvert_sunpike_GoogleCloudProviderCredentials_To_v1alpha2_GoogleCloudProviderCredentials(in, out, s)
}

func autoConvert_v1alpha2_GoogleCloudProviderSpec_To_sunpike_GoogleCloudProviderSpec(in *GoogleCloudProviderSpec, out *sunpike.GoogleCloudProviderSpec, s conversion.Scope) error {
	out.SecretName = in.SecretName
	return nil
}

// Convert_v1alpha2_GoogleCloudProviderSpec_To_sunpike_GoogleCloudProviderSpec is an autogenerated conversion function.
func Convert_v1alpha2_GoogleCloudProviderSpec_To_sunpike_GoogleCloudProviderSpec(in *GoogleCloudProviderSpec, out *sunpike.GoogleCloudProviderSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_GoogleCloudProviderSpec_To_sunpike_GoogleCloudProviderSpec(in, out, s)
}

func autoConvert_sunpike_GoogleCloudProviderSpec_To_v1alpha2_GoogleCloudProviderSpec(in *sunpike.GoogleCloudProviderSpec, out *GoogleCloudProviderSpec, s conversion.Scope) error {
	out.SecretName = in.SecretName
	return nil
}

// Convert_sunpike_GoogleCloudProviderSpec_To_v1alpha2_GoogleCloudProviderSpec is an autogenerated conversion function.
func Convert_sunpike_GoogleCloudProviderSpec_To_v1alpha2_GoogleCloudProviderSpec(in *sunpike.GoogleCloudProviderSpec, out *GoogleCloudProviderSpec, s conversion.Scope) error {
	return autoConvert_sunpike_GoogleCloudProviderSpec_To_v1alpha2_GoogleCloudProviderSpec(in, out, s)
}

func autoConvert_v1alpha2_HA_To_sunpike_HA(in *HA, out *sunpike.HA, s conversion.Scope) error {
	if err := Convert_v1alpha2_KeepalivedOpts_To_sunpike_KeepalivedOpts(&in.Keepalived, &out.Keepalived, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_HA_To_sunpike_HA is an autogenerated conversion function.
func Convert_v1alpha2_HA_To_sunpike_HA(in *HA, out *sunpike.HA, s conversion.Scope) error {
	return autoConvert_v1alpha2_HA_To_sunpike_HA(in, out, s)
}

func autoConvert_sunpike_HA_To_v1alpha2_HA(in *sunpike.HA, out *HA, s conversion.Scope) error {
	if err := Convert_sunpike_KeepalivedOpts_To_v1alpha2_KeepalivedOpts(&in.Keepalived, &out.Keepalived, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_HA_To_v1alpha2_HA is an autogenerated conversion function.
func Convert_sunpike_HA_To_v1alpha2_HA(in *sunpike.HA, out *HA, s conversion.Scope) error {
	return autoConvert_sunpike_HA_To_v1alpha2_HA(in, out, s)
}

func autoConvert_v1alpha2_KeepalivedOpts_To_sunpike_KeepalivedOpts(in *KeepalivedOpts, out *sunpike.KeepalivedOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.MasterVIPInterface = in.MasterVIPInterface
	out.MasterVIPPriority = in.MasterVIPPriority
	out.MasterVIPRouterID = in.MasterVIPRouterID
	return nil
}

// Convert_v1alpha2_KeepalivedOpts_To_sunpike_KeepalivedOpts is an autogenerated conversion function.
func Convert_v1alpha2_KeepalivedOpts_To_sunpike_KeepalivedOpts(in *KeepalivedOpts, out *sunpike.KeepalivedOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_KeepalivedOpts_To_sunpike_KeepalivedOpts(in, out, s)
}

func autoConvert_sunpike_KeepalivedOpts_To_v1alpha2_KeepalivedOpts(in *sunpike.KeepalivedOpts, out *KeepalivedOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.MasterVIPInterface = in.MasterVIPInterface
	out.MasterVIPPriority = in.MasterVIPPriority
	out.MasterVIPRouterID = in.MasterVIPRouterID
	return nil
}

// Convert_sunpike_KeepalivedOpts_To_v1alpha2_KeepalivedOpts is an autogenerated conversion function.
func Convert_sunpike_KeepalivedOpts_To_v1alpha2_KeepalivedOpts(in *sunpike.KeepalivedOpts, out *KeepalivedOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KeepalivedOpts_To_v1alpha2_KeepalivedOpts(in, out, s)
}

func autoConvert_v1alpha2_KeystoneOpts_To_sunpike_KeystoneOpts(in *KeystoneOpts, out *sunpike.KeystoneOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Domain = in.Domain
	out.AuthURL = in.AuthURL
	out.Password = in.Password
	out.Username = in.Username
	out.ProjectDomainName = in.ProjectDomainName
	out.ProjectName = in.ProjectName
	out.Region = in.Region
	out.UserDomainName = in.UserDomainName
	return nil
}

// Convert_v1alpha2_KeystoneOpts_To_sunpike_KeystoneOpts is an autogenerated conversion function.
func Convert_v1alpha2_KeystoneOpts_To_sunpike_KeystoneOpts(in *KeystoneOpts, out *sunpike.KeystoneOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_KeystoneOpts_To_sunpike_KeystoneOpts(in, out, s)
}

func autoConvert_sunpike_KeystoneOpts_To_v1alpha2_KeystoneOpts(in *sunpike.KeystoneOpts, out *KeystoneOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	out.Domain = in.Domain
	out.AuthURL = in.AuthURL
	out.Password = in.Password
	out.Username = in.Username
	out.ProjectDomainName = in.ProjectDomainName
	out.ProjectName = in.ProjectName
	out.Region = in.Region
	out.UserDomainName = in.UserDomainName
	return nil
}

// Convert_sunpike_KeystoneOpts_To_v1alpha2_KeystoneOpts is an autogenerated conversion function.
func Convert_sunpike_KeystoneOpts_To_v1alpha2_KeystoneOpts(in *sunpike.KeystoneOpts, out *KeystoneOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KeystoneOpts_To_v1alpha2_KeystoneOpts(in, out, s)
}

func autoConvert_v1alpha2_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(in *KubeApiserverOpts, out *sunpike.KubeApiserverOpts, s conversion.Scope) error {
	out.StorageBackend = in.StorageBackend
	out.Privileged = in.Privileged
	out.Port = in.Port
	out.Authz = in.Authz
	out.RuntimeConfig = in.RuntimeConfig
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_v1alpha2_KubeApiserverOpts_To_sunpike_KubeApiserverOpts is an autogenerated conversion function.
func Convert_v1alpha2_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(in *KubeApiserverOpts, out *sunpike.KubeApiserverOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeApiserverOpts_To_sunpike_KubeApiserverOpts(in, out, s)
}

func autoConvert_sunpike_KubeApiserverOpts_To_v1alpha2_KubeApiserverOpts(in *sunpike.KubeApiserverOpts, out *KubeApiserverOpts, s conversion.Scope) error {
	out.StorageBackend = in.StorageBackend
	out.Privileged = in.Privileged
	out.Port = in.Port
	out.Authz = in.Authz
	out.RuntimeConfig = in.RuntimeConfig
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_sunpike_KubeApiserverOpts_To_v1alpha2_KubeApiserverOpts is an autogenerated conversion function.
func Convert_sunpike_KubeApiserverOpts_To_v1alpha2_KubeApiserverOpts(in *sunpike.KubeApiserverOpts, out *KubeApiserverOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeApiserverOpts_To_v1alpha2_KubeApiserverOpts(in, out, s)
}

func autoConvert_v1alpha2_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(in *KubeControllerManagerOpts, out *sunpike.KubeControllerManagerOpts, s conversion.Scope) error {
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_v1alpha2_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts is an autogenerated conversion function.
func Convert_v1alpha2_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(in *KubeControllerManagerOpts, out *sunpike.KubeControllerManagerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeControllerManagerOpts_To_sunpike_KubeControllerManagerOpts(in, out, s)
}

func autoConvert_sunpike_KubeControllerManagerOpts_To_v1alpha2_KubeControllerManagerOpts(in *sunpike.KubeControllerManagerOpts, out *KubeControllerManagerOpts, s conversion.Scope) error {
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_sunpike_KubeControllerManagerOpts_To_v1alpha2_KubeControllerManagerOpts is an autogenerated conversion function.
func Convert_sunpike_KubeControllerManagerOpts_To_v1alpha2_KubeControllerManagerOpts(in *sunpike.KubeControllerManagerOpts, out *KubeControllerManagerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeControllerManagerOpts_To_v1alpha2_KubeControllerManagerOpts(in, out, s)
}

func autoConvert_v1alpha2_KubeProxyOpts_To_sunpike_KubeProxyOpts(in *KubeProxyOpts, out *sunpike.KubeProxyOpts, s conversion.Scope) error {
	out.Mode = in.Mode
	return nil
}

// Convert_v1alpha2_KubeProxyOpts_To_sunpike_KubeProxyOpts is an autogenerated conversion function.
func Convert_v1alpha2_KubeProxyOpts_To_sunpike_KubeProxyOpts(in *KubeProxyOpts, out *sunpike.KubeProxyOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeProxyOpts_To_sunpike_KubeProxyOpts(in, out, s)
}

func autoConvert_sunpike_KubeProxyOpts_To_v1alpha2_KubeProxyOpts(in *sunpike.KubeProxyOpts, out *KubeProxyOpts, s conversion.Scope) error {
	out.Mode = in.Mode
	return nil
}

// Convert_sunpike_KubeProxyOpts_To_v1alpha2_KubeProxyOpts is an autogenerated conversion function.
func Convert_sunpike_KubeProxyOpts_To_v1alpha2_KubeProxyOpts(in *sunpike.KubeProxyOpts, out *KubeProxyOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeProxyOpts_To_v1alpha2_KubeProxyOpts(in, out, s)
}

func autoConvert_v1alpha2_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(in *KubeSchedulerOpts, out *sunpike.KubeSchedulerOpts, s conversion.Scope) error {
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_v1alpha2_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts is an autogenerated conversion function.
func Convert_v1alpha2_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(in *KubeSchedulerOpts, out *sunpike.KubeSchedulerOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeSchedulerOpts_To_sunpike_KubeSchedulerOpts(in, out, s)
}

func autoConvert_sunpike_KubeSchedulerOpts_To_v1alpha2_KubeSchedulerOpts(in *sunpike.KubeSchedulerOpts, out *KubeSchedulerOpts, s conversion.Scope) error {
	out.ExtraArgs = in.ExtraArgs
	return nil
}

// Convert_sunpike_KubeSchedulerOpts_To_v1alpha2_KubeSchedulerOpts is an autogenerated conversion function.
func Convert_sunpike_KubeSchedulerOpts_To_v1alpha2_KubeSchedulerOpts(in *sunpike.KubeSchedulerOpts, out *KubeSchedulerOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeSchedulerOpts_To_v1alpha2_KubeSchedulerOpts(in, out, s)
}

func autoConvert_v1alpha2_KubeVirtOpts_To_sunpike_KubeVirtOpts(in *KubeVirtOpts, out *sunpike.KubeVirtOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha2_KubeVirtOpts_To_sunpike_KubeVirtOpts is an autogenerated conversion function.
func Convert_v1alpha2_KubeVirtOpts_To_sunpike_KubeVirtOpts(in *KubeVirtOpts, out *sunpike.KubeVirtOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeVirtOpts_To_sunpike_KubeVirtOpts(in, out, s)
}

func autoConvert_sunpike_KubeVirtOpts_To_v1alpha2_KubeVirtOpts(in *sunpike.KubeVirtOpts, out *KubeVirtOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_KubeVirtOpts_To_v1alpha2_KubeVirtOpts is an autogenerated conversion function.
func Convert_sunpike_KubeVirtOpts_To_v1alpha2_KubeVirtOpts(in *sunpike.KubeVirtOpts, out *KubeVirtOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeVirtOpts_To_v1alpha2_KubeVirtOpts(in, out, s)
}

func autoConvert_v1alpha2_KubeletOpts_To_sunpike_KubeletOpts(in *KubeletOpts, out *sunpike.KubeletOpts, s conversion.Scope) error {
	out.CloudCfg = in.CloudCfg
	out.ProviderID = in.ProviderID
	out.ExtraArgs = in.ExtraArgs
	out.NodeLabels = *(*map[string]string)(unsafe.Pointer(&in.NodeLabels))
	out.NodeTaints = *(*map[string]string)(unsafe.Pointer(&in.NodeTaints))
	return nil
}

// Convert_v1alpha2_KubeletOpts_To_sunpike_KubeletOpts is an autogenerated conversion function.
func Convert_v1alpha2_KubeletOpts_To_sunpike_KubeletOpts(in *KubeletOpts, out *sunpike.KubeletOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubeletOpts_To_sunpike_KubeletOpts(in, out, s)
}

func autoConvert_sunpike_KubeletOpts_To_v1alpha2_KubeletOpts(in *sunpike.KubeletOpts, out *KubeletOpts, s conversion.Scope) error {
	out.CloudCfg = in.CloudCfg
	out.ProviderID = in.ProviderID
	out.ExtraArgs = in.ExtraArgs
	out.NodeLabels = *(*map[string]string)(unsafe.Pointer(&in.NodeLabels))
	out.NodeTaints = *(*map[string]string)(unsafe.Pointer(&in.NodeTaints))
	return nil
}

// Convert_sunpike_KubeletOpts_To_v1alpha2_KubeletOpts is an autogenerated conversion function.
func Convert_sunpike_KubeletOpts_To_v1alpha2_KubeletOpts(in *sunpike.KubeletOpts, out *KubeletOpts, s conversion.Scope) error {
	return autoConvert_sunpike_KubeletOpts_To_v1alpha2_KubeletOpts(in, out, s)
}

func autoConvert_v1alpha2_LoadBalancer_To_sunpike_LoadBalancer(in *LoadBalancer, out *sunpike.LoadBalancer, s conversion.Scope) error {
	if err := Convert_v1alpha2_MetalLBOpts_To_sunpike_MetalLBOpts(&in.MetalLB, &out.MetalLB, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_LoadBalancer_To_sunpike_LoadBalancer is an autogenerated conversion function.
func Convert_v1alpha2_LoadBalancer_To_sunpike_LoadBalancer(in *LoadBalancer, out *sunpike.LoadBalancer, s conversion.Scope) error {
	return autoConvert_v1alpha2_LoadBalancer_To_sunpike_LoadBalancer(in, out, s)
}

func autoConvert_sunpike_LoadBalancer_To_v1alpha2_LoadBalancer(in *sunpike.LoadBalancer, out *LoadBalancer, s conversion.Scope) error {
	if err := Convert_sunpike_MetalLBOpts_To_v1alpha2_MetalLBOpts(&in.MetalLB, &out.MetalLB, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_LoadBalancer_To_v1alpha2_LoadBalancer is an autogenerated conversion function.
func Convert_sunpike_LoadBalancer_To_v1alpha2_LoadBalancer(in *sunpike.LoadBalancer, out *LoadBalancer, s conversion.Scope) error {
	return autoConvert_sunpike_LoadBalancer_To_v1alpha2_LoadBalancer(in, out, s)
}

func autoConvert_v1alpha2_LocalCloudProviderSpec_To_sunpike_LocalCloudProviderSpec(in *LocalCloudProviderSpec, out *sunpike.LocalCloudProviderSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_LocalCloudProviderSpec_To_sunpike_LocalCloudProviderSpec is an autogenerated conversion function.
func Convert_v1alpha2_LocalCloudProviderSpec_To_sunpike_LocalCloudProviderSpec(in *LocalCloudProviderSpec, out *sunpike.LocalCloudProviderSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_LocalCloudProviderSpec_To_sunpike_LocalCloudProviderSpec(in, out, s)
}

func autoConvert_sunpike_LocalCloudProviderSpec_To_v1alpha2_LocalCloudProviderSpec(in *sunpike.LocalCloudProviderSpec, out *LocalCloudProviderSpec, s conversion.Scope) error {
	return nil
}

// Convert_sunpike_LocalCloudProviderSpec_To_v1alpha2_LocalCloudProviderSpec is an autogenerated conversion function.
func Convert_sunpike_LocalCloudProviderSpec_To_v1alpha2_LocalCloudProviderSpec(in *sunpike.LocalCloudProviderSpec, out *LocalCloudProviderSpec, s conversion.Scope) error {
	return autoConvert_sunpike_LocalCloudProviderSpec_To_v1alpha2_LocalCloudProviderSpec(in, out, s)
}

func autoConvert_v1alpha2_LuigiOpts_To_sunpike_LuigiOpts(in *LuigiOpts, out *sunpike.LuigiOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha2_LuigiOpts_To_sunpike_LuigiOpts is an autogenerated conversion function.
func Convert_v1alpha2_LuigiOpts_To_sunpike_LuigiOpts(in *LuigiOpts, out *sunpike.LuigiOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_LuigiOpts_To_sunpike_LuigiOpts(in, out, s)
}

func autoConvert_sunpike_LuigiOpts_To_v1alpha2_LuigiOpts(in *sunpike.LuigiOpts, out *LuigiOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_LuigiOpts_To_v1alpha2_LuigiOpts is an autogenerated conversion function.
func Convert_sunpike_LuigiOpts_To_v1alpha2_LuigiOpts(in *sunpike.LuigiOpts, out *LuigiOpts, s conversion.Scope) error {
	return autoConvert_sunpike_LuigiOpts_To_v1alpha2_LuigiOpts(in, out, s)
}

func autoConvert_v1alpha2_MetalLBOpts_To_sunpike_MetalLBOpts(in *MetalLBOpts, out *sunpike.MetalLBOpts, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha2_MetalLBOpts_To_sunpike_MetalLBOpts is an autogenerated conversion function.
func Convert_v1alpha2_MetalLBOpts_To_sunpike_MetalLBOpts(in *MetalLBOpts, out *sunpike.MetalLBOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_MetalLBOpts_To_sunpike_MetalLBOpts(in, out, s)
}

func autoConvert_sunpike_MetalLBOpts_To_v1alpha2_MetalLBOpts(in *sunpike.MetalLBOpts, out *MetalLBOpts, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_MetalLBOpts_To_v1alpha2_MetalLBOpts is an autogenerated conversion function.
func Convert_sunpike_MetalLBOpts_To_v1alpha2_MetalLBOpts(in *sunpike.MetalLBOpts, out *MetalLBOpts, s conversion.Scope) error {
	return autoConvert_sunpike_MetalLBOpts_To_v1alpha2_MetalLBOpts(in, out, s)
}

func autoConvert_v1alpha2_Override_To_sunpike_Override(in *Override, out *sunpike.Override, s conversion.Scope) error {
	out.Params = *(*[]sunpike.Params)(unsafe.Pointer(&in.Params))
	return nil
}

// Convert_v1alpha2_Override_To_sunpike_Override is an autogenerated conversion function.
func Convert_v1alpha2_Override_To_sunpike_Override(in *Override, out *sunpike.Override, s conversion.Scope) error {
	return autoConvert_v1alpha2_Override_To_sunpike_Override(in, out, s)
}

func autoConvert_sunpike_Override_To_v1alpha2_Override(in *sunpike.Override, out *Override, s conversion.Scope) error {
	out.Params = *(*[]Params)(unsafe.Pointer(&in.Params))
	return nil
}

// Convert_sunpike_Override_To_v1alpha2_Override is an autogenerated conversion function.
func Convert_sunpike_Override_To_v1alpha2_Override(in *sunpike.Override, out *Override, s conversion.Scope) error {
	return autoConvert_sunpike_Override_To_v1alpha2_Override(in, out, s)
}

func autoConvert_v1alpha2_PF9_To_sunpike_PF9(in *PF9, out *sunpike.PF9, s conversion.Scope) error {
	out.Masterless = in.Masterless
	out.BouncerSlowReqWebhook = in.BouncerSlowReqWebhook
	out.IsAirgapped = in.IsAirgapped
	return nil
}

// Convert_v1alpha2_PF9_To_sunpike_PF9 is an autogenerated conversion function.
func Convert_v1alpha2_PF9_To_sunpike_PF9(in *PF9, out *sunpike.PF9, s conversion.Scope) error {
	return autoConvert_v1alpha2_PF9_To_sunpike_PF9(in, out, s)
}

func autoConvert_sunpike_PF9_To_v1alpha2_PF9(in *sunpike.PF9, out *PF9, s conversion.Scope) error {
	out.Masterless = in.Masterless
	out.BouncerSlowReqWebhook = in.BouncerSlowReqWebhook
	out.IsAirgapped = in.IsAirgapped
	return nil
}

// Convert_sunpike_PF9_To_v1alpha2_PF9 is an autogenerated conversion function.
func Convert_sunpike_PF9_To_v1alpha2_PF9(in *sunpike.PF9, out *PF9, s conversion.Scope) error {
	return autoConvert_sunpike_PF9_To_v1alpha2_PF9(in, out, s)
}

func autoConvert_v1alpha2_Params_To_sunpike_Params(in *Params, out *sunpike.Params, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_v1alpha2_Params_To_sunpike_Params is an autogenerated conversion function.
func Convert_v1alpha2_Params_To_sunpike_Params(in *Params, out *sunpike.Params, s conversion.Scope) error {
	return autoConvert_v1alpha2_Params_To_sunpike_Params(in, out, s)
}

func autoConvert_sunpike_Params_To_v1alpha2_Params(in *sunpike.Params, out *Params, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_sunpike_Params_To_v1alpha2_Params is an autogenerated conversion function.
func Convert_sunpike_Params_To_v1alpha2_Params(in *sunpike.Params, out *Params, s conversion.Scope) error {
	return autoConvert_sunpike_Params_To_v1alpha2_Params(in, out, s)
}

func autoConvert_v1alpha2_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(in *ProfileAgentOpts, out *sunpike.ProfileAgentOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_v1alpha2_ProfileAgentOpts_To_sunpike_ProfileAgentOpts is an autogenerated conversion function.
func Convert_v1alpha2_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(in *ProfileAgentOpts, out *sunpike.ProfileAgentOpts, s conversion.Scope) error {
	return autoConvert_v1alpha2_ProfileAgentOpts_To_sunpike_ProfileAgentOpts(in, out, s)
}

func autoConvert_sunpike_ProfileAgentOpts_To_v1alpha2_ProfileAgentOpts(in *sunpike.ProfileAgentOpts, out *ProfileAgentOpts, s conversion.Scope) error {
	out.Enabled = in.Enabled
	return nil
}

// Convert_sunpike_ProfileAgentOpts_To_v1alpha2_ProfileAgentOpts is an autogenerated conversion function.
func Convert_sunpike_ProfileAgentOpts_To_v1alpha2_ProfileAgentOpts(in *sunpike.ProfileAgentOpts, out *ProfileAgentOpts, s conversion.Scope) error {
	return autoConvert_sunpike_ProfileAgentOpts_To_v1alpha2_ProfileAgentOpts(in, out, s)
}

func autoConvert_v1alpha2_Region_To_sunpike_Region(in *Region, out *sunpike.Region, s conversion.Scope) error {
	out.Name = in.Name
	out.DisplayName = in.DisplayName
	return nil
}

// Convert_v1alpha2_Region_To_sunpike_Region is an autogenerated conversion function.
func Convert_v1alpha2_Region_To_sunpike_Region(in *Region, out *sunpike.Region, s conversion.Scope) error {
	return autoConvert_v1alpha2_Region_To_sunpike_Region(in, out, s)
}

func autoConvert_sunpike_Region_To_v1alpha2_Region(in *sunpike.Region, out *Region, s conversion.Scope) error {
	out.Name = in.Name
	out.DisplayName = in.DisplayName
	return nil
}

// Convert_sunpike_Region_To_v1alpha2_Region is an autogenerated conversion function.
func Convert_sunpike_Region_To_v1alpha2_Region(in *sunpike.Region, out *Region, s conversion.Scope) error {
	return autoConvert_sunpike_Region_To_v1alpha2_Region(in, out, s)
}

func autoConvert_v1alpha2_StorageBackend_To_sunpike_StorageBackend(in *StorageBackend, out *sunpike.StorageBackend, s conversion.Scope) error {
	if err := Convert_v1alpha2_EtcdOpts_To_sunpike_EtcdOpts(&in.Etcd, &out.Etcd, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_StorageBackend_To_sunpike_StorageBackend is an autogenerated conversion function.
func Convert_v1alpha2_StorageBackend_To_sunpike_StorageBackend(in *StorageBackend, out *sunpike.StorageBackend, s conversion.Scope) error {
	return autoConvert_v1alpha2_StorageBackend_To_sunpike_StorageBackend(in, out, s)
}

func autoConvert_sunpike_StorageBackend_To_v1alpha2_StorageBackend(in *sunpike.StorageBackend, out *StorageBackend, s conversion.Scope) error {
	if err := Convert_sunpike_EtcdOpts_To_v1alpha2_EtcdOpts(&in.Etcd, &out.Etcd, s); err != nil {
		return err
	}
	return nil
}

// Convert_sunpike_StorageBackend_To_v1alpha2_StorageBackend is an autogenerated conversion function.
func Convert_sunpike_StorageBackend_To_v1alpha2_StorageBackend(in *sunpike.StorageBackend, out *StorageBackend, s conversion.Scope) error {
	return autoConvert_sunpike_StorageBackend_To_v1alpha2_StorageBackend(in, out, s)
}

func autoConvert_v1alpha2_Toleration_To_sunpike_Toleration(in *Toleration, out *sunpike.Toleration, s conversion.Scope) error {
	out.Key = in.Key
	out.Operator = sunpike.TolerationOperator(in.Operator)
	out.Value = in.Value
	out.Effect = sunpike.TaintEffect(in.Effect)
	out.TolerationSeconds = (*int64)(unsafe.Pointer(in.TolerationSeconds))
	return nil
}

// Convert_v1alpha2_Toleration_To_sunpike_Toleration is an autogenerated conversion function.
func Convert_v1alpha2_Toleration_To_sunpike_Toleration(in *Toleration, out *sunpike.Toleration, s conversion.Scope) error {
	return autoConvert_v1alpha2_Toleration_To_sunpike_Toleration(in, out, s)
}

func autoConvert_sunpike_Toleration_To_v1alpha2_Toleration(in *sunpike.Toleration, out *Toleration, s conversion.Scope) error {
	out.Key = in.Key
	out.Operator = TolerationOperator(in.Operator)
	out.Value = in.Value
	out.Effect = TaintEffect(in.Effect)
	out.TolerationSeconds = (*int64)(unsafe.Pointer(in.TolerationSeconds))
	return nil
}

// Convert_sunpike_Toleration_To_v1alpha2_Toleration is an autogenerated conversion function.
func Convert_sunpike_Toleration_To_v1alpha2_Toleration(in *sunpike.Toleration, out *Toleration, s conversion.Scope) error {
	return autoConvert_sunpike_Toleration_To_v1alpha2_Toleration(in, out, s)
}
