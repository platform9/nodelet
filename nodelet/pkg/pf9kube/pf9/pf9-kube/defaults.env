KUBERNETES_VERSION=${KUBERNETES_VERSION:-v1.21.3}
FLANNEL_VERSION=${FLANNEL_VERSION:-v0.14.0}
PF9_ETCD_AWS_CLUSTER_VERSION=1.0.0
PF9_USER=pf9
PF9_GROUP=pf9group
KUBELET_DATA_DIR=/var/lib/kubelet
KUBELET_BIN=`pwd`/bin/kubelet
KUBELET_PIDFILE=/var/run/kubelet.pid
KUBELET_LOG=/var/log/pf9/kube/kubelet.log
SERVICE_ACCOUNT_KEY=$KUBELET_DATA_DIR/service_account_key.pem
VGS=/sbin/vgs
VGCHANGE=/sbin/vgchange
DOCKER_UBUNTU_REPO_KEY="${CONF_SRC_DIR}/keys/download_docker_com_ubuntu_repo.asc"
DOCKER_CENTOS_REPO_KEY="${CONF_SRC_DIR}/keys/download_docker_com_centos_repo.asc"
DOCKER_VOLUME_GROUP="docker-vg"
DOCKER_GRAPH="${DOCKER_ROOT}/docker"
DOCKER_SOCKET=/var/run/docker.sock
DOCKER_SOCKET_GROUP=$PF9_GROUP
CONTAINERD_SOCKET=/run/containerd/containerd.sock
DOCKER_LOG_DRIVER=json-file
DOCKER_LOG_MAX_SIZE=10m
DOCKER_LOG_MAX_FILE=10
DOCKER_CGROUP="native.cgroupdriver=systemd"
CONTAINERD_CGROUP="systemd"
# The systemd drop-in folder for the docker service
# See https://www.freedesktop.org/software/systemd/man/systemd.unit.html
DOCKER_DROPIN_DIR=/etc/systemd/system/docker.service.d
CONTAINERD_DROPIN_DIR=/etc/systemd/system/containerd.service.d
CONF_SRC_DIR=/opt/pf9/pf9-kube/conf
CONF_DST_DIR=/etc/pf9/kube.d
CNI_CONFIG_DIR=/etc/cni/net.d
CNI_BIN_DIR=/opt/cni/bin
BUNDLED_IMAGES_DIR="/opt/pf9/pf9-kube/images/"
KUBECONFIG="${CONF_DST_DIR}/kubeconfigs/admin.yaml"
KUBECTL_BIN="bin/kubectl -v=8"
KUBECTL_BIN_SILENT="bin/kubectl"
KUBECTL="${KUBECTL_BIN} --kubeconfig=${KUBECONFIG} --context=default-context"
KUBECTL_SILENT="${KUBECTL_BIN_SILENT} --kubeconfig=${KUBECONFIG} --context=default-context"
KUBECTL_SYSTEM="${KUBECTL_BIN} --kubeconfig=${KUBECONFIG} --context=system-context"
KUSTOMIZE_BIN="bin/kustomize"
VAULT_ADDR="http://localhost:9080/vault"
DEFAULT_SIGNER_DATA_DIR="/etc/pf9/kube.d/signer"
SIGNER_DATA_DIR=${SIGNER_DATA_DIR:-${DEFAULT_SIGNER_DATA_DIR}}
if [ -f "/etc/pf9/kube.d/caproxy.env" ]; then
    source /etc/pf9/kube.d/caproxy.env
else
    CAPROXY_URL="http://localhost:9080/caproxy/v3"
fi

# Certificate directory assumed by make-ca-cert.sh
CERTS_DIR="${CONF_DST_DIR}/certs"
MAX_CERTS_RETRIES=10

source /etc/os-release
if [[ "$ID" == "centos" ]]; then
    CERTS_SERIAL_FILE="/etc/pf9/kube.srl"
elif [[ "$ID" == "rhel" ]]; then
    CERTS_SERIAL_FILE="/etc/pf9/kube.d/rootCA.srl"
fi

# TODO: make these configurable per cluster
MASTER_NAME=kubernetes-master
DNS_DOMAIN=cluster.local
DNS_REPLICAS=1

KEYSTONE_ETCDHOSTS_ENTRY="127.0.0.1 $KEYSTONE_DOMAIN"

AUTHN_WEBHOOK_ADDR="localhost:9977"
AUTHN_WEBHOOK_SANS="IP:127.0.0.1, DNS:localhost"
AUTHN_WEBHOOK_KEYSTONE_URL="http://localhost:8158/keystone"
AUTHN_WEBHOOK_VERSION=1.2.0
AUTHN_WEBHOOK_IMAGE="platform9/bouncer:$AUTHN_WEBHOOK_VERSION"
AUTHN_WEBHOOK_IMAGE_TARBALL="${BUNDLED_IMAGES_DIR}/bouncer-${AUTHN_WEBHOOK_VERSION}.tar"
AUTHN_WEBHOOK_CTR_NAME="bouncer"

# pf9 comms proxy settings configuration file
PF9_COMMS_PROXY_CONF="/etc/pf9/comms_proxy_cfg.json"
# 169.254.169.254 belongs to the 169.254/16 range of IPv4 Link-Local addresses (https://tools.ietf.org/html/rfc3927).
# This IP address in particular is significant because Amazon Web Services uses this IP address
# for instance metadata (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)
AWS_METADATA_IP="169.254.169.254"
OPENSTACK_METADATA_IP="169.254.169.254"

# pf9-kubelet systemd unit file
PF9_KUBELET_SYSTEMD_UNIT_TEMPLATE=/opt/pf9/pf9-kube/pf9-kubelet.service.template
SYSTEMD_RUNTIME_UNIT_DIR=/run/systemd/system
CLOUD_CONFIG_FILE=/etc/pf9/kube.d/cloud-config
ADMIN_ROLE=cluster-admin
KUBELET_ROLE=system:node
KUBE_PROXY_ROLE=system:node-proxier
KUBE_STACK_START_FILE_MARKER=/var/opt/pf9/is_node_booting_up
KUBELET_CONFIG_DIR=/var/opt/pf9/kube/kubelet-config
KUBELET_DYNAMIC_CONFIG_DIR=${KUBELET_CONFIG_DIR}/dynamic-config
KUBELET_BOOTSTRAP_CONFIG=${KUBELET_CONFIG_DIR}/bootstrap-config.yaml
KUBELET_DEFAULT_MASTER_CONFIGMAP_NAME=master-default-kubelet-config
KUBELET_DEFAULT_WORKER_CONFIGMAP_NAME=worker-default-kubelet-config

#etcd container image
ETCD_VERSION=3.4.14
ETCD_CONTAINER_IMG="gcr.io/etcd-development/etcd:v${ETCD_VERSION}"

# KEEPALIVED config directory
KEEPALIVED_VERSION="v2.1.3"
MASTER_VIP_KEEPALIVED_CONF_FILE="/etc/keepalived/keepalived.conf"

#VRRP configs
VRRP_HEALTH_CHECK_INTERVAL=10
VRRP_HEALTH_CHECK_RISE=2
VRRP_HEALTH_CHECK_FALL=6
VRRP_HEALTH_CHECK_WGET_TIMEOUT=8

# VRRP Health Check Script
VRRP_HEALTH_CHECK_SCRIPT=/opt/pf9/pf9-kube/vrrp_check_apiserver.sh

# Variables needed for nodelet phase 2 implementation
GEN_CERTS='Generate certs / Send signing request to CA'
PREP_CFG='Prepare configuration'
DOCKER_CFG='Configure Runtime'
DOCKER_START='Start Runtime'
ETCD_CFG='Configure etcd'
ETCD_START='Start etcd'
CNI_CFG='Configure CNI plugin'
NW_CFG='Network configuration'
AUTH_WEBHOOK='Configure and start auth web hook / pf9-bouncer'
KUBELET_CFG='Configure and start kubelet'
KUBE_PROXY_CFG='Configure and start kube-proxy'
K8S_API_CFG='Configure and start k8s API server'
K8S_API_CHK='Validate k8s API server responding'
NODE_TAINT='Apply and validate node taints'
DYN_KUBELET_CFG='Apply dynamic kubelet configuration'
UNCRDN_NODE='Uncordon node'
KEEPALIVED_CFG='Configure and start Keepalived'
COREDNS_CFG='Configure and start CoreDNS'

SERVICES_CIDR_V6="fd00:102::/116"
